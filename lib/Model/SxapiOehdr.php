<?php
/**
 * SxapiOehdr
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapiOehdr Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapiOehdr implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapi_oehdr';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'invoice_dt' => 'string',
        'inv_nr' => 'string',
        'inv_suf' => 'string',
        'cust_po' => 'string',
        'inv_type' => 'string',
        'refer' => 'string',
        'partner_id' => 'string',
        'buy_party' => 'string',
        'dept' => 'string',
        'order_disp' => 'string',
        'event' => 'string',
        'vend_no2' => 'string',
        'cancel_dt' => 'string',
        'ship_dt' => 'string',
        'promise_dt' => 'string',
        'req_ship_dt' => 'string',
        'ship_via' => 'string',
        'po_iss_dt' => 'string',
        'enter_dt' => 'string',
        'pkg_id' => 'string',
        'ack_type' => 'string',
        'current_dt' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user_inv' => 'string',
        'trans_type' => 'string',
        'ship_instr' => 'string',
        'placed_by' => 'string',
        'whse' => 'string',
        'core_chg' => 'string',
        'datc_cost' => 'string',
        'down_pmt' => 'string',
        'spec_disc_amt' => 'string',
        'restock_amt' => 'string',
        'tax_amt' => 'string',
        'gst_tax_amt' => 'string',
        'pst_tax_amt' => 'string',
        'wo_disc_amt' => 'string',
        'terms_disc_amt' => 'string',
        'co_no' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'invoice_dt' => null,
        'inv_nr' => null,
        'inv_suf' => null,
        'cust_po' => null,
        'inv_type' => null,
        'refer' => null,
        'partner_id' => null,
        'buy_party' => null,
        'dept' => null,
        'order_disp' => null,
        'event' => null,
        'vend_no2' => null,
        'cancel_dt' => null,
        'ship_dt' => null,
        'promise_dt' => null,
        'req_ship_dt' => null,
        'ship_via' => null,
        'po_iss_dt' => null,
        'enter_dt' => null,
        'pkg_id' => null,
        'ack_type' => null,
        'current_dt' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user_inv' => null,
        'trans_type' => null,
        'ship_instr' => null,
        'placed_by' => null,
        'whse' => null,
        'core_chg' => null,
        'datc_cost' => null,
        'down_pmt' => null,
        'spec_disc_amt' => null,
        'restock_amt' => null,
        'tax_amt' => null,
        'gst_tax_amt' => null,
        'pst_tax_amt' => null,
        'wo_disc_amt' => null,
        'terms_disc_amt' => null,
        'co_no' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'invoice_dt' => 'invoiceDt',
        'inv_nr' => 'invNr',
        'inv_suf' => 'invSuf',
        'cust_po' => 'custPo',
        'inv_type' => 'invType',
        'refer' => 'refer',
        'partner_id' => 'partnerId',
        'buy_party' => 'buyParty',
        'dept' => 'dept',
        'order_disp' => 'orderDisp',
        'event' => 'event',
        'vend_no2' => 'vendNo2',
        'cancel_dt' => 'cancelDt',
        'ship_dt' => 'shipDt',
        'promise_dt' => 'promiseDt',
        'req_ship_dt' => 'reqShipDt',
        'ship_via' => 'shipVia',
        'po_iss_dt' => 'poIssDt',
        'enter_dt' => 'enterDt',
        'pkg_id' => 'pkgId',
        'ack_type' => 'ackType',
        'current_dt' => 'currentDt',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user_inv' => 'userInv',
        'trans_type' => 'transType',
        'ship_instr' => 'shipInstr',
        'placed_by' => 'placedBy',
        'whse' => 'whse',
        'core_chg' => 'coreChg',
        'datc_cost' => 'datcCost',
        'down_pmt' => 'downPmt',
        'spec_disc_amt' => 'specDiscAmt',
        'restock_amt' => 'restockAmt',
        'tax_amt' => 'taxAmt',
        'gst_tax_amt' => 'gstTaxAmt',
        'pst_tax_amt' => 'pstTaxAmt',
        'wo_disc_amt' => 'woDiscAmt',
        'terms_disc_amt' => 'termsDiscAmt',
        'co_no' => 'coNo'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'invoice_dt' => 'setInvoiceDt',
        'inv_nr' => 'setInvNr',
        'inv_suf' => 'setInvSuf',
        'cust_po' => 'setCustPo',
        'inv_type' => 'setInvType',
        'refer' => 'setRefer',
        'partner_id' => 'setPartnerId',
        'buy_party' => 'setBuyParty',
        'dept' => 'setDept',
        'order_disp' => 'setOrderDisp',
        'event' => 'setEvent',
        'vend_no2' => 'setVendNo2',
        'cancel_dt' => 'setCancelDt',
        'ship_dt' => 'setShipDt',
        'promise_dt' => 'setPromiseDt',
        'req_ship_dt' => 'setReqShipDt',
        'ship_via' => 'setShipVia',
        'po_iss_dt' => 'setPoIssDt',
        'enter_dt' => 'setEnterDt',
        'pkg_id' => 'setPkgId',
        'ack_type' => 'setAckType',
        'current_dt' => 'setCurrentDt',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user_inv' => 'setUserInv',
        'trans_type' => 'setTransType',
        'ship_instr' => 'setShipInstr',
        'placed_by' => 'setPlacedBy',
        'whse' => 'setWhse',
        'core_chg' => 'setCoreChg',
        'datc_cost' => 'setDatcCost',
        'down_pmt' => 'setDownPmt',
        'spec_disc_amt' => 'setSpecDiscAmt',
        'restock_amt' => 'setRestockAmt',
        'tax_amt' => 'setTaxAmt',
        'gst_tax_amt' => 'setGstTaxAmt',
        'pst_tax_amt' => 'setPstTaxAmt',
        'wo_disc_amt' => 'setWoDiscAmt',
        'terms_disc_amt' => 'setTermsDiscAmt',
        'co_no' => 'setCoNo'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'invoice_dt' => 'getInvoiceDt',
        'inv_nr' => 'getInvNr',
        'inv_suf' => 'getInvSuf',
        'cust_po' => 'getCustPo',
        'inv_type' => 'getInvType',
        'refer' => 'getRefer',
        'partner_id' => 'getPartnerId',
        'buy_party' => 'getBuyParty',
        'dept' => 'getDept',
        'order_disp' => 'getOrderDisp',
        'event' => 'getEvent',
        'vend_no2' => 'getVendNo2',
        'cancel_dt' => 'getCancelDt',
        'ship_dt' => 'getShipDt',
        'promise_dt' => 'getPromiseDt',
        'req_ship_dt' => 'getReqShipDt',
        'ship_via' => 'getShipVia',
        'po_iss_dt' => 'getPoIssDt',
        'enter_dt' => 'getEnterDt',
        'pkg_id' => 'getPkgId',
        'ack_type' => 'getAckType',
        'current_dt' => 'getCurrentDt',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user_inv' => 'getUserInv',
        'trans_type' => 'getTransType',
        'ship_instr' => 'getShipInstr',
        'placed_by' => 'getPlacedBy',
        'whse' => 'getWhse',
        'core_chg' => 'getCoreChg',
        'datc_cost' => 'getDatcCost',
        'down_pmt' => 'getDownPmt',
        'spec_disc_amt' => 'getSpecDiscAmt',
        'restock_amt' => 'getRestockAmt',
        'tax_amt' => 'getTaxAmt',
        'gst_tax_amt' => 'getGstTaxAmt',
        'pst_tax_amt' => 'getPstTaxAmt',
        'wo_disc_amt' => 'getWoDiscAmt',
        'terms_disc_amt' => 'getTermsDiscAmt',
        'co_no' => 'getCoNo'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['invoice_dt'] = isset($data['invoice_dt']) ? $data['invoice_dt'] : null;
        $this->container['inv_nr'] = isset($data['inv_nr']) ? $data['inv_nr'] : null;
        $this->container['inv_suf'] = isset($data['inv_suf']) ? $data['inv_suf'] : null;
        $this->container['cust_po'] = isset($data['cust_po']) ? $data['cust_po'] : null;
        $this->container['inv_type'] = isset($data['inv_type']) ? $data['inv_type'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['partner_id'] = isset($data['partner_id']) ? $data['partner_id'] : null;
        $this->container['buy_party'] = isset($data['buy_party']) ? $data['buy_party'] : null;
        $this->container['dept'] = isset($data['dept']) ? $data['dept'] : null;
        $this->container['order_disp'] = isset($data['order_disp']) ? $data['order_disp'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['vend_no2'] = isset($data['vend_no2']) ? $data['vend_no2'] : null;
        $this->container['cancel_dt'] = isset($data['cancel_dt']) ? $data['cancel_dt'] : null;
        $this->container['ship_dt'] = isset($data['ship_dt']) ? $data['ship_dt'] : null;
        $this->container['promise_dt'] = isset($data['promise_dt']) ? $data['promise_dt'] : null;
        $this->container['req_ship_dt'] = isset($data['req_ship_dt']) ? $data['req_ship_dt'] : null;
        $this->container['ship_via'] = isset($data['ship_via']) ? $data['ship_via'] : null;
        $this->container['po_iss_dt'] = isset($data['po_iss_dt']) ? $data['po_iss_dt'] : null;
        $this->container['enter_dt'] = isset($data['enter_dt']) ? $data['enter_dt'] : null;
        $this->container['pkg_id'] = isset($data['pkg_id']) ? $data['pkg_id'] : null;
        $this->container['ack_type'] = isset($data['ack_type']) ? $data['ack_type'] : null;
        $this->container['current_dt'] = isset($data['current_dt']) ? $data['current_dt'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user_inv'] = isset($data['user_inv']) ? $data['user_inv'] : null;
        $this->container['trans_type'] = isset($data['trans_type']) ? $data['trans_type'] : null;
        $this->container['ship_instr'] = isset($data['ship_instr']) ? $data['ship_instr'] : null;
        $this->container['placed_by'] = isset($data['placed_by']) ? $data['placed_by'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['core_chg'] = isset($data['core_chg']) ? $data['core_chg'] : null;
        $this->container['datc_cost'] = isset($data['datc_cost']) ? $data['datc_cost'] : null;
        $this->container['down_pmt'] = isset($data['down_pmt']) ? $data['down_pmt'] : null;
        $this->container['spec_disc_amt'] = isset($data['spec_disc_amt']) ? $data['spec_disc_amt'] : null;
        $this->container['restock_amt'] = isset($data['restock_amt']) ? $data['restock_amt'] : null;
        $this->container['tax_amt'] = isset($data['tax_amt']) ? $data['tax_amt'] : null;
        $this->container['gst_tax_amt'] = isset($data['gst_tax_amt']) ? $data['gst_tax_amt'] : null;
        $this->container['pst_tax_amt'] = isset($data['pst_tax_amt']) ? $data['pst_tax_amt'] : null;
        $this->container['wo_disc_amt'] = isset($data['wo_disc_amt']) ? $data['wo_disc_amt'] : null;
        $this->container['terms_disc_amt'] = isset($data['terms_disc_amt']) ? $data['terms_disc_amt'] : null;
        $this->container['co_no'] = isset($data['co_no']) ? $data['co_no'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets invoice_dt
     *
     * @return string
     */
    public function getInvoiceDt()
    {
        return $this->container['invoice_dt'];
    }

    /**
     * Sets invoice_dt
     *
     * @param string $invoice_dt invoice_dt
     *
     * @return $this
     */
    public function setInvoiceDt($invoice_dt)
    {
        $this->container['invoice_dt'] = $invoice_dt;

        return $this;
    }

    /**
     * Gets inv_nr
     *
     * @return string
     */
    public function getInvNr()
    {
        return $this->container['inv_nr'];
    }

    /**
     * Sets inv_nr
     *
     * @param string $inv_nr inv_nr
     *
     * @return $this
     */
    public function setInvNr($inv_nr)
    {
        $this->container['inv_nr'] = $inv_nr;

        return $this;
    }

    /**
     * Gets inv_suf
     *
     * @return string
     */
    public function getInvSuf()
    {
        return $this->container['inv_suf'];
    }

    /**
     * Sets inv_suf
     *
     * @param string $inv_suf inv_suf
     *
     * @return $this
     */
    public function setInvSuf($inv_suf)
    {
        $this->container['inv_suf'] = $inv_suf;

        return $this;
    }

    /**
     * Gets cust_po
     *
     * @return string
     */
    public function getCustPo()
    {
        return $this->container['cust_po'];
    }

    /**
     * Sets cust_po
     *
     * @param string $cust_po cust_po
     *
     * @return $this
     */
    public function setCustPo($cust_po)
    {
        $this->container['cust_po'] = $cust_po;

        return $this;
    }

    /**
     * Gets inv_type
     *
     * @return string
     */
    public function getInvType()
    {
        return $this->container['inv_type'];
    }

    /**
     * Sets inv_type
     *
     * @param string $inv_type inv_type
     *
     * @return $this
     */
    public function setInvType($inv_type)
    {
        $this->container['inv_type'] = $inv_type;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets partner_id
     *
     * @return string
     */
    public function getPartnerId()
    {
        return $this->container['partner_id'];
    }

    /**
     * Sets partner_id
     *
     * @param string $partner_id partner_id
     *
     * @return $this
     */
    public function setPartnerId($partner_id)
    {
        $this->container['partner_id'] = $partner_id;

        return $this;
    }

    /**
     * Gets buy_party
     *
     * @return string
     */
    public function getBuyParty()
    {
        return $this->container['buy_party'];
    }

    /**
     * Sets buy_party
     *
     * @param string $buy_party buy_party
     *
     * @return $this
     */
    public function setBuyParty($buy_party)
    {
        $this->container['buy_party'] = $buy_party;

        return $this;
    }

    /**
     * Gets dept
     *
     * @return string
     */
    public function getDept()
    {
        return $this->container['dept'];
    }

    /**
     * Sets dept
     *
     * @param string $dept dept
     *
     * @return $this
     */
    public function setDept($dept)
    {
        $this->container['dept'] = $dept;

        return $this;
    }

    /**
     * Gets order_disp
     *
     * @return string
     */
    public function getOrderDisp()
    {
        return $this->container['order_disp'];
    }

    /**
     * Sets order_disp
     *
     * @param string $order_disp order_disp
     *
     * @return $this
     */
    public function setOrderDisp($order_disp)
    {
        $this->container['order_disp'] = $order_disp;

        return $this;
    }

    /**
     * Gets event
     *
     * @return string
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param string $event event
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets vend_no2
     *
     * @return string
     */
    public function getVendNo2()
    {
        return $this->container['vend_no2'];
    }

    /**
     * Sets vend_no2
     *
     * @param string $vend_no2 vend_no2
     *
     * @return $this
     */
    public function setVendNo2($vend_no2)
    {
        $this->container['vend_no2'] = $vend_no2;

        return $this;
    }

    /**
     * Gets cancel_dt
     *
     * @return string
     */
    public function getCancelDt()
    {
        return $this->container['cancel_dt'];
    }

    /**
     * Sets cancel_dt
     *
     * @param string $cancel_dt cancel_dt
     *
     * @return $this
     */
    public function setCancelDt($cancel_dt)
    {
        $this->container['cancel_dt'] = $cancel_dt;

        return $this;
    }

    /**
     * Gets ship_dt
     *
     * @return string
     */
    public function getShipDt()
    {
        return $this->container['ship_dt'];
    }

    /**
     * Sets ship_dt
     *
     * @param string $ship_dt ship_dt
     *
     * @return $this
     */
    public function setShipDt($ship_dt)
    {
        $this->container['ship_dt'] = $ship_dt;

        return $this;
    }

    /**
     * Gets promise_dt
     *
     * @return string
     */
    public function getPromiseDt()
    {
        return $this->container['promise_dt'];
    }

    /**
     * Sets promise_dt
     *
     * @param string $promise_dt promise_dt
     *
     * @return $this
     */
    public function setPromiseDt($promise_dt)
    {
        $this->container['promise_dt'] = $promise_dt;

        return $this;
    }

    /**
     * Gets req_ship_dt
     *
     * @return string
     */
    public function getReqShipDt()
    {
        return $this->container['req_ship_dt'];
    }

    /**
     * Sets req_ship_dt
     *
     * @param string $req_ship_dt req_ship_dt
     *
     * @return $this
     */
    public function setReqShipDt($req_ship_dt)
    {
        $this->container['req_ship_dt'] = $req_ship_dt;

        return $this;
    }

    /**
     * Gets ship_via
     *
     * @return string
     */
    public function getShipVia()
    {
        return $this->container['ship_via'];
    }

    /**
     * Sets ship_via
     *
     * @param string $ship_via ship_via
     *
     * @return $this
     */
    public function setShipVia($ship_via)
    {
        $this->container['ship_via'] = $ship_via;

        return $this;
    }

    /**
     * Gets po_iss_dt
     *
     * @return string
     */
    public function getPoIssDt()
    {
        return $this->container['po_iss_dt'];
    }

    /**
     * Sets po_iss_dt
     *
     * @param string $po_iss_dt po_iss_dt
     *
     * @return $this
     */
    public function setPoIssDt($po_iss_dt)
    {
        $this->container['po_iss_dt'] = $po_iss_dt;

        return $this;
    }

    /**
     * Gets enter_dt
     *
     * @return string
     */
    public function getEnterDt()
    {
        return $this->container['enter_dt'];
    }

    /**
     * Sets enter_dt
     *
     * @param string $enter_dt enter_dt
     *
     * @return $this
     */
    public function setEnterDt($enter_dt)
    {
        $this->container['enter_dt'] = $enter_dt;

        return $this;
    }

    /**
     * Gets pkg_id
     *
     * @return string
     */
    public function getPkgId()
    {
        return $this->container['pkg_id'];
    }

    /**
     * Sets pkg_id
     *
     * @param string $pkg_id pkg_id
     *
     * @return $this
     */
    public function setPkgId($pkg_id)
    {
        $this->container['pkg_id'] = $pkg_id;

        return $this;
    }

    /**
     * Gets ack_type
     *
     * @return string
     */
    public function getAckType()
    {
        return $this->container['ack_type'];
    }

    /**
     * Sets ack_type
     *
     * @param string $ack_type ack_type
     *
     * @return $this
     */
    public function setAckType($ack_type)
    {
        $this->container['ack_type'] = $ack_type;

        return $this;
    }

    /**
     * Gets current_dt
     *
     * @return string
     */
    public function getCurrentDt()
    {
        return $this->container['current_dt'];
    }

    /**
     * Sets current_dt
     *
     * @param string $current_dt current_dt
     *
     * @return $this
     */
    public function setCurrentDt($current_dt)
    {
        $this->container['current_dt'] = $current_dt;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user_inv
     *
     * @return string
     */
    public function getUserInv()
    {
        return $this->container['user_inv'];
    }

    /**
     * Sets user_inv
     *
     * @param string $user_inv user_inv
     *
     * @return $this
     */
    public function setUserInv($user_inv)
    {
        $this->container['user_inv'] = $user_inv;

        return $this;
    }

    /**
     * Gets trans_type
     *
     * @return string
     */
    public function getTransType()
    {
        return $this->container['trans_type'];
    }

    /**
     * Sets trans_type
     *
     * @param string $trans_type trans_type
     *
     * @return $this
     */
    public function setTransType($trans_type)
    {
        $this->container['trans_type'] = $trans_type;

        return $this;
    }

    /**
     * Gets ship_instr
     *
     * @return string
     */
    public function getShipInstr()
    {
        return $this->container['ship_instr'];
    }

    /**
     * Sets ship_instr
     *
     * @param string $ship_instr ship_instr
     *
     * @return $this
     */
    public function setShipInstr($ship_instr)
    {
        $this->container['ship_instr'] = $ship_instr;

        return $this;
    }

    /**
     * Gets placed_by
     *
     * @return string
     */
    public function getPlacedBy()
    {
        return $this->container['placed_by'];
    }

    /**
     * Sets placed_by
     *
     * @param string $placed_by placed_by
     *
     * @return $this
     */
    public function setPlacedBy($placed_by)
    {
        $this->container['placed_by'] = $placed_by;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets core_chg
     *
     * @return string
     */
    public function getCoreChg()
    {
        return $this->container['core_chg'];
    }

    /**
     * Sets core_chg
     *
     * @param string $core_chg core_chg
     *
     * @return $this
     */
    public function setCoreChg($core_chg)
    {
        $this->container['core_chg'] = $core_chg;

        return $this;
    }

    /**
     * Gets datc_cost
     *
     * @return string
     */
    public function getDatcCost()
    {
        return $this->container['datc_cost'];
    }

    /**
     * Sets datc_cost
     *
     * @param string $datc_cost datc_cost
     *
     * @return $this
     */
    public function setDatcCost($datc_cost)
    {
        $this->container['datc_cost'] = $datc_cost;

        return $this;
    }

    /**
     * Gets down_pmt
     *
     * @return string
     */
    public function getDownPmt()
    {
        return $this->container['down_pmt'];
    }

    /**
     * Sets down_pmt
     *
     * @param string $down_pmt down_pmt
     *
     * @return $this
     */
    public function setDownPmt($down_pmt)
    {
        $this->container['down_pmt'] = $down_pmt;

        return $this;
    }

    /**
     * Gets spec_disc_amt
     *
     * @return string
     */
    public function getSpecDiscAmt()
    {
        return $this->container['spec_disc_amt'];
    }

    /**
     * Sets spec_disc_amt
     *
     * @param string $spec_disc_amt spec_disc_amt
     *
     * @return $this
     */
    public function setSpecDiscAmt($spec_disc_amt)
    {
        $this->container['spec_disc_amt'] = $spec_disc_amt;

        return $this;
    }

    /**
     * Gets restock_amt
     *
     * @return string
     */
    public function getRestockAmt()
    {
        return $this->container['restock_amt'];
    }

    /**
     * Sets restock_amt
     *
     * @param string $restock_amt restock_amt
     *
     * @return $this
     */
    public function setRestockAmt($restock_amt)
    {
        $this->container['restock_amt'] = $restock_amt;

        return $this;
    }

    /**
     * Gets tax_amt
     *
     * @return string
     */
    public function getTaxAmt()
    {
        return $this->container['tax_amt'];
    }

    /**
     * Sets tax_amt
     *
     * @param string $tax_amt tax_amt
     *
     * @return $this
     */
    public function setTaxAmt($tax_amt)
    {
        $this->container['tax_amt'] = $tax_amt;

        return $this;
    }

    /**
     * Gets gst_tax_amt
     *
     * @return string
     */
    public function getGstTaxAmt()
    {
        return $this->container['gst_tax_amt'];
    }

    /**
     * Sets gst_tax_amt
     *
     * @param string $gst_tax_amt gst_tax_amt
     *
     * @return $this
     */
    public function setGstTaxAmt($gst_tax_amt)
    {
        $this->container['gst_tax_amt'] = $gst_tax_amt;

        return $this;
    }

    /**
     * Gets pst_tax_amt
     *
     * @return string
     */
    public function getPstTaxAmt()
    {
        return $this->container['pst_tax_amt'];
    }

    /**
     * Sets pst_tax_amt
     *
     * @param string $pst_tax_amt pst_tax_amt
     *
     * @return $this
     */
    public function setPstTaxAmt($pst_tax_amt)
    {
        $this->container['pst_tax_amt'] = $pst_tax_amt;

        return $this;
    }

    /**
     * Gets wo_disc_amt
     *
     * @return string
     */
    public function getWoDiscAmt()
    {
        return $this->container['wo_disc_amt'];
    }

    /**
     * Sets wo_disc_amt
     *
     * @param string $wo_disc_amt wo_disc_amt
     *
     * @return $this
     */
    public function setWoDiscAmt($wo_disc_amt)
    {
        $this->container['wo_disc_amt'] = $wo_disc_amt;

        return $this;
    }

    /**
     * Gets terms_disc_amt
     *
     * @return string
     */
    public function getTermsDiscAmt()
    {
        return $this->container['terms_disc_amt'];
    }

    /**
     * Sets terms_disc_amt
     *
     * @param string $terms_disc_amt terms_disc_amt
     *
     * @return $this
     */
    public function setTermsDiscAmt($terms_disc_amt)
    {
        $this->container['terms_disc_amt'] = $terms_disc_amt;

        return $this;
    }

    /**
     * Gets co_no
     *
     * @return string
     */
    public function getCoNo()
    {
        return $this->container['co_no'];
    }

    /**
     * Sets co_no
     *
     * @param string $co_no co_no
     *
     * @return $this
     */
    public function setCoNo($co_no)
    {
        $this->container['co_no'] = $co_no;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


