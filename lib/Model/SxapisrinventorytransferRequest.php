<?php
/**
 * SxapisrinventorytransferRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapisrinventorytransferRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapisrinventorytransferRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapisrinventorytransfer_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'company_number' => 'int',
        'operator_init' => 'string',
        'operator_password' => 'string',
        'storeroom_inventory_type' => 'string',
        'product_code' => 'string',
        'from_warehouse' => 'string',
        'to_warehouse' => 'string',
        'quantity_shipped' => 'double',
        'unit' => 'string',
        'unavailable_inventory_flag' => 'bool',
        'unavailable_reason_type' => 'string',
        'reference' => 'string',
        't_injrnl' => '\Swagger\Client\Model\TInjrnlReq',
        't_infieldvalue' => '\Swagger\Client\Model\TInfieldvalueReq'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'company_number' => 'int64',
        'operator_init' => null,
        'operator_password' => null,
        'storeroom_inventory_type' => null,
        'product_code' => null,
        'from_warehouse' => null,
        'to_warehouse' => null,
        'quantity_shipped' => 'double',
        'unit' => null,
        'unavailable_inventory_flag' => null,
        'unavailable_reason_type' => null,
        'reference' => null,
        't_injrnl' => null,
        't_infieldvalue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_number' => 'companyNumber',
        'operator_init' => 'operatorInit',
        'operator_password' => 'operatorPassword',
        'storeroom_inventory_type' => 'storeroomInventoryType',
        'product_code' => 'productCode',
        'from_warehouse' => 'fromWarehouse',
        'to_warehouse' => 'toWarehouse',
        'quantity_shipped' => 'quantityShipped',
        'unit' => 'unit',
        'unavailable_inventory_flag' => 'unavailableInventoryFlag',
        'unavailable_reason_type' => 'unavailableReasonType',
        'reference' => 'reference',
        't_injrnl' => 'tInjrnl',
        't_infieldvalue' => 'tInfieldvalue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_number' => 'setCompanyNumber',
        'operator_init' => 'setOperatorInit',
        'operator_password' => 'setOperatorPassword',
        'storeroom_inventory_type' => 'setStoreroomInventoryType',
        'product_code' => 'setProductCode',
        'from_warehouse' => 'setFromWarehouse',
        'to_warehouse' => 'setToWarehouse',
        'quantity_shipped' => 'setQuantityShipped',
        'unit' => 'setUnit',
        'unavailable_inventory_flag' => 'setUnavailableInventoryFlag',
        'unavailable_reason_type' => 'setUnavailableReasonType',
        'reference' => 'setReference',
        't_injrnl' => 'setTInjrnl',
        't_infieldvalue' => 'setTInfieldvalue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_number' => 'getCompanyNumber',
        'operator_init' => 'getOperatorInit',
        'operator_password' => 'getOperatorPassword',
        'storeroom_inventory_type' => 'getStoreroomInventoryType',
        'product_code' => 'getProductCode',
        'from_warehouse' => 'getFromWarehouse',
        'to_warehouse' => 'getToWarehouse',
        'quantity_shipped' => 'getQuantityShipped',
        'unit' => 'getUnit',
        'unavailable_inventory_flag' => 'getUnavailableInventoryFlag',
        'unavailable_reason_type' => 'getUnavailableReasonType',
        'reference' => 'getReference',
        't_injrnl' => 'getTInjrnl',
        't_infieldvalue' => 'getTInfieldvalue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_number'] = isset($data['company_number']) ? $data['company_number'] : null;
        $this->container['operator_init'] = isset($data['operator_init']) ? $data['operator_init'] : null;
        $this->container['operator_password'] = isset($data['operator_password']) ? $data['operator_password'] : null;
        $this->container['storeroom_inventory_type'] = isset($data['storeroom_inventory_type']) ? $data['storeroom_inventory_type'] : null;
        $this->container['product_code'] = isset($data['product_code']) ? $data['product_code'] : null;
        $this->container['from_warehouse'] = isset($data['from_warehouse']) ? $data['from_warehouse'] : null;
        $this->container['to_warehouse'] = isset($data['to_warehouse']) ? $data['to_warehouse'] : null;
        $this->container['quantity_shipped'] = isset($data['quantity_shipped']) ? $data['quantity_shipped'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['unavailable_inventory_flag'] = isset($data['unavailable_inventory_flag']) ? $data['unavailable_inventory_flag'] : null;
        $this->container['unavailable_reason_type'] = isset($data['unavailable_reason_type']) ? $data['unavailable_reason_type'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['t_injrnl'] = isset($data['t_injrnl']) ? $data['t_injrnl'] : null;
        $this->container['t_infieldvalue'] = isset($data['t_infieldvalue']) ? $data['t_infieldvalue'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_number
     *
     * @return int
     */
    public function getCompanyNumber()
    {
        return $this->container['company_number'];
    }

    /**
     * Sets company_number
     *
     * @param int $company_number company_number
     *
     * @return $this
     */
    public function setCompanyNumber($company_number)
    {
        $this->container['company_number'] = $company_number;

        return $this;
    }

    /**
     * Gets operator_init
     *
     * @return string
     */
    public function getOperatorInit()
    {
        return $this->container['operator_init'];
    }

    /**
     * Sets operator_init
     *
     * @param string $operator_init operator_init
     *
     * @return $this
     */
    public function setOperatorInit($operator_init)
    {
        $this->container['operator_init'] = $operator_init;

        return $this;
    }

    /**
     * Gets operator_password
     *
     * @return string
     */
    public function getOperatorPassword()
    {
        return $this->container['operator_password'];
    }

    /**
     * Sets operator_password
     *
     * @param string $operator_password operator_password
     *
     * @return $this
     */
    public function setOperatorPassword($operator_password)
    {
        $this->container['operator_password'] = $operator_password;

        return $this;
    }

    /**
     * Gets storeroom_inventory_type
     *
     * @return string
     */
    public function getStoreroomInventoryType()
    {
        return $this->container['storeroom_inventory_type'];
    }

    /**
     * Sets storeroom_inventory_type
     *
     * @param string $storeroom_inventory_type storeroom_inventory_type
     *
     * @return $this
     */
    public function setStoreroomInventoryType($storeroom_inventory_type)
    {
        $this->container['storeroom_inventory_type'] = $storeroom_inventory_type;

        return $this;
    }

    /**
     * Gets product_code
     *
     * @return string
     */
    public function getProductCode()
    {
        return $this->container['product_code'];
    }

    /**
     * Sets product_code
     *
     * @param string $product_code product_code
     *
     * @return $this
     */
    public function setProductCode($product_code)
    {
        $this->container['product_code'] = $product_code;

        return $this;
    }

    /**
     * Gets from_warehouse
     *
     * @return string
     */
    public function getFromWarehouse()
    {
        return $this->container['from_warehouse'];
    }

    /**
     * Sets from_warehouse
     *
     * @param string $from_warehouse from_warehouse
     *
     * @return $this
     */
    public function setFromWarehouse($from_warehouse)
    {
        $this->container['from_warehouse'] = $from_warehouse;

        return $this;
    }

    /**
     * Gets to_warehouse
     *
     * @return string
     */
    public function getToWarehouse()
    {
        return $this->container['to_warehouse'];
    }

    /**
     * Sets to_warehouse
     *
     * @param string $to_warehouse to_warehouse
     *
     * @return $this
     */
    public function setToWarehouse($to_warehouse)
    {
        $this->container['to_warehouse'] = $to_warehouse;

        return $this;
    }

    /**
     * Gets quantity_shipped
     *
     * @return double
     */
    public function getQuantityShipped()
    {
        return $this->container['quantity_shipped'];
    }

    /**
     * Sets quantity_shipped
     *
     * @param double $quantity_shipped quantity_shipped
     *
     * @return $this
     */
    public function setQuantityShipped($quantity_shipped)
    {
        $this->container['quantity_shipped'] = $quantity_shipped;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets unavailable_inventory_flag
     *
     * @return bool
     */
    public function getUnavailableInventoryFlag()
    {
        return $this->container['unavailable_inventory_flag'];
    }

    /**
     * Sets unavailable_inventory_flag
     *
     * @param bool $unavailable_inventory_flag unavailable_inventory_flag
     *
     * @return $this
     */
    public function setUnavailableInventoryFlag($unavailable_inventory_flag)
    {
        $this->container['unavailable_inventory_flag'] = $unavailable_inventory_flag;

        return $this;
    }

    /**
     * Gets unavailable_reason_type
     *
     * @return string
     */
    public function getUnavailableReasonType()
    {
        return $this->container['unavailable_reason_type'];
    }

    /**
     * Sets unavailable_reason_type
     *
     * @param string $unavailable_reason_type unavailable_reason_type
     *
     * @return $this
     */
    public function setUnavailableReasonType($unavailable_reason_type)
    {
        $this->container['unavailable_reason_type'] = $unavailable_reason_type;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference reference
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets t_injrnl
     *
     * @return \Swagger\Client\Model\TInjrnlReq
     */
    public function getTInjrnl()
    {
        return $this->container['t_injrnl'];
    }

    /**
     * Sets t_injrnl
     *
     * @param \Swagger\Client\Model\TInjrnlReq $t_injrnl t_injrnl
     *
     * @return $this
     */
    public function setTInjrnl($t_injrnl)
    {
        $this->container['t_injrnl'] = $t_injrnl;

        return $this;
    }

    /**
     * Gets t_infieldvalue
     *
     * @return \Swagger\Client\Model\TInfieldvalueReq
     */
    public function getTInfieldvalue()
    {
        return $this->container['t_infieldvalue'];
    }

    /**
     * Sets t_infieldvalue
     *
     * @param \Swagger\Client\Model\TInfieldvalueReq $t_infieldvalue t_infieldvalue
     *
     * @return $this
     */
    public function setTInfieldvalue($t_infieldvalue)
    {
        $this->container['t_infieldvalue'] = $t_infieldvalue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


