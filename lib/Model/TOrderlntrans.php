<?php
/**
 * TOrderlntrans
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TOrderlntrans Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TOrderlntrans implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-orderlntrans';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cono' => 'int',
        'custno' => 'double',
        'orderno' => 'string',
        'ordersuf' => 'int',
        'lineno' => 'int',
        'orderseqno' => 'int',
        'prod' => 'string',
        'descrip1' => 'string',
        'descrip2' => 'string',
        'qtyord' => 'double',
        'qtyship' => 'double',
        'qtybo' => 'double',
        'unit' => 'string',
        'custordunit' => 'string',
        'priceunit' => 'string',
        'custpriceunit' => 'string',
        'listprice' => 'double',
        'price' => 'double',
        'netamt' => 'double',
        'reqshipdt' => '\DateTime',
        'reqprod' => 'string',
        'entryseqno' => 'int',
        'itemtype' => 'string',
        'intseqno' => 'int',
        'printpricefl' => 'bool',
        'specnstype' => 'string',
        'botype' => 'string',
        'cubes' => 'double',
        'weight' => 'double',
        'bolclass' => 'string',
        'serlottype' => 'string',
        'binloc1' => 'string',
        'binloc2' => 'string',
        'binloc3' => 'string',
        'binloc4' => 'string',
        'upccode' => 'string',
        'brandmsg' => 'string',
        'arpvendno' => 'double',
        'prodcat' => 'string',
        'icspstatustype' => 'string',
        'vendprod' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cono' => 'int64',
        'custno' => 'double',
        'orderno' => null,
        'ordersuf' => 'int64',
        'lineno' => 'int64',
        'orderseqno' => 'int64',
        'prod' => null,
        'descrip1' => null,
        'descrip2' => null,
        'qtyord' => 'double',
        'qtyship' => 'double',
        'qtybo' => 'double',
        'unit' => null,
        'custordunit' => null,
        'priceunit' => null,
        'custpriceunit' => null,
        'listprice' => 'double',
        'price' => 'double',
        'netamt' => 'double',
        'reqshipdt' => 'date',
        'reqprod' => null,
        'entryseqno' => 'int64',
        'itemtype' => null,
        'intseqno' => 'int64',
        'printpricefl' => null,
        'specnstype' => null,
        'botype' => null,
        'cubes' => 'double',
        'weight' => 'double',
        'bolclass' => null,
        'serlottype' => null,
        'binloc1' => null,
        'binloc2' => null,
        'binloc3' => null,
        'binloc4' => null,
        'upccode' => null,
        'brandmsg' => null,
        'arpvendno' => 'double',
        'prodcat' => null,
        'icspstatustype' => null,
        'vendprod' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cono' => 'cono',
        'custno' => 'custno',
        'orderno' => 'orderno',
        'ordersuf' => 'ordersuf',
        'lineno' => 'lineno',
        'orderseqno' => 'orderseqno',
        'prod' => 'prod',
        'descrip1' => 'descrip1',
        'descrip2' => 'descrip2',
        'qtyord' => 'qtyord',
        'qtyship' => 'qtyship',
        'qtybo' => 'qtybo',
        'unit' => 'unit',
        'custordunit' => 'custordunit',
        'priceunit' => 'priceunit',
        'custpriceunit' => 'custpriceunit',
        'listprice' => 'listprice',
        'price' => 'price',
        'netamt' => 'netamt',
        'reqshipdt' => 'reqshipdt',
        'reqprod' => 'reqprod',
        'entryseqno' => 'entryseqno',
        'itemtype' => 'itemtype',
        'intseqno' => 'intseqno',
        'printpricefl' => 'printpricefl',
        'specnstype' => 'specnstype',
        'botype' => 'botype',
        'cubes' => 'cubes',
        'weight' => 'weight',
        'bolclass' => 'bolclass',
        'serlottype' => 'serlottype',
        'binloc1' => 'binloc1',
        'binloc2' => 'binloc2',
        'binloc3' => 'binloc3',
        'binloc4' => 'binloc4',
        'upccode' => 'upccode',
        'brandmsg' => 'brandmsg',
        'arpvendno' => 'arpvendno',
        'prodcat' => 'prodcat',
        'icspstatustype' => 'icspstatustype',
        'vendprod' => 'vendprod'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cono' => 'setCono',
        'custno' => 'setCustno',
        'orderno' => 'setOrderno',
        'ordersuf' => 'setOrdersuf',
        'lineno' => 'setLineno',
        'orderseqno' => 'setOrderseqno',
        'prod' => 'setProd',
        'descrip1' => 'setDescrip1',
        'descrip2' => 'setDescrip2',
        'qtyord' => 'setQtyord',
        'qtyship' => 'setQtyship',
        'qtybo' => 'setQtybo',
        'unit' => 'setUnit',
        'custordunit' => 'setCustordunit',
        'priceunit' => 'setPriceunit',
        'custpriceunit' => 'setCustpriceunit',
        'listprice' => 'setListprice',
        'price' => 'setPrice',
        'netamt' => 'setNetamt',
        'reqshipdt' => 'setReqshipdt',
        'reqprod' => 'setReqprod',
        'entryseqno' => 'setEntryseqno',
        'itemtype' => 'setItemtype',
        'intseqno' => 'setIntseqno',
        'printpricefl' => 'setPrintpricefl',
        'specnstype' => 'setSpecnstype',
        'botype' => 'setBotype',
        'cubes' => 'setCubes',
        'weight' => 'setWeight',
        'bolclass' => 'setBolclass',
        'serlottype' => 'setSerlottype',
        'binloc1' => 'setBinloc1',
        'binloc2' => 'setBinloc2',
        'binloc3' => 'setBinloc3',
        'binloc4' => 'setBinloc4',
        'upccode' => 'setUpccode',
        'brandmsg' => 'setBrandmsg',
        'arpvendno' => 'setArpvendno',
        'prodcat' => 'setProdcat',
        'icspstatustype' => 'setIcspstatustype',
        'vendprod' => 'setVendprod'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cono' => 'getCono',
        'custno' => 'getCustno',
        'orderno' => 'getOrderno',
        'ordersuf' => 'getOrdersuf',
        'lineno' => 'getLineno',
        'orderseqno' => 'getOrderseqno',
        'prod' => 'getProd',
        'descrip1' => 'getDescrip1',
        'descrip2' => 'getDescrip2',
        'qtyord' => 'getQtyord',
        'qtyship' => 'getQtyship',
        'qtybo' => 'getQtybo',
        'unit' => 'getUnit',
        'custordunit' => 'getCustordunit',
        'priceunit' => 'getPriceunit',
        'custpriceunit' => 'getCustpriceunit',
        'listprice' => 'getListprice',
        'price' => 'getPrice',
        'netamt' => 'getNetamt',
        'reqshipdt' => 'getReqshipdt',
        'reqprod' => 'getReqprod',
        'entryseqno' => 'getEntryseqno',
        'itemtype' => 'getItemtype',
        'intseqno' => 'getIntseqno',
        'printpricefl' => 'getPrintpricefl',
        'specnstype' => 'getSpecnstype',
        'botype' => 'getBotype',
        'cubes' => 'getCubes',
        'weight' => 'getWeight',
        'bolclass' => 'getBolclass',
        'serlottype' => 'getSerlottype',
        'binloc1' => 'getBinloc1',
        'binloc2' => 'getBinloc2',
        'binloc3' => 'getBinloc3',
        'binloc4' => 'getBinloc4',
        'upccode' => 'getUpccode',
        'brandmsg' => 'getBrandmsg',
        'arpvendno' => 'getArpvendno',
        'prodcat' => 'getProdcat',
        'icspstatustype' => 'getIcspstatustype',
        'vendprod' => 'getVendprod'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['custno'] = isset($data['custno']) ? $data['custno'] : null;
        $this->container['orderno'] = isset($data['orderno']) ? $data['orderno'] : null;
        $this->container['ordersuf'] = isset($data['ordersuf']) ? $data['ordersuf'] : null;
        $this->container['lineno'] = isset($data['lineno']) ? $data['lineno'] : null;
        $this->container['orderseqno'] = isset($data['orderseqno']) ? $data['orderseqno'] : null;
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['descrip1'] = isset($data['descrip1']) ? $data['descrip1'] : null;
        $this->container['descrip2'] = isset($data['descrip2']) ? $data['descrip2'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['qtyship'] = isset($data['qtyship']) ? $data['qtyship'] : null;
        $this->container['qtybo'] = isset($data['qtybo']) ? $data['qtybo'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['custordunit'] = isset($data['custordunit']) ? $data['custordunit'] : null;
        $this->container['priceunit'] = isset($data['priceunit']) ? $data['priceunit'] : null;
        $this->container['custpriceunit'] = isset($data['custpriceunit']) ? $data['custpriceunit'] : null;
        $this->container['listprice'] = isset($data['listprice']) ? $data['listprice'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['netamt'] = isset($data['netamt']) ? $data['netamt'] : null;
        $this->container['reqshipdt'] = isset($data['reqshipdt']) ? $data['reqshipdt'] : null;
        $this->container['reqprod'] = isset($data['reqprod']) ? $data['reqprod'] : null;
        $this->container['entryseqno'] = isset($data['entryseqno']) ? $data['entryseqno'] : null;
        $this->container['itemtype'] = isset($data['itemtype']) ? $data['itemtype'] : null;
        $this->container['intseqno'] = isset($data['intseqno']) ? $data['intseqno'] : null;
        $this->container['printpricefl'] = isset($data['printpricefl']) ? $data['printpricefl'] : null;
        $this->container['specnstype'] = isset($data['specnstype']) ? $data['specnstype'] : null;
        $this->container['botype'] = isset($data['botype']) ? $data['botype'] : null;
        $this->container['cubes'] = isset($data['cubes']) ? $data['cubes'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['bolclass'] = isset($data['bolclass']) ? $data['bolclass'] : null;
        $this->container['serlottype'] = isset($data['serlottype']) ? $data['serlottype'] : null;
        $this->container['binloc1'] = isset($data['binloc1']) ? $data['binloc1'] : null;
        $this->container['binloc2'] = isset($data['binloc2']) ? $data['binloc2'] : null;
        $this->container['binloc3'] = isset($data['binloc3']) ? $data['binloc3'] : null;
        $this->container['binloc4'] = isset($data['binloc4']) ? $data['binloc4'] : null;
        $this->container['upccode'] = isset($data['upccode']) ? $data['upccode'] : null;
        $this->container['brandmsg'] = isset($data['brandmsg']) ? $data['brandmsg'] : null;
        $this->container['arpvendno'] = isset($data['arpvendno']) ? $data['arpvendno'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['icspstatustype'] = isset($data['icspstatustype']) ? $data['icspstatustype'] : null;
        $this->container['vendprod'] = isset($data['vendprod']) ? $data['vendprod'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets custno
     *
     * @return double
     */
    public function getCustno()
    {
        return $this->container['custno'];
    }

    /**
     * Sets custno
     *
     * @param double $custno custno
     *
     * @return $this
     */
    public function setCustno($custno)
    {
        $this->container['custno'] = $custno;

        return $this;
    }

    /**
     * Gets orderno
     *
     * @return string
     */
    public function getOrderno()
    {
        return $this->container['orderno'];
    }

    /**
     * Sets orderno
     *
     * @param string $orderno orderno
     *
     * @return $this
     */
    public function setOrderno($orderno)
    {
        $this->container['orderno'] = $orderno;

        return $this;
    }

    /**
     * Gets ordersuf
     *
     * @return int
     */
    public function getOrdersuf()
    {
        return $this->container['ordersuf'];
    }

    /**
     * Sets ordersuf
     *
     * @param int $ordersuf ordersuf
     *
     * @return $this
     */
    public function setOrdersuf($ordersuf)
    {
        $this->container['ordersuf'] = $ordersuf;

        return $this;
    }

    /**
     * Gets lineno
     *
     * @return int
     */
    public function getLineno()
    {
        return $this->container['lineno'];
    }

    /**
     * Sets lineno
     *
     * @param int $lineno lineno
     *
     * @return $this
     */
    public function setLineno($lineno)
    {
        $this->container['lineno'] = $lineno;

        return $this;
    }

    /**
     * Gets orderseqno
     *
     * @return int
     */
    public function getOrderseqno()
    {
        return $this->container['orderseqno'];
    }

    /**
     * Sets orderseqno
     *
     * @param int $orderseqno orderseqno
     *
     * @return $this
     */
    public function setOrderseqno($orderseqno)
    {
        $this->container['orderseqno'] = $orderseqno;

        return $this;
    }

    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets descrip1
     *
     * @return string
     */
    public function getDescrip1()
    {
        return $this->container['descrip1'];
    }

    /**
     * Sets descrip1
     *
     * @param string $descrip1 descrip1
     *
     * @return $this
     */
    public function setDescrip1($descrip1)
    {
        $this->container['descrip1'] = $descrip1;

        return $this;
    }

    /**
     * Gets descrip2
     *
     * @return string
     */
    public function getDescrip2()
    {
        return $this->container['descrip2'];
    }

    /**
     * Sets descrip2
     *
     * @param string $descrip2 descrip2
     *
     * @return $this
     */
    public function setDescrip2($descrip2)
    {
        $this->container['descrip2'] = $descrip2;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets qtyship
     *
     * @return double
     */
    public function getQtyship()
    {
        return $this->container['qtyship'];
    }

    /**
     * Sets qtyship
     *
     * @param double $qtyship qtyship
     *
     * @return $this
     */
    public function setQtyship($qtyship)
    {
        $this->container['qtyship'] = $qtyship;

        return $this;
    }

    /**
     * Gets qtybo
     *
     * @return double
     */
    public function getQtybo()
    {
        return $this->container['qtybo'];
    }

    /**
     * Sets qtybo
     *
     * @param double $qtybo qtybo
     *
     * @return $this
     */
    public function setQtybo($qtybo)
    {
        $this->container['qtybo'] = $qtybo;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets custordunit
     *
     * @return string
     */
    public function getCustordunit()
    {
        return $this->container['custordunit'];
    }

    /**
     * Sets custordunit
     *
     * @param string $custordunit custordunit
     *
     * @return $this
     */
    public function setCustordunit($custordunit)
    {
        $this->container['custordunit'] = $custordunit;

        return $this;
    }

    /**
     * Gets priceunit
     *
     * @return string
     */
    public function getPriceunit()
    {
        return $this->container['priceunit'];
    }

    /**
     * Sets priceunit
     *
     * @param string $priceunit priceunit
     *
     * @return $this
     */
    public function setPriceunit($priceunit)
    {
        $this->container['priceunit'] = $priceunit;

        return $this;
    }

    /**
     * Gets custpriceunit
     *
     * @return string
     */
    public function getCustpriceunit()
    {
        return $this->container['custpriceunit'];
    }

    /**
     * Sets custpriceunit
     *
     * @param string $custpriceunit custpriceunit
     *
     * @return $this
     */
    public function setCustpriceunit($custpriceunit)
    {
        $this->container['custpriceunit'] = $custpriceunit;

        return $this;
    }

    /**
     * Gets listprice
     *
     * @return double
     */
    public function getListprice()
    {
        return $this->container['listprice'];
    }

    /**
     * Sets listprice
     *
     * @param double $listprice listprice
     *
     * @return $this
     */
    public function setListprice($listprice)
    {
        $this->container['listprice'] = $listprice;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets netamt
     *
     * @return double
     */
    public function getNetamt()
    {
        return $this->container['netamt'];
    }

    /**
     * Sets netamt
     *
     * @param double $netamt netamt
     *
     * @return $this
     */
    public function setNetamt($netamt)
    {
        $this->container['netamt'] = $netamt;

        return $this;
    }

    /**
     * Gets reqshipdt
     *
     * @return \DateTime
     */
    public function getReqshipdt()
    {
        return $this->container['reqshipdt'];
    }

    /**
     * Sets reqshipdt
     *
     * @param \DateTime $reqshipdt reqshipdt
     *
     * @return $this
     */
    public function setReqshipdt($reqshipdt)
    {
        $this->container['reqshipdt'] = $reqshipdt;

        return $this;
    }

    /**
     * Gets reqprod
     *
     * @return string
     */
    public function getReqprod()
    {
        return $this->container['reqprod'];
    }

    /**
     * Sets reqprod
     *
     * @param string $reqprod reqprod
     *
     * @return $this
     */
    public function setReqprod($reqprod)
    {
        $this->container['reqprod'] = $reqprod;

        return $this;
    }

    /**
     * Gets entryseqno
     *
     * @return int
     */
    public function getEntryseqno()
    {
        return $this->container['entryseqno'];
    }

    /**
     * Sets entryseqno
     *
     * @param int $entryseqno entryseqno
     *
     * @return $this
     */
    public function setEntryseqno($entryseqno)
    {
        $this->container['entryseqno'] = $entryseqno;

        return $this;
    }

    /**
     * Gets itemtype
     *
     * @return string
     */
    public function getItemtype()
    {
        return $this->container['itemtype'];
    }

    /**
     * Sets itemtype
     *
     * @param string $itemtype itemtype
     *
     * @return $this
     */
    public function setItemtype($itemtype)
    {
        $this->container['itemtype'] = $itemtype;

        return $this;
    }

    /**
     * Gets intseqno
     *
     * @return int
     */
    public function getIntseqno()
    {
        return $this->container['intseqno'];
    }

    /**
     * Sets intseqno
     *
     * @param int $intseqno intseqno
     *
     * @return $this
     */
    public function setIntseqno($intseqno)
    {
        $this->container['intseqno'] = $intseqno;

        return $this;
    }

    /**
     * Gets printpricefl
     *
     * @return bool
     */
    public function getPrintpricefl()
    {
        return $this->container['printpricefl'];
    }

    /**
     * Sets printpricefl
     *
     * @param bool $printpricefl printpricefl
     *
     * @return $this
     */
    public function setPrintpricefl($printpricefl)
    {
        $this->container['printpricefl'] = $printpricefl;

        return $this;
    }

    /**
     * Gets specnstype
     *
     * @return string
     */
    public function getSpecnstype()
    {
        return $this->container['specnstype'];
    }

    /**
     * Sets specnstype
     *
     * @param string $specnstype specnstype
     *
     * @return $this
     */
    public function setSpecnstype($specnstype)
    {
        $this->container['specnstype'] = $specnstype;

        return $this;
    }

    /**
     * Gets botype
     *
     * @return string
     */
    public function getBotype()
    {
        return $this->container['botype'];
    }

    /**
     * Sets botype
     *
     * @param string $botype botype
     *
     * @return $this
     */
    public function setBotype($botype)
    {
        $this->container['botype'] = $botype;

        return $this;
    }

    /**
     * Gets cubes
     *
     * @return double
     */
    public function getCubes()
    {
        return $this->container['cubes'];
    }

    /**
     * Sets cubes
     *
     * @param double $cubes cubes
     *
     * @return $this
     */
    public function setCubes($cubes)
    {
        $this->container['cubes'] = $cubes;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets bolclass
     *
     * @return string
     */
    public function getBolclass()
    {
        return $this->container['bolclass'];
    }

    /**
     * Sets bolclass
     *
     * @param string $bolclass bolclass
     *
     * @return $this
     */
    public function setBolclass($bolclass)
    {
        $this->container['bolclass'] = $bolclass;

        return $this;
    }

    /**
     * Gets serlottype
     *
     * @return string
     */
    public function getSerlottype()
    {
        return $this->container['serlottype'];
    }

    /**
     * Sets serlottype
     *
     * @param string $serlottype serlottype
     *
     * @return $this
     */
    public function setSerlottype($serlottype)
    {
        $this->container['serlottype'] = $serlottype;

        return $this;
    }

    /**
     * Gets binloc1
     *
     * @return string
     */
    public function getBinloc1()
    {
        return $this->container['binloc1'];
    }

    /**
     * Sets binloc1
     *
     * @param string $binloc1 binloc1
     *
     * @return $this
     */
    public function setBinloc1($binloc1)
    {
        $this->container['binloc1'] = $binloc1;

        return $this;
    }

    /**
     * Gets binloc2
     *
     * @return string
     */
    public function getBinloc2()
    {
        return $this->container['binloc2'];
    }

    /**
     * Sets binloc2
     *
     * @param string $binloc2 binloc2
     *
     * @return $this
     */
    public function setBinloc2($binloc2)
    {
        $this->container['binloc2'] = $binloc2;

        return $this;
    }

    /**
     * Gets binloc3
     *
     * @return string
     */
    public function getBinloc3()
    {
        return $this->container['binloc3'];
    }

    /**
     * Sets binloc3
     *
     * @param string $binloc3 binloc3
     *
     * @return $this
     */
    public function setBinloc3($binloc3)
    {
        $this->container['binloc3'] = $binloc3;

        return $this;
    }

    /**
     * Gets binloc4
     *
     * @return string
     */
    public function getBinloc4()
    {
        return $this->container['binloc4'];
    }

    /**
     * Sets binloc4
     *
     * @param string $binloc4 binloc4
     *
     * @return $this
     */
    public function setBinloc4($binloc4)
    {
        $this->container['binloc4'] = $binloc4;

        return $this;
    }

    /**
     * Gets upccode
     *
     * @return string
     */
    public function getUpccode()
    {
        return $this->container['upccode'];
    }

    /**
     * Sets upccode
     *
     * @param string $upccode upccode
     *
     * @return $this
     */
    public function setUpccode($upccode)
    {
        $this->container['upccode'] = $upccode;

        return $this;
    }

    /**
     * Gets brandmsg
     *
     * @return string
     */
    public function getBrandmsg()
    {
        return $this->container['brandmsg'];
    }

    /**
     * Sets brandmsg
     *
     * @param string $brandmsg brandmsg
     *
     * @return $this
     */
    public function setBrandmsg($brandmsg)
    {
        $this->container['brandmsg'] = $brandmsg;

        return $this;
    }

    /**
     * Gets arpvendno
     *
     * @return double
     */
    public function getArpvendno()
    {
        return $this->container['arpvendno'];
    }

    /**
     * Sets arpvendno
     *
     * @param double $arpvendno arpvendno
     *
     * @return $this
     */
    public function setArpvendno($arpvendno)
    {
        $this->container['arpvendno'] = $arpvendno;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets icspstatustype
     *
     * @return string
     */
    public function getIcspstatustype()
    {
        return $this->container['icspstatustype'];
    }

    /**
     * Sets icspstatustype
     *
     * @param string $icspstatustype icspstatustype
     *
     * @return $this
     */
    public function setIcspstatustype($icspstatustype)
    {
        $this->container['icspstatustype'] = $icspstatustype;

        return $this;
    }

    /**
     * Gets vendprod
     *
     * @return string
     */
    public function getVendprod()
    {
        return $this->container['vendprod'];
    }

    /**
     * Sets vendprod
     *
     * @param string $vendprod vendprod
     *
     * @return $this
     */
    public function setVendprod($vendprod)
    {
        $this->container['vendprod'] = $vendprod;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


