<?php
/**
 * TKplist
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TKplist Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TKplist implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-kplist';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'wono' => 'int',
        'wosuf' => 'int',
        'bofl' => 'bool',
        'bono' => 'int',
        'enterdt' => '\DateTime',
        'jrnlno' => 'int',
        'linealtno' => 'int',
        'notesfl' => 'string',
        'orderaltno' => 'int',
        'orderaltsuf' => 'int',
        'ordertype' => 'string',
        'prodcat' => 'string',
        'prodcost' => 'double',
        'qtyord' => 'double',
        'qtyship' => 'double',
        'refer' => 'string',
        'reqoptfl' => 'bool',
        'requestprod' => 'string',
        'rrarinit' => 'string',
        'seqaltno' => 'int',
        'serlottype' => 'string',
        'setno' => 'int',
        'shipprod' => 'string',
        'sortfield' => 'string',
        'stagecd' => 'int',
        'statuscd' => 'string',
        'statustype' => 'bool',
        'stkqtyord' => 'double',
        'stkqtyship' => 'double',
        'unit' => 'string',
        'whse' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime',
        'userfield' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'wono' => 'int64',
        'wosuf' => 'int64',
        'bofl' => null,
        'bono' => 'int64',
        'enterdt' => 'date',
        'jrnlno' => 'int64',
        'linealtno' => 'int64',
        'notesfl' => null,
        'orderaltno' => 'int64',
        'orderaltsuf' => 'int64',
        'ordertype' => null,
        'prodcat' => null,
        'prodcost' => 'double',
        'qtyord' => 'double',
        'qtyship' => 'double',
        'refer' => null,
        'reqoptfl' => null,
        'requestprod' => null,
        'rrarinit' => null,
        'seqaltno' => 'int64',
        'serlottype' => null,
        'setno' => 'int64',
        'shipprod' => null,
        'sortfield' => null,
        'stagecd' => 'int64',
        'statuscd' => null,
        'statustype' => null,
        'stkqtyord' => 'double',
        'stkqtyship' => 'double',
        'unit' => null,
        'whse' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date',
        'userfield' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'wono' => 'wono',
        'wosuf' => 'wosuf',
        'bofl' => 'bofl',
        'bono' => 'bono',
        'enterdt' => 'enterdt',
        'jrnlno' => 'jrnlno',
        'linealtno' => 'linealtno',
        'notesfl' => 'notesfl',
        'orderaltno' => 'orderaltno',
        'orderaltsuf' => 'orderaltsuf',
        'ordertype' => 'ordertype',
        'prodcat' => 'prodcat',
        'prodcost' => 'prodcost',
        'qtyord' => 'qtyord',
        'qtyship' => 'qtyship',
        'refer' => 'refer',
        'reqoptfl' => 'reqoptfl',
        'requestprod' => 'requestprod',
        'rrarinit' => 'rrarinit',
        'seqaltno' => 'seqaltno',
        'serlottype' => 'serlottype',
        'setno' => 'setno',
        'shipprod' => 'shipprod',
        'sortfield' => 'sortfield',
        'stagecd' => 'stagecd',
        'statuscd' => 'statuscd',
        'statustype' => 'statustype',
        'stkqtyord' => 'stkqtyord',
        'stkqtyship' => 'stkqtyship',
        'unit' => 'unit',
        'whse' => 'whse',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9',
        'userfield' => 'userfield'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'wono' => 'setWono',
        'wosuf' => 'setWosuf',
        'bofl' => 'setBofl',
        'bono' => 'setBono',
        'enterdt' => 'setEnterdt',
        'jrnlno' => 'setJrnlno',
        'linealtno' => 'setLinealtno',
        'notesfl' => 'setNotesfl',
        'orderaltno' => 'setOrderaltno',
        'orderaltsuf' => 'setOrderaltsuf',
        'ordertype' => 'setOrdertype',
        'prodcat' => 'setProdcat',
        'prodcost' => 'setProdcost',
        'qtyord' => 'setQtyord',
        'qtyship' => 'setQtyship',
        'refer' => 'setRefer',
        'reqoptfl' => 'setReqoptfl',
        'requestprod' => 'setRequestprod',
        'rrarinit' => 'setRrarinit',
        'seqaltno' => 'setSeqaltno',
        'serlottype' => 'setSerlottype',
        'setno' => 'setSetno',
        'shipprod' => 'setShipprod',
        'sortfield' => 'setSortfield',
        'stagecd' => 'setStagecd',
        'statuscd' => 'setStatuscd',
        'statustype' => 'setStatustype',
        'stkqtyord' => 'setStkqtyord',
        'stkqtyship' => 'setStkqtyship',
        'unit' => 'setUnit',
        'whse' => 'setWhse',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9',
        'userfield' => 'setUserfield'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'wono' => 'getWono',
        'wosuf' => 'getWosuf',
        'bofl' => 'getBofl',
        'bono' => 'getBono',
        'enterdt' => 'getEnterdt',
        'jrnlno' => 'getJrnlno',
        'linealtno' => 'getLinealtno',
        'notesfl' => 'getNotesfl',
        'orderaltno' => 'getOrderaltno',
        'orderaltsuf' => 'getOrderaltsuf',
        'ordertype' => 'getOrdertype',
        'prodcat' => 'getProdcat',
        'prodcost' => 'getProdcost',
        'qtyord' => 'getQtyord',
        'qtyship' => 'getQtyship',
        'refer' => 'getRefer',
        'reqoptfl' => 'getReqoptfl',
        'requestprod' => 'getRequestprod',
        'rrarinit' => 'getRrarinit',
        'seqaltno' => 'getSeqaltno',
        'serlottype' => 'getSerlottype',
        'setno' => 'getSetno',
        'shipprod' => 'getShipprod',
        'sortfield' => 'getSortfield',
        'stagecd' => 'getStagecd',
        'statuscd' => 'getStatuscd',
        'statustype' => 'getStatustype',
        'stkqtyord' => 'getStkqtyord',
        'stkqtyship' => 'getStkqtyship',
        'unit' => 'getUnit',
        'whse' => 'getWhse',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9',
        'userfield' => 'getUserfield'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['wono'] = isset($data['wono']) ? $data['wono'] : null;
        $this->container['wosuf'] = isset($data['wosuf']) ? $data['wosuf'] : null;
        $this->container['bofl'] = isset($data['bofl']) ? $data['bofl'] : null;
        $this->container['bono'] = isset($data['bono']) ? $data['bono'] : null;
        $this->container['enterdt'] = isset($data['enterdt']) ? $data['enterdt'] : null;
        $this->container['jrnlno'] = isset($data['jrnlno']) ? $data['jrnlno'] : null;
        $this->container['linealtno'] = isset($data['linealtno']) ? $data['linealtno'] : null;
        $this->container['notesfl'] = isset($data['notesfl']) ? $data['notesfl'] : null;
        $this->container['orderaltno'] = isset($data['orderaltno']) ? $data['orderaltno'] : null;
        $this->container['orderaltsuf'] = isset($data['orderaltsuf']) ? $data['orderaltsuf'] : null;
        $this->container['ordertype'] = isset($data['ordertype']) ? $data['ordertype'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['prodcost'] = isset($data['prodcost']) ? $data['prodcost'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['qtyship'] = isset($data['qtyship']) ? $data['qtyship'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['reqoptfl'] = isset($data['reqoptfl']) ? $data['reqoptfl'] : null;
        $this->container['requestprod'] = isset($data['requestprod']) ? $data['requestprod'] : null;
        $this->container['rrarinit'] = isset($data['rrarinit']) ? $data['rrarinit'] : null;
        $this->container['seqaltno'] = isset($data['seqaltno']) ? $data['seqaltno'] : null;
        $this->container['serlottype'] = isset($data['serlottype']) ? $data['serlottype'] : null;
        $this->container['setno'] = isset($data['setno']) ? $data['setno'] : null;
        $this->container['shipprod'] = isset($data['shipprod']) ? $data['shipprod'] : null;
        $this->container['sortfield'] = isset($data['sortfield']) ? $data['sortfield'] : null;
        $this->container['stagecd'] = isset($data['stagecd']) ? $data['stagecd'] : null;
        $this->container['statuscd'] = isset($data['statuscd']) ? $data['statuscd'] : null;
        $this->container['statustype'] = isset($data['statustype']) ? $data['statustype'] : null;
        $this->container['stkqtyord'] = isset($data['stkqtyord']) ? $data['stkqtyord'] : null;
        $this->container['stkqtyship'] = isset($data['stkqtyship']) ? $data['stkqtyship'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
        $this->container['userfield'] = isset($data['userfield']) ? $data['userfield'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets wono
     *
     * @return int
     */
    public function getWono()
    {
        return $this->container['wono'];
    }

    /**
     * Sets wono
     *
     * @param int $wono wono
     *
     * @return $this
     */
    public function setWono($wono)
    {
        $this->container['wono'] = $wono;

        return $this;
    }

    /**
     * Gets wosuf
     *
     * @return int
     */
    public function getWosuf()
    {
        return $this->container['wosuf'];
    }

    /**
     * Sets wosuf
     *
     * @param int $wosuf wosuf
     *
     * @return $this
     */
    public function setWosuf($wosuf)
    {
        $this->container['wosuf'] = $wosuf;

        return $this;
    }

    /**
     * Gets bofl
     *
     * @return bool
     */
    public function getBofl()
    {
        return $this->container['bofl'];
    }

    /**
     * Sets bofl
     *
     * @param bool $bofl bofl
     *
     * @return $this
     */
    public function setBofl($bofl)
    {
        $this->container['bofl'] = $bofl;

        return $this;
    }

    /**
     * Gets bono
     *
     * @return int
     */
    public function getBono()
    {
        return $this->container['bono'];
    }

    /**
     * Sets bono
     *
     * @param int $bono bono
     *
     * @return $this
     */
    public function setBono($bono)
    {
        $this->container['bono'] = $bono;

        return $this;
    }

    /**
     * Gets enterdt
     *
     * @return \DateTime
     */
    public function getEnterdt()
    {
        return $this->container['enterdt'];
    }

    /**
     * Sets enterdt
     *
     * @param \DateTime $enterdt enterdt
     *
     * @return $this
     */
    public function setEnterdt($enterdt)
    {
        $this->container['enterdt'] = $enterdt;

        return $this;
    }

    /**
     * Gets jrnlno
     *
     * @return int
     */
    public function getJrnlno()
    {
        return $this->container['jrnlno'];
    }

    /**
     * Sets jrnlno
     *
     * @param int $jrnlno jrnlno
     *
     * @return $this
     */
    public function setJrnlno($jrnlno)
    {
        $this->container['jrnlno'] = $jrnlno;

        return $this;
    }

    /**
     * Gets linealtno
     *
     * @return int
     */
    public function getLinealtno()
    {
        return $this->container['linealtno'];
    }

    /**
     * Sets linealtno
     *
     * @param int $linealtno linealtno
     *
     * @return $this
     */
    public function setLinealtno($linealtno)
    {
        $this->container['linealtno'] = $linealtno;

        return $this;
    }

    /**
     * Gets notesfl
     *
     * @return string
     */
    public function getNotesfl()
    {
        return $this->container['notesfl'];
    }

    /**
     * Sets notesfl
     *
     * @param string $notesfl notesfl
     *
     * @return $this
     */
    public function setNotesfl($notesfl)
    {
        $this->container['notesfl'] = $notesfl;

        return $this;
    }

    /**
     * Gets orderaltno
     *
     * @return int
     */
    public function getOrderaltno()
    {
        return $this->container['orderaltno'];
    }

    /**
     * Sets orderaltno
     *
     * @param int $orderaltno orderaltno
     *
     * @return $this
     */
    public function setOrderaltno($orderaltno)
    {
        $this->container['orderaltno'] = $orderaltno;

        return $this;
    }

    /**
     * Gets orderaltsuf
     *
     * @return int
     */
    public function getOrderaltsuf()
    {
        return $this->container['orderaltsuf'];
    }

    /**
     * Sets orderaltsuf
     *
     * @param int $orderaltsuf orderaltsuf
     *
     * @return $this
     */
    public function setOrderaltsuf($orderaltsuf)
    {
        $this->container['orderaltsuf'] = $orderaltsuf;

        return $this;
    }

    /**
     * Gets ordertype
     *
     * @return string
     */
    public function getOrdertype()
    {
        return $this->container['ordertype'];
    }

    /**
     * Sets ordertype
     *
     * @param string $ordertype ordertype
     *
     * @return $this
     */
    public function setOrdertype($ordertype)
    {
        $this->container['ordertype'] = $ordertype;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets prodcost
     *
     * @return double
     */
    public function getProdcost()
    {
        return $this->container['prodcost'];
    }

    /**
     * Sets prodcost
     *
     * @param double $prodcost prodcost
     *
     * @return $this
     */
    public function setProdcost($prodcost)
    {
        $this->container['prodcost'] = $prodcost;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets qtyship
     *
     * @return double
     */
    public function getQtyship()
    {
        return $this->container['qtyship'];
    }

    /**
     * Sets qtyship
     *
     * @param double $qtyship qtyship
     *
     * @return $this
     */
    public function setQtyship($qtyship)
    {
        $this->container['qtyship'] = $qtyship;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets reqoptfl
     *
     * @return bool
     */
    public function getReqoptfl()
    {
        return $this->container['reqoptfl'];
    }

    /**
     * Sets reqoptfl
     *
     * @param bool $reqoptfl reqoptfl
     *
     * @return $this
     */
    public function setReqoptfl($reqoptfl)
    {
        $this->container['reqoptfl'] = $reqoptfl;

        return $this;
    }

    /**
     * Gets requestprod
     *
     * @return string
     */
    public function getRequestprod()
    {
        return $this->container['requestprod'];
    }

    /**
     * Sets requestprod
     *
     * @param string $requestprod requestprod
     *
     * @return $this
     */
    public function setRequestprod($requestprod)
    {
        $this->container['requestprod'] = $requestprod;

        return $this;
    }

    /**
     * Gets rrarinit
     *
     * @return string
     */
    public function getRrarinit()
    {
        return $this->container['rrarinit'];
    }

    /**
     * Sets rrarinit
     *
     * @param string $rrarinit rrarinit
     *
     * @return $this
     */
    public function setRrarinit($rrarinit)
    {
        $this->container['rrarinit'] = $rrarinit;

        return $this;
    }

    /**
     * Gets seqaltno
     *
     * @return int
     */
    public function getSeqaltno()
    {
        return $this->container['seqaltno'];
    }

    /**
     * Sets seqaltno
     *
     * @param int $seqaltno seqaltno
     *
     * @return $this
     */
    public function setSeqaltno($seqaltno)
    {
        $this->container['seqaltno'] = $seqaltno;

        return $this;
    }

    /**
     * Gets serlottype
     *
     * @return string
     */
    public function getSerlottype()
    {
        return $this->container['serlottype'];
    }

    /**
     * Sets serlottype
     *
     * @param string $serlottype serlottype
     *
     * @return $this
     */
    public function setSerlottype($serlottype)
    {
        $this->container['serlottype'] = $serlottype;

        return $this;
    }

    /**
     * Gets setno
     *
     * @return int
     */
    public function getSetno()
    {
        return $this->container['setno'];
    }

    /**
     * Sets setno
     *
     * @param int $setno setno
     *
     * @return $this
     */
    public function setSetno($setno)
    {
        $this->container['setno'] = $setno;

        return $this;
    }

    /**
     * Gets shipprod
     *
     * @return string
     */
    public function getShipprod()
    {
        return $this->container['shipprod'];
    }

    /**
     * Sets shipprod
     *
     * @param string $shipprod shipprod
     *
     * @return $this
     */
    public function setShipprod($shipprod)
    {
        $this->container['shipprod'] = $shipprod;

        return $this;
    }

    /**
     * Gets sortfield
     *
     * @return string
     */
    public function getSortfield()
    {
        return $this->container['sortfield'];
    }

    /**
     * Sets sortfield
     *
     * @param string $sortfield sortfield
     *
     * @return $this
     */
    public function setSortfield($sortfield)
    {
        $this->container['sortfield'] = $sortfield;

        return $this;
    }

    /**
     * Gets stagecd
     *
     * @return int
     */
    public function getStagecd()
    {
        return $this->container['stagecd'];
    }

    /**
     * Sets stagecd
     *
     * @param int $stagecd stagecd
     *
     * @return $this
     */
    public function setStagecd($stagecd)
    {
        $this->container['stagecd'] = $stagecd;

        return $this;
    }

    /**
     * Gets statuscd
     *
     * @return string
     */
    public function getStatuscd()
    {
        return $this->container['statuscd'];
    }

    /**
     * Sets statuscd
     *
     * @param string $statuscd statuscd
     *
     * @return $this
     */
    public function setStatuscd($statuscd)
    {
        $this->container['statuscd'] = $statuscd;

        return $this;
    }

    /**
     * Gets statustype
     *
     * @return bool
     */
    public function getStatustype()
    {
        return $this->container['statustype'];
    }

    /**
     * Sets statustype
     *
     * @param bool $statustype statustype
     *
     * @return $this
     */
    public function setStatustype($statustype)
    {
        $this->container['statustype'] = $statustype;

        return $this;
    }

    /**
     * Gets stkqtyord
     *
     * @return double
     */
    public function getStkqtyord()
    {
        return $this->container['stkqtyord'];
    }

    /**
     * Sets stkqtyord
     *
     * @param double $stkqtyord stkqtyord
     *
     * @return $this
     */
    public function setStkqtyord($stkqtyord)
    {
        $this->container['stkqtyord'] = $stkqtyord;

        return $this;
    }

    /**
     * Gets stkqtyship
     *
     * @return double
     */
    public function getStkqtyship()
    {
        return $this->container['stkqtyship'];
    }

    /**
     * Sets stkqtyship
     *
     * @param double $stkqtyship stkqtyship
     *
     * @return $this
     */
    public function setStkqtyship($stkqtyship)
    {
        $this->container['stkqtyship'] = $stkqtyship;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }

    /**
     * Gets userfield
     *
     * @return string
     */
    public function getUserfield()
    {
        return $this->container['userfield'];
    }

    /**
     * Sets userfield
     *
     * @param string $userfield userfield
     *
     * @return $this
     */
    public function setUserfield($userfield)
    {
        $this->container['userfield'] = $userfield;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


