<?php
/**
 * TOeordV4
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TOeordV4 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TOeordV4 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-oeordV4';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_no' => 'int',
        'order_suf' => 'int',
        'whse' => 'string',
        'cust_no' => 'double',
        'ship_to' => 'string',
        'stage_cd' => 'int',
        'stage_cd_words' => 'string',
        'enter_dt' => '\DateTime',
        'tot_inv_amt' => 'double',
        'trans_type' => 'string',
        'cust_po' => 'string',
        'req_ship_dt' => '\DateTime',
        'promise_dt' => '\DateTime',
        'picked_dt' => '\DateTime',
        'ship_dt' => '\DateTime',
        'invoice_dt' => '\DateTime',
        'sort_fld' => 'string',
        'approvty' => 'string',
        'pickedtm' => 'string',
        'pickinit' => 'string',
        'taken_by' => 'string',
        'tot_line_ord' => 'double',
        'tot_line_amt' => 'double',
        'shiptonm' => 'string',
        'shiptost' => 'string',
        'shiptozip' => 'string',
        'shiptoaddr1' => 'string',
        'shiptoaddr2' => 'string',
        'shiptocity' => 'string',
        'shipviaty' => 'string',
        'shipviadesc' => 'string',
        'route' => 'string',
        'totcubes' => 'double',
        'totweight' => 'double',
        'refer' => 'string',
        'nolineitem' => 'int',
        'totqtyord' => 'double',
        'totqtyshp' => 'double',
        'custname' => 'string',
        'cod_amount' => 'double',
        'cod_flag' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_no' => 'int64',
        'order_suf' => 'int64',
        'whse' => null,
        'cust_no' => 'double',
        'ship_to' => null,
        'stage_cd' => 'int64',
        'stage_cd_words' => null,
        'enter_dt' => 'date',
        'tot_inv_amt' => 'double',
        'trans_type' => null,
        'cust_po' => null,
        'req_ship_dt' => 'date',
        'promise_dt' => 'date',
        'picked_dt' => 'date',
        'ship_dt' => 'date',
        'invoice_dt' => 'date',
        'sort_fld' => null,
        'approvty' => null,
        'pickedtm' => null,
        'pickinit' => null,
        'taken_by' => null,
        'tot_line_ord' => 'double',
        'tot_line_amt' => 'double',
        'shiptonm' => null,
        'shiptost' => null,
        'shiptozip' => null,
        'shiptoaddr1' => null,
        'shiptoaddr2' => null,
        'shiptocity' => null,
        'shipviaty' => null,
        'shipviadesc' => null,
        'route' => null,
        'totcubes' => 'double',
        'totweight' => 'double',
        'refer' => null,
        'nolineitem' => 'int64',
        'totqtyord' => 'double',
        'totqtyshp' => 'double',
        'custname' => null,
        'cod_amount' => 'double',
        'cod_flag' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_no' => 'orderNo',
        'order_suf' => 'orderSuf',
        'whse' => 'whse',
        'cust_no' => 'custNo',
        'ship_to' => 'shipTo',
        'stage_cd' => 'stageCd',
        'stage_cd_words' => 'stageCdWords',
        'enter_dt' => 'enterDt',
        'tot_inv_amt' => 'totInvAmt',
        'trans_type' => 'transType',
        'cust_po' => 'custPo',
        'req_ship_dt' => 'reqShipDt',
        'promise_dt' => 'promiseDt',
        'picked_dt' => 'pickedDt',
        'ship_dt' => 'shipDt',
        'invoice_dt' => 'invoiceDt',
        'sort_fld' => 'sortFld',
        'approvty' => 'approvty',
        'pickedtm' => 'pickedtm',
        'pickinit' => 'pickinit',
        'taken_by' => 'takenBy',
        'tot_line_ord' => 'totLineOrd',
        'tot_line_amt' => 'totLineAmt',
        'shiptonm' => 'shiptonm',
        'shiptost' => 'shiptost',
        'shiptozip' => 'shiptozip',
        'shiptoaddr1' => 'shiptoaddr1',
        'shiptoaddr2' => 'shiptoaddr2',
        'shiptocity' => 'shiptocity',
        'shipviaty' => 'shipviaty',
        'shipviadesc' => 'shipviadesc',
        'route' => 'route',
        'totcubes' => 'totcubes',
        'totweight' => 'totweight',
        'refer' => 'refer',
        'nolineitem' => 'nolineitem',
        'totqtyord' => 'totqtyord',
        'totqtyshp' => 'totqtyshp',
        'custname' => 'custname',
        'cod_amount' => 'CODAmount',
        'cod_flag' => 'CODFlag'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_no' => 'setOrderNo',
        'order_suf' => 'setOrderSuf',
        'whse' => 'setWhse',
        'cust_no' => 'setCustNo',
        'ship_to' => 'setShipTo',
        'stage_cd' => 'setStageCd',
        'stage_cd_words' => 'setStageCdWords',
        'enter_dt' => 'setEnterDt',
        'tot_inv_amt' => 'setTotInvAmt',
        'trans_type' => 'setTransType',
        'cust_po' => 'setCustPo',
        'req_ship_dt' => 'setReqShipDt',
        'promise_dt' => 'setPromiseDt',
        'picked_dt' => 'setPickedDt',
        'ship_dt' => 'setShipDt',
        'invoice_dt' => 'setInvoiceDt',
        'sort_fld' => 'setSortFld',
        'approvty' => 'setApprovty',
        'pickedtm' => 'setPickedtm',
        'pickinit' => 'setPickinit',
        'taken_by' => 'setTakenBy',
        'tot_line_ord' => 'setTotLineOrd',
        'tot_line_amt' => 'setTotLineAmt',
        'shiptonm' => 'setShiptonm',
        'shiptost' => 'setShiptost',
        'shiptozip' => 'setShiptozip',
        'shiptoaddr1' => 'setShiptoaddr1',
        'shiptoaddr2' => 'setShiptoaddr2',
        'shiptocity' => 'setShiptocity',
        'shipviaty' => 'setShipviaty',
        'shipviadesc' => 'setShipviadesc',
        'route' => 'setRoute',
        'totcubes' => 'setTotcubes',
        'totweight' => 'setTotweight',
        'refer' => 'setRefer',
        'nolineitem' => 'setNolineitem',
        'totqtyord' => 'setTotqtyord',
        'totqtyshp' => 'setTotqtyshp',
        'custname' => 'setCustname',
        'cod_amount' => 'setCodAmount',
        'cod_flag' => 'setCodFlag'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_no' => 'getOrderNo',
        'order_suf' => 'getOrderSuf',
        'whse' => 'getWhse',
        'cust_no' => 'getCustNo',
        'ship_to' => 'getShipTo',
        'stage_cd' => 'getStageCd',
        'stage_cd_words' => 'getStageCdWords',
        'enter_dt' => 'getEnterDt',
        'tot_inv_amt' => 'getTotInvAmt',
        'trans_type' => 'getTransType',
        'cust_po' => 'getCustPo',
        'req_ship_dt' => 'getReqShipDt',
        'promise_dt' => 'getPromiseDt',
        'picked_dt' => 'getPickedDt',
        'ship_dt' => 'getShipDt',
        'invoice_dt' => 'getInvoiceDt',
        'sort_fld' => 'getSortFld',
        'approvty' => 'getApprovty',
        'pickedtm' => 'getPickedtm',
        'pickinit' => 'getPickinit',
        'taken_by' => 'getTakenBy',
        'tot_line_ord' => 'getTotLineOrd',
        'tot_line_amt' => 'getTotLineAmt',
        'shiptonm' => 'getShiptonm',
        'shiptost' => 'getShiptost',
        'shiptozip' => 'getShiptozip',
        'shiptoaddr1' => 'getShiptoaddr1',
        'shiptoaddr2' => 'getShiptoaddr2',
        'shiptocity' => 'getShiptocity',
        'shipviaty' => 'getShipviaty',
        'shipviadesc' => 'getShipviadesc',
        'route' => 'getRoute',
        'totcubes' => 'getTotcubes',
        'totweight' => 'getTotweight',
        'refer' => 'getRefer',
        'nolineitem' => 'getNolineitem',
        'totqtyord' => 'getTotqtyord',
        'totqtyshp' => 'getTotqtyshp',
        'custname' => 'getCustname',
        'cod_amount' => 'getCodAmount',
        'cod_flag' => 'getCodFlag'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['order_suf'] = isset($data['order_suf']) ? $data['order_suf'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['cust_no'] = isset($data['cust_no']) ? $data['cust_no'] : null;
        $this->container['ship_to'] = isset($data['ship_to']) ? $data['ship_to'] : null;
        $this->container['stage_cd'] = isset($data['stage_cd']) ? $data['stage_cd'] : null;
        $this->container['stage_cd_words'] = isset($data['stage_cd_words']) ? $data['stage_cd_words'] : null;
        $this->container['enter_dt'] = isset($data['enter_dt']) ? $data['enter_dt'] : null;
        $this->container['tot_inv_amt'] = isset($data['tot_inv_amt']) ? $data['tot_inv_amt'] : null;
        $this->container['trans_type'] = isset($data['trans_type']) ? $data['trans_type'] : null;
        $this->container['cust_po'] = isset($data['cust_po']) ? $data['cust_po'] : null;
        $this->container['req_ship_dt'] = isset($data['req_ship_dt']) ? $data['req_ship_dt'] : null;
        $this->container['promise_dt'] = isset($data['promise_dt']) ? $data['promise_dt'] : null;
        $this->container['picked_dt'] = isset($data['picked_dt']) ? $data['picked_dt'] : null;
        $this->container['ship_dt'] = isset($data['ship_dt']) ? $data['ship_dt'] : null;
        $this->container['invoice_dt'] = isset($data['invoice_dt']) ? $data['invoice_dt'] : null;
        $this->container['sort_fld'] = isset($data['sort_fld']) ? $data['sort_fld'] : null;
        $this->container['approvty'] = isset($data['approvty']) ? $data['approvty'] : null;
        $this->container['pickedtm'] = isset($data['pickedtm']) ? $data['pickedtm'] : null;
        $this->container['pickinit'] = isset($data['pickinit']) ? $data['pickinit'] : null;
        $this->container['taken_by'] = isset($data['taken_by']) ? $data['taken_by'] : null;
        $this->container['tot_line_ord'] = isset($data['tot_line_ord']) ? $data['tot_line_ord'] : null;
        $this->container['tot_line_amt'] = isset($data['tot_line_amt']) ? $data['tot_line_amt'] : null;
        $this->container['shiptonm'] = isset($data['shiptonm']) ? $data['shiptonm'] : null;
        $this->container['shiptost'] = isset($data['shiptost']) ? $data['shiptost'] : null;
        $this->container['shiptozip'] = isset($data['shiptozip']) ? $data['shiptozip'] : null;
        $this->container['shiptoaddr1'] = isset($data['shiptoaddr1']) ? $data['shiptoaddr1'] : null;
        $this->container['shiptoaddr2'] = isset($data['shiptoaddr2']) ? $data['shiptoaddr2'] : null;
        $this->container['shiptocity'] = isset($data['shiptocity']) ? $data['shiptocity'] : null;
        $this->container['shipviaty'] = isset($data['shipviaty']) ? $data['shipviaty'] : null;
        $this->container['shipviadesc'] = isset($data['shipviadesc']) ? $data['shipviadesc'] : null;
        $this->container['route'] = isset($data['route']) ? $data['route'] : null;
        $this->container['totcubes'] = isset($data['totcubes']) ? $data['totcubes'] : null;
        $this->container['totweight'] = isset($data['totweight']) ? $data['totweight'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['nolineitem'] = isset($data['nolineitem']) ? $data['nolineitem'] : null;
        $this->container['totqtyord'] = isset($data['totqtyord']) ? $data['totqtyord'] : null;
        $this->container['totqtyshp'] = isset($data['totqtyshp']) ? $data['totqtyshp'] : null;
        $this->container['custname'] = isset($data['custname']) ? $data['custname'] : null;
        $this->container['cod_amount'] = isset($data['cod_amount']) ? $data['cod_amount'] : null;
        $this->container['cod_flag'] = isset($data['cod_flag']) ? $data['cod_flag'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_no
     *
     * @return int
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param int $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets order_suf
     *
     * @return int
     */
    public function getOrderSuf()
    {
        return $this->container['order_suf'];
    }

    /**
     * Sets order_suf
     *
     * @param int $order_suf order_suf
     *
     * @return $this
     */
    public function setOrderSuf($order_suf)
    {
        $this->container['order_suf'] = $order_suf;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets cust_no
     *
     * @return double
     */
    public function getCustNo()
    {
        return $this->container['cust_no'];
    }

    /**
     * Sets cust_no
     *
     * @param double $cust_no cust_no
     *
     * @return $this
     */
    public function setCustNo($cust_no)
    {
        $this->container['cust_no'] = $cust_no;

        return $this;
    }

    /**
     * Gets ship_to
     *
     * @return string
     */
    public function getShipTo()
    {
        return $this->container['ship_to'];
    }

    /**
     * Sets ship_to
     *
     * @param string $ship_to ship_to
     *
     * @return $this
     */
    public function setShipTo($ship_to)
    {
        $this->container['ship_to'] = $ship_to;

        return $this;
    }

    /**
     * Gets stage_cd
     *
     * @return int
     */
    public function getStageCd()
    {
        return $this->container['stage_cd'];
    }

    /**
     * Sets stage_cd
     *
     * @param int $stage_cd stage_cd
     *
     * @return $this
     */
    public function setStageCd($stage_cd)
    {
        $this->container['stage_cd'] = $stage_cd;

        return $this;
    }

    /**
     * Gets stage_cd_words
     *
     * @return string
     */
    public function getStageCdWords()
    {
        return $this->container['stage_cd_words'];
    }

    /**
     * Sets stage_cd_words
     *
     * @param string $stage_cd_words stage_cd_words
     *
     * @return $this
     */
    public function setStageCdWords($stage_cd_words)
    {
        $this->container['stage_cd_words'] = $stage_cd_words;

        return $this;
    }

    /**
     * Gets enter_dt
     *
     * @return \DateTime
     */
    public function getEnterDt()
    {
        return $this->container['enter_dt'];
    }

    /**
     * Sets enter_dt
     *
     * @param \DateTime $enter_dt enter_dt
     *
     * @return $this
     */
    public function setEnterDt($enter_dt)
    {
        $this->container['enter_dt'] = $enter_dt;

        return $this;
    }

    /**
     * Gets tot_inv_amt
     *
     * @return double
     */
    public function getTotInvAmt()
    {
        return $this->container['tot_inv_amt'];
    }

    /**
     * Sets tot_inv_amt
     *
     * @param double $tot_inv_amt tot_inv_amt
     *
     * @return $this
     */
    public function setTotInvAmt($tot_inv_amt)
    {
        $this->container['tot_inv_amt'] = $tot_inv_amt;

        return $this;
    }

    /**
     * Gets trans_type
     *
     * @return string
     */
    public function getTransType()
    {
        return $this->container['trans_type'];
    }

    /**
     * Sets trans_type
     *
     * @param string $trans_type trans_type
     *
     * @return $this
     */
    public function setTransType($trans_type)
    {
        $this->container['trans_type'] = $trans_type;

        return $this;
    }

    /**
     * Gets cust_po
     *
     * @return string
     */
    public function getCustPo()
    {
        return $this->container['cust_po'];
    }

    /**
     * Sets cust_po
     *
     * @param string $cust_po cust_po
     *
     * @return $this
     */
    public function setCustPo($cust_po)
    {
        $this->container['cust_po'] = $cust_po;

        return $this;
    }

    /**
     * Gets req_ship_dt
     *
     * @return \DateTime
     */
    public function getReqShipDt()
    {
        return $this->container['req_ship_dt'];
    }

    /**
     * Sets req_ship_dt
     *
     * @param \DateTime $req_ship_dt req_ship_dt
     *
     * @return $this
     */
    public function setReqShipDt($req_ship_dt)
    {
        $this->container['req_ship_dt'] = $req_ship_dt;

        return $this;
    }

    /**
     * Gets promise_dt
     *
     * @return \DateTime
     */
    public function getPromiseDt()
    {
        return $this->container['promise_dt'];
    }

    /**
     * Sets promise_dt
     *
     * @param \DateTime $promise_dt promise_dt
     *
     * @return $this
     */
    public function setPromiseDt($promise_dt)
    {
        $this->container['promise_dt'] = $promise_dt;

        return $this;
    }

    /**
     * Gets picked_dt
     *
     * @return \DateTime
     */
    public function getPickedDt()
    {
        return $this->container['picked_dt'];
    }

    /**
     * Sets picked_dt
     *
     * @param \DateTime $picked_dt picked_dt
     *
     * @return $this
     */
    public function setPickedDt($picked_dt)
    {
        $this->container['picked_dt'] = $picked_dt;

        return $this;
    }

    /**
     * Gets ship_dt
     *
     * @return \DateTime
     */
    public function getShipDt()
    {
        return $this->container['ship_dt'];
    }

    /**
     * Sets ship_dt
     *
     * @param \DateTime $ship_dt ship_dt
     *
     * @return $this
     */
    public function setShipDt($ship_dt)
    {
        $this->container['ship_dt'] = $ship_dt;

        return $this;
    }

    /**
     * Gets invoice_dt
     *
     * @return \DateTime
     */
    public function getInvoiceDt()
    {
        return $this->container['invoice_dt'];
    }

    /**
     * Sets invoice_dt
     *
     * @param \DateTime $invoice_dt invoice_dt
     *
     * @return $this
     */
    public function setInvoiceDt($invoice_dt)
    {
        $this->container['invoice_dt'] = $invoice_dt;

        return $this;
    }

    /**
     * Gets sort_fld
     *
     * @return string
     */
    public function getSortFld()
    {
        return $this->container['sort_fld'];
    }

    /**
     * Sets sort_fld
     *
     * @param string $sort_fld sort_fld
     *
     * @return $this
     */
    public function setSortFld($sort_fld)
    {
        $this->container['sort_fld'] = $sort_fld;

        return $this;
    }

    /**
     * Gets approvty
     *
     * @return string
     */
    public function getApprovty()
    {
        return $this->container['approvty'];
    }

    /**
     * Sets approvty
     *
     * @param string $approvty approvty
     *
     * @return $this
     */
    public function setApprovty($approvty)
    {
        $this->container['approvty'] = $approvty;

        return $this;
    }

    /**
     * Gets pickedtm
     *
     * @return string
     */
    public function getPickedtm()
    {
        return $this->container['pickedtm'];
    }

    /**
     * Sets pickedtm
     *
     * @param string $pickedtm pickedtm
     *
     * @return $this
     */
    public function setPickedtm($pickedtm)
    {
        $this->container['pickedtm'] = $pickedtm;

        return $this;
    }

    /**
     * Gets pickinit
     *
     * @return string
     */
    public function getPickinit()
    {
        return $this->container['pickinit'];
    }

    /**
     * Sets pickinit
     *
     * @param string $pickinit pickinit
     *
     * @return $this
     */
    public function setPickinit($pickinit)
    {
        $this->container['pickinit'] = $pickinit;

        return $this;
    }

    /**
     * Gets taken_by
     *
     * @return string
     */
    public function getTakenBy()
    {
        return $this->container['taken_by'];
    }

    /**
     * Sets taken_by
     *
     * @param string $taken_by taken_by
     *
     * @return $this
     */
    public function setTakenBy($taken_by)
    {
        $this->container['taken_by'] = $taken_by;

        return $this;
    }

    /**
     * Gets tot_line_ord
     *
     * @return double
     */
    public function getTotLineOrd()
    {
        return $this->container['tot_line_ord'];
    }

    /**
     * Sets tot_line_ord
     *
     * @param double $tot_line_ord tot_line_ord
     *
     * @return $this
     */
    public function setTotLineOrd($tot_line_ord)
    {
        $this->container['tot_line_ord'] = $tot_line_ord;

        return $this;
    }

    /**
     * Gets tot_line_amt
     *
     * @return double
     */
    public function getTotLineAmt()
    {
        return $this->container['tot_line_amt'];
    }

    /**
     * Sets tot_line_amt
     *
     * @param double $tot_line_amt tot_line_amt
     *
     * @return $this
     */
    public function setTotLineAmt($tot_line_amt)
    {
        $this->container['tot_line_amt'] = $tot_line_amt;

        return $this;
    }

    /**
     * Gets shiptonm
     *
     * @return string
     */
    public function getShiptonm()
    {
        return $this->container['shiptonm'];
    }

    /**
     * Sets shiptonm
     *
     * @param string $shiptonm shiptonm
     *
     * @return $this
     */
    public function setShiptonm($shiptonm)
    {
        $this->container['shiptonm'] = $shiptonm;

        return $this;
    }

    /**
     * Gets shiptost
     *
     * @return string
     */
    public function getShiptost()
    {
        return $this->container['shiptost'];
    }

    /**
     * Sets shiptost
     *
     * @param string $shiptost shiptost
     *
     * @return $this
     */
    public function setShiptost($shiptost)
    {
        $this->container['shiptost'] = $shiptost;

        return $this;
    }

    /**
     * Gets shiptozip
     *
     * @return string
     */
    public function getShiptozip()
    {
        return $this->container['shiptozip'];
    }

    /**
     * Sets shiptozip
     *
     * @param string $shiptozip shiptozip
     *
     * @return $this
     */
    public function setShiptozip($shiptozip)
    {
        $this->container['shiptozip'] = $shiptozip;

        return $this;
    }

    /**
     * Gets shiptoaddr1
     *
     * @return string
     */
    public function getShiptoaddr1()
    {
        return $this->container['shiptoaddr1'];
    }

    /**
     * Sets shiptoaddr1
     *
     * @param string $shiptoaddr1 shiptoaddr1
     *
     * @return $this
     */
    public function setShiptoaddr1($shiptoaddr1)
    {
        $this->container['shiptoaddr1'] = $shiptoaddr1;

        return $this;
    }

    /**
     * Gets shiptoaddr2
     *
     * @return string
     */
    public function getShiptoaddr2()
    {
        return $this->container['shiptoaddr2'];
    }

    /**
     * Sets shiptoaddr2
     *
     * @param string $shiptoaddr2 shiptoaddr2
     *
     * @return $this
     */
    public function setShiptoaddr2($shiptoaddr2)
    {
        $this->container['shiptoaddr2'] = $shiptoaddr2;

        return $this;
    }

    /**
     * Gets shiptocity
     *
     * @return string
     */
    public function getShiptocity()
    {
        return $this->container['shiptocity'];
    }

    /**
     * Sets shiptocity
     *
     * @param string $shiptocity shiptocity
     *
     * @return $this
     */
    public function setShiptocity($shiptocity)
    {
        $this->container['shiptocity'] = $shiptocity;

        return $this;
    }

    /**
     * Gets shipviaty
     *
     * @return string
     */
    public function getShipviaty()
    {
        return $this->container['shipviaty'];
    }

    /**
     * Sets shipviaty
     *
     * @param string $shipviaty shipviaty
     *
     * @return $this
     */
    public function setShipviaty($shipviaty)
    {
        $this->container['shipviaty'] = $shipviaty;

        return $this;
    }

    /**
     * Gets shipviadesc
     *
     * @return string
     */
    public function getShipviadesc()
    {
        return $this->container['shipviadesc'];
    }

    /**
     * Sets shipviadesc
     *
     * @param string $shipviadesc shipviadesc
     *
     * @return $this
     */
    public function setShipviadesc($shipviadesc)
    {
        $this->container['shipviadesc'] = $shipviadesc;

        return $this;
    }

    /**
     * Gets route
     *
     * @return string
     */
    public function getRoute()
    {
        return $this->container['route'];
    }

    /**
     * Sets route
     *
     * @param string $route route
     *
     * @return $this
     */
    public function setRoute($route)
    {
        $this->container['route'] = $route;

        return $this;
    }

    /**
     * Gets totcubes
     *
     * @return double
     */
    public function getTotcubes()
    {
        return $this->container['totcubes'];
    }

    /**
     * Sets totcubes
     *
     * @param double $totcubes totcubes
     *
     * @return $this
     */
    public function setTotcubes($totcubes)
    {
        $this->container['totcubes'] = $totcubes;

        return $this;
    }

    /**
     * Gets totweight
     *
     * @return double
     */
    public function getTotweight()
    {
        return $this->container['totweight'];
    }

    /**
     * Sets totweight
     *
     * @param double $totweight totweight
     *
     * @return $this
     */
    public function setTotweight($totweight)
    {
        $this->container['totweight'] = $totweight;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets nolineitem
     *
     * @return int
     */
    public function getNolineitem()
    {
        return $this->container['nolineitem'];
    }

    /**
     * Sets nolineitem
     *
     * @param int $nolineitem nolineitem
     *
     * @return $this
     */
    public function setNolineitem($nolineitem)
    {
        $this->container['nolineitem'] = $nolineitem;

        return $this;
    }

    /**
     * Gets totqtyord
     *
     * @return double
     */
    public function getTotqtyord()
    {
        return $this->container['totqtyord'];
    }

    /**
     * Sets totqtyord
     *
     * @param double $totqtyord totqtyord
     *
     * @return $this
     */
    public function setTotqtyord($totqtyord)
    {
        $this->container['totqtyord'] = $totqtyord;

        return $this;
    }

    /**
     * Gets totqtyshp
     *
     * @return double
     */
    public function getTotqtyshp()
    {
        return $this->container['totqtyshp'];
    }

    /**
     * Sets totqtyshp
     *
     * @param double $totqtyshp totqtyshp
     *
     * @return $this
     */
    public function setTotqtyshp($totqtyshp)
    {
        $this->container['totqtyshp'] = $totqtyshp;

        return $this;
    }

    /**
     * Gets custname
     *
     * @return string
     */
    public function getCustname()
    {
        return $this->container['custname'];
    }

    /**
     * Sets custname
     *
     * @param string $custname custname
     *
     * @return $this
     */
    public function setCustname($custname)
    {
        $this->container['custname'] = $custname;

        return $this;
    }

    /**
     * Gets cod_amount
     *
     * @return double
     */
    public function getCodAmount()
    {
        return $this->container['cod_amount'];
    }

    /**
     * Sets cod_amount
     *
     * @param double $cod_amount cod_amount
     *
     * @return $this
     */
    public function setCodAmount($cod_amount)
    {
        $this->container['cod_amount'] = $cod_amount;

        return $this;
    }

    /**
     * Gets cod_flag
     *
     * @return bool
     */
    public function getCodFlag()
    {
        return $this->container['cod_flag'];
    }

    /**
     * Sets cod_flag
     *
     * @param bool $cod_flag cod_flag
     *
     * @return $this
     */
    public function setCodFlag($cod_flag)
    {
        $this->container['cod_flag'] = $cod_flag;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


