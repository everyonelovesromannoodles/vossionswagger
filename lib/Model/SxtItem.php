<?php
/**
 * SxtItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxtItem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxtItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxt_item';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'buyer_prod' => 'string',
        'descrip' => 'string',
        'due_dt' => 'string',
        'exp_ship_dt' => 'string',
        'line_comments' => 'string',
        'line_iden' => 'string',
        'promise_dt' => 'string',
        'qty_ord' => 'string',
        'qty_uom' => 'string',
        'req_ship_dt' => 'string',
        'seller_prod' => 'string',
        'spec_price_uom' => 'string',
        'sx_line_no' => 'string',
        'unit_cost' => 'string',
        'upc' => 'string',
        'user1' => 'string',
        'user10' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'string',
        'user7' => 'string',
        'user8' => 'string',
        'user9' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'buyer_prod' => null,
        'descrip' => null,
        'due_dt' => null,
        'exp_ship_dt' => null,
        'line_comments' => null,
        'line_iden' => null,
        'promise_dt' => null,
        'qty_ord' => null,
        'qty_uom' => null,
        'req_ship_dt' => null,
        'seller_prod' => null,
        'spec_price_uom' => null,
        'sx_line_no' => null,
        'unit_cost' => null,
        'upc' => null,
        'user1' => null,
        'user10' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => null,
        'user7' => null,
        'user8' => null,
        'user9' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'buyer_prod' => 'buyerProd',
        'descrip' => 'descrip',
        'due_dt' => 'dueDt',
        'exp_ship_dt' => 'expShipDt',
        'line_comments' => 'lineComments',
        'line_iden' => 'lineIden',
        'promise_dt' => 'promiseDt',
        'qty_ord' => 'qtyOrd',
        'qty_uom' => 'qtyUom',
        'req_ship_dt' => 'reqShipDt',
        'seller_prod' => 'sellerProd',
        'spec_price_uom' => 'specPriceUom',
        'sx_line_no' => 'sxLineNo',
        'unit_cost' => 'unitCost',
        'upc' => 'upc',
        'user1' => 'user1',
        'user10' => 'user10',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'buyer_prod' => 'setBuyerProd',
        'descrip' => 'setDescrip',
        'due_dt' => 'setDueDt',
        'exp_ship_dt' => 'setExpShipDt',
        'line_comments' => 'setLineComments',
        'line_iden' => 'setLineIden',
        'promise_dt' => 'setPromiseDt',
        'qty_ord' => 'setQtyOrd',
        'qty_uom' => 'setQtyUom',
        'req_ship_dt' => 'setReqShipDt',
        'seller_prod' => 'setSellerProd',
        'spec_price_uom' => 'setSpecPriceUom',
        'sx_line_no' => 'setSxLineNo',
        'unit_cost' => 'setUnitCost',
        'upc' => 'setUpc',
        'user1' => 'setUser1',
        'user10' => 'setUser10',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'buyer_prod' => 'getBuyerProd',
        'descrip' => 'getDescrip',
        'due_dt' => 'getDueDt',
        'exp_ship_dt' => 'getExpShipDt',
        'line_comments' => 'getLineComments',
        'line_iden' => 'getLineIden',
        'promise_dt' => 'getPromiseDt',
        'qty_ord' => 'getQtyOrd',
        'qty_uom' => 'getQtyUom',
        'req_ship_dt' => 'getReqShipDt',
        'seller_prod' => 'getSellerProd',
        'spec_price_uom' => 'getSpecPriceUom',
        'sx_line_no' => 'getSxLineNo',
        'unit_cost' => 'getUnitCost',
        'upc' => 'getUpc',
        'user1' => 'getUser1',
        'user10' => 'getUser10',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['buyer_prod'] = isset($data['buyer_prod']) ? $data['buyer_prod'] : null;
        $this->container['descrip'] = isset($data['descrip']) ? $data['descrip'] : null;
        $this->container['due_dt'] = isset($data['due_dt']) ? $data['due_dt'] : null;
        $this->container['exp_ship_dt'] = isset($data['exp_ship_dt']) ? $data['exp_ship_dt'] : null;
        $this->container['line_comments'] = isset($data['line_comments']) ? $data['line_comments'] : null;
        $this->container['line_iden'] = isset($data['line_iden']) ? $data['line_iden'] : null;
        $this->container['promise_dt'] = isset($data['promise_dt']) ? $data['promise_dt'] : null;
        $this->container['qty_ord'] = isset($data['qty_ord']) ? $data['qty_ord'] : null;
        $this->container['qty_uom'] = isset($data['qty_uom']) ? $data['qty_uom'] : null;
        $this->container['req_ship_dt'] = isset($data['req_ship_dt']) ? $data['req_ship_dt'] : null;
        $this->container['seller_prod'] = isset($data['seller_prod']) ? $data['seller_prod'] : null;
        $this->container['spec_price_uom'] = isset($data['spec_price_uom']) ? $data['spec_price_uom'] : null;
        $this->container['sx_line_no'] = isset($data['sx_line_no']) ? $data['sx_line_no'] : null;
        $this->container['unit_cost'] = isset($data['unit_cost']) ? $data['unit_cost'] : null;
        $this->container['upc'] = isset($data['upc']) ? $data['upc'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user10'] = isset($data['user10']) ? $data['user10'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets buyer_prod
     *
     * @return string
     */
    public function getBuyerProd()
    {
        return $this->container['buyer_prod'];
    }

    /**
     * Sets buyer_prod
     *
     * @param string $buyer_prod buyer_prod
     *
     * @return $this
     */
    public function setBuyerProd($buyer_prod)
    {
        $this->container['buyer_prod'] = $buyer_prod;

        return $this;
    }

    /**
     * Gets descrip
     *
     * @return string
     */
    public function getDescrip()
    {
        return $this->container['descrip'];
    }

    /**
     * Sets descrip
     *
     * @param string $descrip descrip
     *
     * @return $this
     */
    public function setDescrip($descrip)
    {
        $this->container['descrip'] = $descrip;

        return $this;
    }

    /**
     * Gets due_dt
     *
     * @return string
     */
    public function getDueDt()
    {
        return $this->container['due_dt'];
    }

    /**
     * Sets due_dt
     *
     * @param string $due_dt due_dt
     *
     * @return $this
     */
    public function setDueDt($due_dt)
    {
        $this->container['due_dt'] = $due_dt;

        return $this;
    }

    /**
     * Gets exp_ship_dt
     *
     * @return string
     */
    public function getExpShipDt()
    {
        return $this->container['exp_ship_dt'];
    }

    /**
     * Sets exp_ship_dt
     *
     * @param string $exp_ship_dt exp_ship_dt
     *
     * @return $this
     */
    public function setExpShipDt($exp_ship_dt)
    {
        $this->container['exp_ship_dt'] = $exp_ship_dt;

        return $this;
    }

    /**
     * Gets line_comments
     *
     * @return string
     */
    public function getLineComments()
    {
        return $this->container['line_comments'];
    }

    /**
     * Sets line_comments
     *
     * @param string $line_comments line_comments
     *
     * @return $this
     */
    public function setLineComments($line_comments)
    {
        $this->container['line_comments'] = $line_comments;

        return $this;
    }

    /**
     * Gets line_iden
     *
     * @return string
     */
    public function getLineIden()
    {
        return $this->container['line_iden'];
    }

    /**
     * Sets line_iden
     *
     * @param string $line_iden line_iden
     *
     * @return $this
     */
    public function setLineIden($line_iden)
    {
        $this->container['line_iden'] = $line_iden;

        return $this;
    }

    /**
     * Gets promise_dt
     *
     * @return string
     */
    public function getPromiseDt()
    {
        return $this->container['promise_dt'];
    }

    /**
     * Sets promise_dt
     *
     * @param string $promise_dt promise_dt
     *
     * @return $this
     */
    public function setPromiseDt($promise_dt)
    {
        $this->container['promise_dt'] = $promise_dt;

        return $this;
    }

    /**
     * Gets qty_ord
     *
     * @return string
     */
    public function getQtyOrd()
    {
        return $this->container['qty_ord'];
    }

    /**
     * Sets qty_ord
     *
     * @param string $qty_ord qty_ord
     *
     * @return $this
     */
    public function setQtyOrd($qty_ord)
    {
        $this->container['qty_ord'] = $qty_ord;

        return $this;
    }

    /**
     * Gets qty_uom
     *
     * @return string
     */
    public function getQtyUom()
    {
        return $this->container['qty_uom'];
    }

    /**
     * Sets qty_uom
     *
     * @param string $qty_uom qty_uom
     *
     * @return $this
     */
    public function setQtyUom($qty_uom)
    {
        $this->container['qty_uom'] = $qty_uom;

        return $this;
    }

    /**
     * Gets req_ship_dt
     *
     * @return string
     */
    public function getReqShipDt()
    {
        return $this->container['req_ship_dt'];
    }

    /**
     * Sets req_ship_dt
     *
     * @param string $req_ship_dt req_ship_dt
     *
     * @return $this
     */
    public function setReqShipDt($req_ship_dt)
    {
        $this->container['req_ship_dt'] = $req_ship_dt;

        return $this;
    }

    /**
     * Gets seller_prod
     *
     * @return string
     */
    public function getSellerProd()
    {
        return $this->container['seller_prod'];
    }

    /**
     * Sets seller_prod
     *
     * @param string $seller_prod seller_prod
     *
     * @return $this
     */
    public function setSellerProd($seller_prod)
    {
        $this->container['seller_prod'] = $seller_prod;

        return $this;
    }

    /**
     * Gets spec_price_uom
     *
     * @return string
     */
    public function getSpecPriceUom()
    {
        return $this->container['spec_price_uom'];
    }

    /**
     * Sets spec_price_uom
     *
     * @param string $spec_price_uom spec_price_uom
     *
     * @return $this
     */
    public function setSpecPriceUom($spec_price_uom)
    {
        $this->container['spec_price_uom'] = $spec_price_uom;

        return $this;
    }

    /**
     * Gets sx_line_no
     *
     * @return string
     */
    public function getSxLineNo()
    {
        return $this->container['sx_line_no'];
    }

    /**
     * Sets sx_line_no
     *
     * @param string $sx_line_no sx_line_no
     *
     * @return $this
     */
    public function setSxLineNo($sx_line_no)
    {
        $this->container['sx_line_no'] = $sx_line_no;

        return $this;
    }

    /**
     * Gets unit_cost
     *
     * @return string
     */
    public function getUnitCost()
    {
        return $this->container['unit_cost'];
    }

    /**
     * Sets unit_cost
     *
     * @param string $unit_cost unit_cost
     *
     * @return $this
     */
    public function setUnitCost($unit_cost)
    {
        $this->container['unit_cost'] = $unit_cost;

        return $this;
    }

    /**
     * Gets upc
     *
     * @return string
     */
    public function getUpc()
    {
        return $this->container['upc'];
    }

    /**
     * Sets upc
     *
     * @param string $upc upc
     *
     * @return $this
     */
    public function setUpc($upc)
    {
        $this->container['upc'] = $upc;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user10
     *
     * @return string
     */
    public function getUser10()
    {
        return $this->container['user10'];
    }

    /**
     * Sets user10
     *
     * @param string $user10 user10
     *
     * @return $this
     */
    public function setUser10($user10)
    {
        $this->container['user10'] = $user10;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return string
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param string $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return string
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param string $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return string
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param string $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return string
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param string $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


