<?php
/**
 * ProdActHeader
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * ProdActHeader Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProdActHeader implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'prodActHeader';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'document_id' => 'string',
        'partner_id' => 'string',
        'begin_date' => 'string',
        'end_date' => 'string',
        'begin_pono' => 'string',
        'begin_posuf' => 'string',
        'end_pono' => 'string',
        'end_posuf' => 'string',
        'vend_no' => 'string',
        'cust_no' => 'string',
        'duns_no' => 'string',
        'serial_flag' => 'string',
        'return_zero_flag' => 'string',
        'detail_level' => 'string',
        'corrrelation_data' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'document_id' => null,
        'partner_id' => null,
        'begin_date' => null,
        'end_date' => null,
        'begin_pono' => null,
        'begin_posuf' => null,
        'end_pono' => null,
        'end_posuf' => null,
        'vend_no' => null,
        'cust_no' => null,
        'duns_no' => null,
        'serial_flag' => null,
        'return_zero_flag' => null,
        'detail_level' => null,
        'corrrelation_data' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'document_id' => 'documentId',
        'partner_id' => 'partnerId',
        'begin_date' => 'beginDate',
        'end_date' => 'endDate',
        'begin_pono' => 'beginPono',
        'begin_posuf' => 'beginPosuf',
        'end_pono' => 'endPono',
        'end_posuf' => 'endPosuf',
        'vend_no' => 'vendNo',
        'cust_no' => 'custNo',
        'duns_no' => 'dunsNo',
        'serial_flag' => 'serialFlag',
        'return_zero_flag' => 'returnZeroFlag',
        'detail_level' => 'detailLevel',
        'corrrelation_data' => 'corrrelationData'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'document_id' => 'setDocumentId',
        'partner_id' => 'setPartnerId',
        'begin_date' => 'setBeginDate',
        'end_date' => 'setEndDate',
        'begin_pono' => 'setBeginPono',
        'begin_posuf' => 'setBeginPosuf',
        'end_pono' => 'setEndPono',
        'end_posuf' => 'setEndPosuf',
        'vend_no' => 'setVendNo',
        'cust_no' => 'setCustNo',
        'duns_no' => 'setDunsNo',
        'serial_flag' => 'setSerialFlag',
        'return_zero_flag' => 'setReturnZeroFlag',
        'detail_level' => 'setDetailLevel',
        'corrrelation_data' => 'setCorrrelationData'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'document_id' => 'getDocumentId',
        'partner_id' => 'getPartnerId',
        'begin_date' => 'getBeginDate',
        'end_date' => 'getEndDate',
        'begin_pono' => 'getBeginPono',
        'begin_posuf' => 'getBeginPosuf',
        'end_pono' => 'getEndPono',
        'end_posuf' => 'getEndPosuf',
        'vend_no' => 'getVendNo',
        'cust_no' => 'getCustNo',
        'duns_no' => 'getDunsNo',
        'serial_flag' => 'getSerialFlag',
        'return_zero_flag' => 'getReturnZeroFlag',
        'detail_level' => 'getDetailLevel',
        'corrrelation_data' => 'getCorrrelationData'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['document_id'] = isset($data['document_id']) ? $data['document_id'] : null;
        $this->container['partner_id'] = isset($data['partner_id']) ? $data['partner_id'] : null;
        $this->container['begin_date'] = isset($data['begin_date']) ? $data['begin_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['begin_pono'] = isset($data['begin_pono']) ? $data['begin_pono'] : null;
        $this->container['begin_posuf'] = isset($data['begin_posuf']) ? $data['begin_posuf'] : null;
        $this->container['end_pono'] = isset($data['end_pono']) ? $data['end_pono'] : null;
        $this->container['end_posuf'] = isset($data['end_posuf']) ? $data['end_posuf'] : null;
        $this->container['vend_no'] = isset($data['vend_no']) ? $data['vend_no'] : null;
        $this->container['cust_no'] = isset($data['cust_no']) ? $data['cust_no'] : null;
        $this->container['duns_no'] = isset($data['duns_no']) ? $data['duns_no'] : null;
        $this->container['serial_flag'] = isset($data['serial_flag']) ? $data['serial_flag'] : null;
        $this->container['return_zero_flag'] = isset($data['return_zero_flag']) ? $data['return_zero_flag'] : null;
        $this->container['detail_level'] = isset($data['detail_level']) ? $data['detail_level'] : null;
        $this->container['corrrelation_data'] = isset($data['corrrelation_data']) ? $data['corrrelation_data'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets document_id
     *
     * @return string
     */
    public function getDocumentId()
    {
        return $this->container['document_id'];
    }

    /**
     * Sets document_id
     *
     * @param string $document_id document_id
     *
     * @return $this
     */
    public function setDocumentId($document_id)
    {
        $this->container['document_id'] = $document_id;

        return $this;
    }

    /**
     * Gets partner_id
     *
     * @return string
     */
    public function getPartnerId()
    {
        return $this->container['partner_id'];
    }

    /**
     * Sets partner_id
     *
     * @param string $partner_id partner_id
     *
     * @return $this
     */
    public function setPartnerId($partner_id)
    {
        $this->container['partner_id'] = $partner_id;

        return $this;
    }

    /**
     * Gets begin_date
     *
     * @return string
     */
    public function getBeginDate()
    {
        return $this->container['begin_date'];
    }

    /**
     * Sets begin_date
     *
     * @param string $begin_date begin_date
     *
     * @return $this
     */
    public function setBeginDate($begin_date)
    {
        $this->container['begin_date'] = $begin_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return string
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param string $end_date end_date
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets begin_pono
     *
     * @return string
     */
    public function getBeginPono()
    {
        return $this->container['begin_pono'];
    }

    /**
     * Sets begin_pono
     *
     * @param string $begin_pono begin_pono
     *
     * @return $this
     */
    public function setBeginPono($begin_pono)
    {
        $this->container['begin_pono'] = $begin_pono;

        return $this;
    }

    /**
     * Gets begin_posuf
     *
     * @return string
     */
    public function getBeginPosuf()
    {
        return $this->container['begin_posuf'];
    }

    /**
     * Sets begin_posuf
     *
     * @param string $begin_posuf begin_posuf
     *
     * @return $this
     */
    public function setBeginPosuf($begin_posuf)
    {
        $this->container['begin_posuf'] = $begin_posuf;

        return $this;
    }

    /**
     * Gets end_pono
     *
     * @return string
     */
    public function getEndPono()
    {
        return $this->container['end_pono'];
    }

    /**
     * Sets end_pono
     *
     * @param string $end_pono end_pono
     *
     * @return $this
     */
    public function setEndPono($end_pono)
    {
        $this->container['end_pono'] = $end_pono;

        return $this;
    }

    /**
     * Gets end_posuf
     *
     * @return string
     */
    public function getEndPosuf()
    {
        return $this->container['end_posuf'];
    }

    /**
     * Sets end_posuf
     *
     * @param string $end_posuf end_posuf
     *
     * @return $this
     */
    public function setEndPosuf($end_posuf)
    {
        $this->container['end_posuf'] = $end_posuf;

        return $this;
    }

    /**
     * Gets vend_no
     *
     * @return string
     */
    public function getVendNo()
    {
        return $this->container['vend_no'];
    }

    /**
     * Sets vend_no
     *
     * @param string $vend_no vend_no
     *
     * @return $this
     */
    public function setVendNo($vend_no)
    {
        $this->container['vend_no'] = $vend_no;

        return $this;
    }

    /**
     * Gets cust_no
     *
     * @return string
     */
    public function getCustNo()
    {
        return $this->container['cust_no'];
    }

    /**
     * Sets cust_no
     *
     * @param string $cust_no cust_no
     *
     * @return $this
     */
    public function setCustNo($cust_no)
    {
        $this->container['cust_no'] = $cust_no;

        return $this;
    }

    /**
     * Gets duns_no
     *
     * @return string
     */
    public function getDunsNo()
    {
        return $this->container['duns_no'];
    }

    /**
     * Sets duns_no
     *
     * @param string $duns_no duns_no
     *
     * @return $this
     */
    public function setDunsNo($duns_no)
    {
        $this->container['duns_no'] = $duns_no;

        return $this;
    }

    /**
     * Gets serial_flag
     *
     * @return string
     */
    public function getSerialFlag()
    {
        return $this->container['serial_flag'];
    }

    /**
     * Sets serial_flag
     *
     * @param string $serial_flag serial_flag
     *
     * @return $this
     */
    public function setSerialFlag($serial_flag)
    {
        $this->container['serial_flag'] = $serial_flag;

        return $this;
    }

    /**
     * Gets return_zero_flag
     *
     * @return string
     */
    public function getReturnZeroFlag()
    {
        return $this->container['return_zero_flag'];
    }

    /**
     * Sets return_zero_flag
     *
     * @param string $return_zero_flag return_zero_flag
     *
     * @return $this
     */
    public function setReturnZeroFlag($return_zero_flag)
    {
        $this->container['return_zero_flag'] = $return_zero_flag;

        return $this;
    }

    /**
     * Gets detail_level
     *
     * @return string
     */
    public function getDetailLevel()
    {
        return $this->container['detail_level'];
    }

    /**
     * Sets detail_level
     *
     * @param string $detail_level detail_level
     *
     * @return $this
     */
    public function setDetailLevel($detail_level)
    {
        $this->container['detail_level'] = $detail_level;

        return $this;
    }

    /**
     * Gets corrrelation_data
     *
     * @return string
     */
    public function getCorrrelationData()
    {
        return $this->container['corrrelation_data'];
    }

    /**
     * Sets corrrelation_data
     *
     * @param string $corrrelation_data corrrelation_data
     *
     * @return $this
     */
    public function setCorrrelationData($corrrelation_data)
    {
        $this->container['corrrelation_data'] = $corrrelation_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


