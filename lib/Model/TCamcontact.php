<?php
/**
 * TCamcontact
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TCamcontact Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TCamcontact implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-camcontact';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'contactid' => 'double',
        'cono' => 'int',
        'firstnm' => 'string',
        'middlenm' => 'string',
        'lastnm' => 'string',
        'comment' => 'string',
        'contacttype' => 'string',
        'contacttypedesc' => 'string',
        'cotitle' => 'string',
        'groupcd' => 'string',
        'priority' => 'int',
        'salutation' => 'string',
        'dateuser1' => '\DateTime',
        'dateuser2' => '\DateTime',
        'dateuser3' => '\DateTime',
        'dateuser4' => '\DateTime',
        'dateuser5' => '\DateTime',
        'decuser1' => 'double',
        'decuser2' => 'double',
        'decuser3' => 'double',
        'decuser4' => 'double',
        'decuser5' => 'double',
        'intuser1' => 'int',
        'intuser2' => 'int',
        'intuser3' => 'int',
        'intuser4' => 'int',
        'intuser5' => 'int',
        'charuser1' => 'string',
        'charuser2' => 'string',
        'charuser3' => 'string',
        'charuser4' => 'string',
        'charuser5' => 'string',
        'charuser6' => 'string',
        'charuser7' => 'string',
        'charuser8' => 'string',
        'charuser9' => 'string',
        'charuser10' => 'string',
        'loguser1' => 'bool',
        'loguser2' => 'bool',
        'loguser3' => 'bool',
        'loguser4' => 'bool',
        'loguser5' => 'bool',
        'firstroletype' => 'string',
        'firstprimarykey' => 'string',
        'firstsecondarykey' => 'string',
        'firstname' => 'string',
        'secondroletype' => 'string',
        'secondprimarykey' => 'string',
        'secondsecondarykey' => 'string',
        'secondname' => 'string',
        'firstphoneno' => 'string',
        'firstphonenodesc' => 'string',
        'secondphoneno' => 'string',
        'secondphonenodesc' => 'string',
        'thirdphoneno' => 'string',
        'thirdphonenodesc' => 'string',
        'faxphoneno' => 'string',
        'firstemailaddr' => 'string',
        'firstemailaddrdesc' => 'string',
        'secondemailaddr' => 'string',
        'secondemailaddrdesc' => 'string',
        'addr1' => 'string',
        'addr2' => 'string',
        'city' => 'string',
        'state' => 'string',
        'zipcd' => 'string',
        'notesdata' => 'string',
        'sortfield' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'contactid' => 'double',
        'cono' => 'int64',
        'firstnm' => null,
        'middlenm' => null,
        'lastnm' => null,
        'comment' => null,
        'contacttype' => null,
        'contacttypedesc' => null,
        'cotitle' => null,
        'groupcd' => null,
        'priority' => 'int64',
        'salutation' => null,
        'dateuser1' => 'date',
        'dateuser2' => 'date',
        'dateuser3' => 'date',
        'dateuser4' => 'date',
        'dateuser5' => 'date',
        'decuser1' => 'double',
        'decuser2' => 'double',
        'decuser3' => 'double',
        'decuser4' => 'double',
        'decuser5' => 'double',
        'intuser1' => 'int64',
        'intuser2' => 'int64',
        'intuser3' => 'int64',
        'intuser4' => 'int64',
        'intuser5' => 'int64',
        'charuser1' => null,
        'charuser2' => null,
        'charuser3' => null,
        'charuser4' => null,
        'charuser5' => null,
        'charuser6' => null,
        'charuser7' => null,
        'charuser8' => null,
        'charuser9' => null,
        'charuser10' => null,
        'loguser1' => null,
        'loguser2' => null,
        'loguser3' => null,
        'loguser4' => null,
        'loguser5' => null,
        'firstroletype' => null,
        'firstprimarykey' => null,
        'firstsecondarykey' => null,
        'firstname' => null,
        'secondroletype' => null,
        'secondprimarykey' => null,
        'secondsecondarykey' => null,
        'secondname' => null,
        'firstphoneno' => null,
        'firstphonenodesc' => null,
        'secondphoneno' => null,
        'secondphonenodesc' => null,
        'thirdphoneno' => null,
        'thirdphonenodesc' => null,
        'faxphoneno' => null,
        'firstemailaddr' => null,
        'firstemailaddrdesc' => null,
        'secondemailaddr' => null,
        'secondemailaddrdesc' => null,
        'addr1' => null,
        'addr2' => null,
        'city' => null,
        'state' => null,
        'zipcd' => null,
        'notesdata' => null,
        'sortfield' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'contactid' => 'contactid',
        'cono' => 'cono',
        'firstnm' => 'firstnm',
        'middlenm' => 'middlenm',
        'lastnm' => 'lastnm',
        'comment' => 'comment',
        'contacttype' => 'contacttype',
        'contacttypedesc' => 'contacttypedesc',
        'cotitle' => 'cotitle',
        'groupcd' => 'groupcd',
        'priority' => 'priority',
        'salutation' => 'salutation',
        'dateuser1' => 'dateuser1',
        'dateuser2' => 'dateuser2',
        'dateuser3' => 'dateuser3',
        'dateuser4' => 'dateuser4',
        'dateuser5' => 'dateuser5',
        'decuser1' => 'decuser1',
        'decuser2' => 'decuser2',
        'decuser3' => 'decuser3',
        'decuser4' => 'decuser4',
        'decuser5' => 'decuser5',
        'intuser1' => 'intuser1',
        'intuser2' => 'intuser2',
        'intuser3' => 'intuser3',
        'intuser4' => 'intuser4',
        'intuser5' => 'intuser5',
        'charuser1' => 'charuser1',
        'charuser2' => 'charuser2',
        'charuser3' => 'charuser3',
        'charuser4' => 'charuser4',
        'charuser5' => 'charuser5',
        'charuser6' => 'charuser6',
        'charuser7' => 'charuser7',
        'charuser8' => 'charuser8',
        'charuser9' => 'charuser9',
        'charuser10' => 'charuser10',
        'loguser1' => 'loguser1',
        'loguser2' => 'loguser2',
        'loguser3' => 'loguser3',
        'loguser4' => 'loguser4',
        'loguser5' => 'loguser5',
        'firstroletype' => 'firstroletype',
        'firstprimarykey' => 'firstprimarykey',
        'firstsecondarykey' => 'firstsecondarykey',
        'firstname' => 'firstname',
        'secondroletype' => 'secondroletype',
        'secondprimarykey' => 'secondprimarykey',
        'secondsecondarykey' => 'secondsecondarykey',
        'secondname' => 'secondname',
        'firstphoneno' => 'firstphoneno',
        'firstphonenodesc' => 'firstphonenodesc',
        'secondphoneno' => 'secondphoneno',
        'secondphonenodesc' => 'secondphonenodesc',
        'thirdphoneno' => 'thirdphoneno',
        'thirdphonenodesc' => 'thirdphonenodesc',
        'faxphoneno' => 'faxphoneno',
        'firstemailaddr' => 'firstemailaddr',
        'firstemailaddrdesc' => 'firstemailaddrdesc',
        'secondemailaddr' => 'secondemailaddr',
        'secondemailaddrdesc' => 'secondemailaddrdesc',
        'addr1' => 'addr1',
        'addr2' => 'addr2',
        'city' => 'city',
        'state' => 'state',
        'zipcd' => 'zipcd',
        'notesdata' => 'notesdata',
        'sortfield' => 'sortfield'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'contactid' => 'setContactid',
        'cono' => 'setCono',
        'firstnm' => 'setFirstnm',
        'middlenm' => 'setMiddlenm',
        'lastnm' => 'setLastnm',
        'comment' => 'setComment',
        'contacttype' => 'setContacttype',
        'contacttypedesc' => 'setContacttypedesc',
        'cotitle' => 'setCotitle',
        'groupcd' => 'setGroupcd',
        'priority' => 'setPriority',
        'salutation' => 'setSalutation',
        'dateuser1' => 'setDateuser1',
        'dateuser2' => 'setDateuser2',
        'dateuser3' => 'setDateuser3',
        'dateuser4' => 'setDateuser4',
        'dateuser5' => 'setDateuser5',
        'decuser1' => 'setDecuser1',
        'decuser2' => 'setDecuser2',
        'decuser3' => 'setDecuser3',
        'decuser4' => 'setDecuser4',
        'decuser5' => 'setDecuser5',
        'intuser1' => 'setIntuser1',
        'intuser2' => 'setIntuser2',
        'intuser3' => 'setIntuser3',
        'intuser4' => 'setIntuser4',
        'intuser5' => 'setIntuser5',
        'charuser1' => 'setCharuser1',
        'charuser2' => 'setCharuser2',
        'charuser3' => 'setCharuser3',
        'charuser4' => 'setCharuser4',
        'charuser5' => 'setCharuser5',
        'charuser6' => 'setCharuser6',
        'charuser7' => 'setCharuser7',
        'charuser8' => 'setCharuser8',
        'charuser9' => 'setCharuser9',
        'charuser10' => 'setCharuser10',
        'loguser1' => 'setLoguser1',
        'loguser2' => 'setLoguser2',
        'loguser3' => 'setLoguser3',
        'loguser4' => 'setLoguser4',
        'loguser5' => 'setLoguser5',
        'firstroletype' => 'setFirstroletype',
        'firstprimarykey' => 'setFirstprimarykey',
        'firstsecondarykey' => 'setFirstsecondarykey',
        'firstname' => 'setFirstname',
        'secondroletype' => 'setSecondroletype',
        'secondprimarykey' => 'setSecondprimarykey',
        'secondsecondarykey' => 'setSecondsecondarykey',
        'secondname' => 'setSecondname',
        'firstphoneno' => 'setFirstphoneno',
        'firstphonenodesc' => 'setFirstphonenodesc',
        'secondphoneno' => 'setSecondphoneno',
        'secondphonenodesc' => 'setSecondphonenodesc',
        'thirdphoneno' => 'setThirdphoneno',
        'thirdphonenodesc' => 'setThirdphonenodesc',
        'faxphoneno' => 'setFaxphoneno',
        'firstemailaddr' => 'setFirstemailaddr',
        'firstemailaddrdesc' => 'setFirstemailaddrdesc',
        'secondemailaddr' => 'setSecondemailaddr',
        'secondemailaddrdesc' => 'setSecondemailaddrdesc',
        'addr1' => 'setAddr1',
        'addr2' => 'setAddr2',
        'city' => 'setCity',
        'state' => 'setState',
        'zipcd' => 'setZipcd',
        'notesdata' => 'setNotesdata',
        'sortfield' => 'setSortfield'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'contactid' => 'getContactid',
        'cono' => 'getCono',
        'firstnm' => 'getFirstnm',
        'middlenm' => 'getMiddlenm',
        'lastnm' => 'getLastnm',
        'comment' => 'getComment',
        'contacttype' => 'getContacttype',
        'contacttypedesc' => 'getContacttypedesc',
        'cotitle' => 'getCotitle',
        'groupcd' => 'getGroupcd',
        'priority' => 'getPriority',
        'salutation' => 'getSalutation',
        'dateuser1' => 'getDateuser1',
        'dateuser2' => 'getDateuser2',
        'dateuser3' => 'getDateuser3',
        'dateuser4' => 'getDateuser4',
        'dateuser5' => 'getDateuser5',
        'decuser1' => 'getDecuser1',
        'decuser2' => 'getDecuser2',
        'decuser3' => 'getDecuser3',
        'decuser4' => 'getDecuser4',
        'decuser5' => 'getDecuser5',
        'intuser1' => 'getIntuser1',
        'intuser2' => 'getIntuser2',
        'intuser3' => 'getIntuser3',
        'intuser4' => 'getIntuser4',
        'intuser5' => 'getIntuser5',
        'charuser1' => 'getCharuser1',
        'charuser2' => 'getCharuser2',
        'charuser3' => 'getCharuser3',
        'charuser4' => 'getCharuser4',
        'charuser5' => 'getCharuser5',
        'charuser6' => 'getCharuser6',
        'charuser7' => 'getCharuser7',
        'charuser8' => 'getCharuser8',
        'charuser9' => 'getCharuser9',
        'charuser10' => 'getCharuser10',
        'loguser1' => 'getLoguser1',
        'loguser2' => 'getLoguser2',
        'loguser3' => 'getLoguser3',
        'loguser4' => 'getLoguser4',
        'loguser5' => 'getLoguser5',
        'firstroletype' => 'getFirstroletype',
        'firstprimarykey' => 'getFirstprimarykey',
        'firstsecondarykey' => 'getFirstsecondarykey',
        'firstname' => 'getFirstname',
        'secondroletype' => 'getSecondroletype',
        'secondprimarykey' => 'getSecondprimarykey',
        'secondsecondarykey' => 'getSecondsecondarykey',
        'secondname' => 'getSecondname',
        'firstphoneno' => 'getFirstphoneno',
        'firstphonenodesc' => 'getFirstphonenodesc',
        'secondphoneno' => 'getSecondphoneno',
        'secondphonenodesc' => 'getSecondphonenodesc',
        'thirdphoneno' => 'getThirdphoneno',
        'thirdphonenodesc' => 'getThirdphonenodesc',
        'faxphoneno' => 'getFaxphoneno',
        'firstemailaddr' => 'getFirstemailaddr',
        'firstemailaddrdesc' => 'getFirstemailaddrdesc',
        'secondemailaddr' => 'getSecondemailaddr',
        'secondemailaddrdesc' => 'getSecondemailaddrdesc',
        'addr1' => 'getAddr1',
        'addr2' => 'getAddr2',
        'city' => 'getCity',
        'state' => 'getState',
        'zipcd' => 'getZipcd',
        'notesdata' => 'getNotesdata',
        'sortfield' => 'getSortfield'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['contactid'] = isset($data['contactid']) ? $data['contactid'] : null;
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['firstnm'] = isset($data['firstnm']) ? $data['firstnm'] : null;
        $this->container['middlenm'] = isset($data['middlenm']) ? $data['middlenm'] : null;
        $this->container['lastnm'] = isset($data['lastnm']) ? $data['lastnm'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['contacttype'] = isset($data['contacttype']) ? $data['contacttype'] : null;
        $this->container['contacttypedesc'] = isset($data['contacttypedesc']) ? $data['contacttypedesc'] : null;
        $this->container['cotitle'] = isset($data['cotitle']) ? $data['cotitle'] : null;
        $this->container['groupcd'] = isset($data['groupcd']) ? $data['groupcd'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['salutation'] = isset($data['salutation']) ? $data['salutation'] : null;
        $this->container['dateuser1'] = isset($data['dateuser1']) ? $data['dateuser1'] : null;
        $this->container['dateuser2'] = isset($data['dateuser2']) ? $data['dateuser2'] : null;
        $this->container['dateuser3'] = isset($data['dateuser3']) ? $data['dateuser3'] : null;
        $this->container['dateuser4'] = isset($data['dateuser4']) ? $data['dateuser4'] : null;
        $this->container['dateuser5'] = isset($data['dateuser5']) ? $data['dateuser5'] : null;
        $this->container['decuser1'] = isset($data['decuser1']) ? $data['decuser1'] : null;
        $this->container['decuser2'] = isset($data['decuser2']) ? $data['decuser2'] : null;
        $this->container['decuser3'] = isset($data['decuser3']) ? $data['decuser3'] : null;
        $this->container['decuser4'] = isset($data['decuser4']) ? $data['decuser4'] : null;
        $this->container['decuser5'] = isset($data['decuser5']) ? $data['decuser5'] : null;
        $this->container['intuser1'] = isset($data['intuser1']) ? $data['intuser1'] : null;
        $this->container['intuser2'] = isset($data['intuser2']) ? $data['intuser2'] : null;
        $this->container['intuser3'] = isset($data['intuser3']) ? $data['intuser3'] : null;
        $this->container['intuser4'] = isset($data['intuser4']) ? $data['intuser4'] : null;
        $this->container['intuser5'] = isset($data['intuser5']) ? $data['intuser5'] : null;
        $this->container['charuser1'] = isset($data['charuser1']) ? $data['charuser1'] : null;
        $this->container['charuser2'] = isset($data['charuser2']) ? $data['charuser2'] : null;
        $this->container['charuser3'] = isset($data['charuser3']) ? $data['charuser3'] : null;
        $this->container['charuser4'] = isset($data['charuser4']) ? $data['charuser4'] : null;
        $this->container['charuser5'] = isset($data['charuser5']) ? $data['charuser5'] : null;
        $this->container['charuser6'] = isset($data['charuser6']) ? $data['charuser6'] : null;
        $this->container['charuser7'] = isset($data['charuser7']) ? $data['charuser7'] : null;
        $this->container['charuser8'] = isset($data['charuser8']) ? $data['charuser8'] : null;
        $this->container['charuser9'] = isset($data['charuser9']) ? $data['charuser9'] : null;
        $this->container['charuser10'] = isset($data['charuser10']) ? $data['charuser10'] : null;
        $this->container['loguser1'] = isset($data['loguser1']) ? $data['loguser1'] : null;
        $this->container['loguser2'] = isset($data['loguser2']) ? $data['loguser2'] : null;
        $this->container['loguser3'] = isset($data['loguser3']) ? $data['loguser3'] : null;
        $this->container['loguser4'] = isset($data['loguser4']) ? $data['loguser4'] : null;
        $this->container['loguser5'] = isset($data['loguser5']) ? $data['loguser5'] : null;
        $this->container['firstroletype'] = isset($data['firstroletype']) ? $data['firstroletype'] : null;
        $this->container['firstprimarykey'] = isset($data['firstprimarykey']) ? $data['firstprimarykey'] : null;
        $this->container['firstsecondarykey'] = isset($data['firstsecondarykey']) ? $data['firstsecondarykey'] : null;
        $this->container['firstname'] = isset($data['firstname']) ? $data['firstname'] : null;
        $this->container['secondroletype'] = isset($data['secondroletype']) ? $data['secondroletype'] : null;
        $this->container['secondprimarykey'] = isset($data['secondprimarykey']) ? $data['secondprimarykey'] : null;
        $this->container['secondsecondarykey'] = isset($data['secondsecondarykey']) ? $data['secondsecondarykey'] : null;
        $this->container['secondname'] = isset($data['secondname']) ? $data['secondname'] : null;
        $this->container['firstphoneno'] = isset($data['firstphoneno']) ? $data['firstphoneno'] : null;
        $this->container['firstphonenodesc'] = isset($data['firstphonenodesc']) ? $data['firstphonenodesc'] : null;
        $this->container['secondphoneno'] = isset($data['secondphoneno']) ? $data['secondphoneno'] : null;
        $this->container['secondphonenodesc'] = isset($data['secondphonenodesc']) ? $data['secondphonenodesc'] : null;
        $this->container['thirdphoneno'] = isset($data['thirdphoneno']) ? $data['thirdphoneno'] : null;
        $this->container['thirdphonenodesc'] = isset($data['thirdphonenodesc']) ? $data['thirdphonenodesc'] : null;
        $this->container['faxphoneno'] = isset($data['faxphoneno']) ? $data['faxphoneno'] : null;
        $this->container['firstemailaddr'] = isset($data['firstemailaddr']) ? $data['firstemailaddr'] : null;
        $this->container['firstemailaddrdesc'] = isset($data['firstemailaddrdesc']) ? $data['firstemailaddrdesc'] : null;
        $this->container['secondemailaddr'] = isset($data['secondemailaddr']) ? $data['secondemailaddr'] : null;
        $this->container['secondemailaddrdesc'] = isset($data['secondemailaddrdesc']) ? $data['secondemailaddrdesc'] : null;
        $this->container['addr1'] = isset($data['addr1']) ? $data['addr1'] : null;
        $this->container['addr2'] = isset($data['addr2']) ? $data['addr2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['zipcd'] = isset($data['zipcd']) ? $data['zipcd'] : null;
        $this->container['notesdata'] = isset($data['notesdata']) ? $data['notesdata'] : null;
        $this->container['sortfield'] = isset($data['sortfield']) ? $data['sortfield'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets contactid
     *
     * @return double
     */
    public function getContactid()
    {
        return $this->container['contactid'];
    }

    /**
     * Sets contactid
     *
     * @param double $contactid contactid
     *
     * @return $this
     */
    public function setContactid($contactid)
    {
        $this->container['contactid'] = $contactid;

        return $this;
    }

    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets firstnm
     *
     * @return string
     */
    public function getFirstnm()
    {
        return $this->container['firstnm'];
    }

    /**
     * Sets firstnm
     *
     * @param string $firstnm firstnm
     *
     * @return $this
     */
    public function setFirstnm($firstnm)
    {
        $this->container['firstnm'] = $firstnm;

        return $this;
    }

    /**
     * Gets middlenm
     *
     * @return string
     */
    public function getMiddlenm()
    {
        return $this->container['middlenm'];
    }

    /**
     * Sets middlenm
     *
     * @param string $middlenm middlenm
     *
     * @return $this
     */
    public function setMiddlenm($middlenm)
    {
        $this->container['middlenm'] = $middlenm;

        return $this;
    }

    /**
     * Gets lastnm
     *
     * @return string
     */
    public function getLastnm()
    {
        return $this->container['lastnm'];
    }

    /**
     * Sets lastnm
     *
     * @param string $lastnm lastnm
     *
     * @return $this
     */
    public function setLastnm($lastnm)
    {
        $this->container['lastnm'] = $lastnm;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string $comment comment
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets contacttype
     *
     * @return string
     */
    public function getContacttype()
    {
        return $this->container['contacttype'];
    }

    /**
     * Sets contacttype
     *
     * @param string $contacttype contacttype
     *
     * @return $this
     */
    public function setContacttype($contacttype)
    {
        $this->container['contacttype'] = $contacttype;

        return $this;
    }

    /**
     * Gets contacttypedesc
     *
     * @return string
     */
    public function getContacttypedesc()
    {
        return $this->container['contacttypedesc'];
    }

    /**
     * Sets contacttypedesc
     *
     * @param string $contacttypedesc contacttypedesc
     *
     * @return $this
     */
    public function setContacttypedesc($contacttypedesc)
    {
        $this->container['contacttypedesc'] = $contacttypedesc;

        return $this;
    }

    /**
     * Gets cotitle
     *
     * @return string
     */
    public function getCotitle()
    {
        return $this->container['cotitle'];
    }

    /**
     * Sets cotitle
     *
     * @param string $cotitle cotitle
     *
     * @return $this
     */
    public function setCotitle($cotitle)
    {
        $this->container['cotitle'] = $cotitle;

        return $this;
    }

    /**
     * Gets groupcd
     *
     * @return string
     */
    public function getGroupcd()
    {
        return $this->container['groupcd'];
    }

    /**
     * Sets groupcd
     *
     * @param string $groupcd groupcd
     *
     * @return $this
     */
    public function setGroupcd($groupcd)
    {
        $this->container['groupcd'] = $groupcd;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return int
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param int $priority priority
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets salutation
     *
     * @return string
     */
    public function getSalutation()
    {
        return $this->container['salutation'];
    }

    /**
     * Sets salutation
     *
     * @param string $salutation salutation
     *
     * @return $this
     */
    public function setSalutation($salutation)
    {
        $this->container['salutation'] = $salutation;

        return $this;
    }

    /**
     * Gets dateuser1
     *
     * @return \DateTime
     */
    public function getDateuser1()
    {
        return $this->container['dateuser1'];
    }

    /**
     * Sets dateuser1
     *
     * @param \DateTime $dateuser1 dateuser1
     *
     * @return $this
     */
    public function setDateuser1($dateuser1)
    {
        $this->container['dateuser1'] = $dateuser1;

        return $this;
    }

    /**
     * Gets dateuser2
     *
     * @return \DateTime
     */
    public function getDateuser2()
    {
        return $this->container['dateuser2'];
    }

    /**
     * Sets dateuser2
     *
     * @param \DateTime $dateuser2 dateuser2
     *
     * @return $this
     */
    public function setDateuser2($dateuser2)
    {
        $this->container['dateuser2'] = $dateuser2;

        return $this;
    }

    /**
     * Gets dateuser3
     *
     * @return \DateTime
     */
    public function getDateuser3()
    {
        return $this->container['dateuser3'];
    }

    /**
     * Sets dateuser3
     *
     * @param \DateTime $dateuser3 dateuser3
     *
     * @return $this
     */
    public function setDateuser3($dateuser3)
    {
        $this->container['dateuser3'] = $dateuser3;

        return $this;
    }

    /**
     * Gets dateuser4
     *
     * @return \DateTime
     */
    public function getDateuser4()
    {
        return $this->container['dateuser4'];
    }

    /**
     * Sets dateuser4
     *
     * @param \DateTime $dateuser4 dateuser4
     *
     * @return $this
     */
    public function setDateuser4($dateuser4)
    {
        $this->container['dateuser4'] = $dateuser4;

        return $this;
    }

    /**
     * Gets dateuser5
     *
     * @return \DateTime
     */
    public function getDateuser5()
    {
        return $this->container['dateuser5'];
    }

    /**
     * Sets dateuser5
     *
     * @param \DateTime $dateuser5 dateuser5
     *
     * @return $this
     */
    public function setDateuser5($dateuser5)
    {
        $this->container['dateuser5'] = $dateuser5;

        return $this;
    }

    /**
     * Gets decuser1
     *
     * @return double
     */
    public function getDecuser1()
    {
        return $this->container['decuser1'];
    }

    /**
     * Sets decuser1
     *
     * @param double $decuser1 decuser1
     *
     * @return $this
     */
    public function setDecuser1($decuser1)
    {
        $this->container['decuser1'] = $decuser1;

        return $this;
    }

    /**
     * Gets decuser2
     *
     * @return double
     */
    public function getDecuser2()
    {
        return $this->container['decuser2'];
    }

    /**
     * Sets decuser2
     *
     * @param double $decuser2 decuser2
     *
     * @return $this
     */
    public function setDecuser2($decuser2)
    {
        $this->container['decuser2'] = $decuser2;

        return $this;
    }

    /**
     * Gets decuser3
     *
     * @return double
     */
    public function getDecuser3()
    {
        return $this->container['decuser3'];
    }

    /**
     * Sets decuser3
     *
     * @param double $decuser3 decuser3
     *
     * @return $this
     */
    public function setDecuser3($decuser3)
    {
        $this->container['decuser3'] = $decuser3;

        return $this;
    }

    /**
     * Gets decuser4
     *
     * @return double
     */
    public function getDecuser4()
    {
        return $this->container['decuser4'];
    }

    /**
     * Sets decuser4
     *
     * @param double $decuser4 decuser4
     *
     * @return $this
     */
    public function setDecuser4($decuser4)
    {
        $this->container['decuser4'] = $decuser4;

        return $this;
    }

    /**
     * Gets decuser5
     *
     * @return double
     */
    public function getDecuser5()
    {
        return $this->container['decuser5'];
    }

    /**
     * Sets decuser5
     *
     * @param double $decuser5 decuser5
     *
     * @return $this
     */
    public function setDecuser5($decuser5)
    {
        $this->container['decuser5'] = $decuser5;

        return $this;
    }

    /**
     * Gets intuser1
     *
     * @return int
     */
    public function getIntuser1()
    {
        return $this->container['intuser1'];
    }

    /**
     * Sets intuser1
     *
     * @param int $intuser1 intuser1
     *
     * @return $this
     */
    public function setIntuser1($intuser1)
    {
        $this->container['intuser1'] = $intuser1;

        return $this;
    }

    /**
     * Gets intuser2
     *
     * @return int
     */
    public function getIntuser2()
    {
        return $this->container['intuser2'];
    }

    /**
     * Sets intuser2
     *
     * @param int $intuser2 intuser2
     *
     * @return $this
     */
    public function setIntuser2($intuser2)
    {
        $this->container['intuser2'] = $intuser2;

        return $this;
    }

    /**
     * Gets intuser3
     *
     * @return int
     */
    public function getIntuser3()
    {
        return $this->container['intuser3'];
    }

    /**
     * Sets intuser3
     *
     * @param int $intuser3 intuser3
     *
     * @return $this
     */
    public function setIntuser3($intuser3)
    {
        $this->container['intuser3'] = $intuser3;

        return $this;
    }

    /**
     * Gets intuser4
     *
     * @return int
     */
    public function getIntuser4()
    {
        return $this->container['intuser4'];
    }

    /**
     * Sets intuser4
     *
     * @param int $intuser4 intuser4
     *
     * @return $this
     */
    public function setIntuser4($intuser4)
    {
        $this->container['intuser4'] = $intuser4;

        return $this;
    }

    /**
     * Gets intuser5
     *
     * @return int
     */
    public function getIntuser5()
    {
        return $this->container['intuser5'];
    }

    /**
     * Sets intuser5
     *
     * @param int $intuser5 intuser5
     *
     * @return $this
     */
    public function setIntuser5($intuser5)
    {
        $this->container['intuser5'] = $intuser5;

        return $this;
    }

    /**
     * Gets charuser1
     *
     * @return string
     */
    public function getCharuser1()
    {
        return $this->container['charuser1'];
    }

    /**
     * Sets charuser1
     *
     * @param string $charuser1 charuser1
     *
     * @return $this
     */
    public function setCharuser1($charuser1)
    {
        $this->container['charuser1'] = $charuser1;

        return $this;
    }

    /**
     * Gets charuser2
     *
     * @return string
     */
    public function getCharuser2()
    {
        return $this->container['charuser2'];
    }

    /**
     * Sets charuser2
     *
     * @param string $charuser2 charuser2
     *
     * @return $this
     */
    public function setCharuser2($charuser2)
    {
        $this->container['charuser2'] = $charuser2;

        return $this;
    }

    /**
     * Gets charuser3
     *
     * @return string
     */
    public function getCharuser3()
    {
        return $this->container['charuser3'];
    }

    /**
     * Sets charuser3
     *
     * @param string $charuser3 charuser3
     *
     * @return $this
     */
    public function setCharuser3($charuser3)
    {
        $this->container['charuser3'] = $charuser3;

        return $this;
    }

    /**
     * Gets charuser4
     *
     * @return string
     */
    public function getCharuser4()
    {
        return $this->container['charuser4'];
    }

    /**
     * Sets charuser4
     *
     * @param string $charuser4 charuser4
     *
     * @return $this
     */
    public function setCharuser4($charuser4)
    {
        $this->container['charuser4'] = $charuser4;

        return $this;
    }

    /**
     * Gets charuser5
     *
     * @return string
     */
    public function getCharuser5()
    {
        return $this->container['charuser5'];
    }

    /**
     * Sets charuser5
     *
     * @param string $charuser5 charuser5
     *
     * @return $this
     */
    public function setCharuser5($charuser5)
    {
        $this->container['charuser5'] = $charuser5;

        return $this;
    }

    /**
     * Gets charuser6
     *
     * @return string
     */
    public function getCharuser6()
    {
        return $this->container['charuser6'];
    }

    /**
     * Sets charuser6
     *
     * @param string $charuser6 charuser6
     *
     * @return $this
     */
    public function setCharuser6($charuser6)
    {
        $this->container['charuser6'] = $charuser6;

        return $this;
    }

    /**
     * Gets charuser7
     *
     * @return string
     */
    public function getCharuser7()
    {
        return $this->container['charuser7'];
    }

    /**
     * Sets charuser7
     *
     * @param string $charuser7 charuser7
     *
     * @return $this
     */
    public function setCharuser7($charuser7)
    {
        $this->container['charuser7'] = $charuser7;

        return $this;
    }

    /**
     * Gets charuser8
     *
     * @return string
     */
    public function getCharuser8()
    {
        return $this->container['charuser8'];
    }

    /**
     * Sets charuser8
     *
     * @param string $charuser8 charuser8
     *
     * @return $this
     */
    public function setCharuser8($charuser8)
    {
        $this->container['charuser8'] = $charuser8;

        return $this;
    }

    /**
     * Gets charuser9
     *
     * @return string
     */
    public function getCharuser9()
    {
        return $this->container['charuser9'];
    }

    /**
     * Sets charuser9
     *
     * @param string $charuser9 charuser9
     *
     * @return $this
     */
    public function setCharuser9($charuser9)
    {
        $this->container['charuser9'] = $charuser9;

        return $this;
    }

    /**
     * Gets charuser10
     *
     * @return string
     */
    public function getCharuser10()
    {
        return $this->container['charuser10'];
    }

    /**
     * Sets charuser10
     *
     * @param string $charuser10 charuser10
     *
     * @return $this
     */
    public function setCharuser10($charuser10)
    {
        $this->container['charuser10'] = $charuser10;

        return $this;
    }

    /**
     * Gets loguser1
     *
     * @return bool
     */
    public function getLoguser1()
    {
        return $this->container['loguser1'];
    }

    /**
     * Sets loguser1
     *
     * @param bool $loguser1 loguser1
     *
     * @return $this
     */
    public function setLoguser1($loguser1)
    {
        $this->container['loguser1'] = $loguser1;

        return $this;
    }

    /**
     * Gets loguser2
     *
     * @return bool
     */
    public function getLoguser2()
    {
        return $this->container['loguser2'];
    }

    /**
     * Sets loguser2
     *
     * @param bool $loguser2 loguser2
     *
     * @return $this
     */
    public function setLoguser2($loguser2)
    {
        $this->container['loguser2'] = $loguser2;

        return $this;
    }

    /**
     * Gets loguser3
     *
     * @return bool
     */
    public function getLoguser3()
    {
        return $this->container['loguser3'];
    }

    /**
     * Sets loguser3
     *
     * @param bool $loguser3 loguser3
     *
     * @return $this
     */
    public function setLoguser3($loguser3)
    {
        $this->container['loguser3'] = $loguser3;

        return $this;
    }

    /**
     * Gets loguser4
     *
     * @return bool
     */
    public function getLoguser4()
    {
        return $this->container['loguser4'];
    }

    /**
     * Sets loguser4
     *
     * @param bool $loguser4 loguser4
     *
     * @return $this
     */
    public function setLoguser4($loguser4)
    {
        $this->container['loguser4'] = $loguser4;

        return $this;
    }

    /**
     * Gets loguser5
     *
     * @return bool
     */
    public function getLoguser5()
    {
        return $this->container['loguser5'];
    }

    /**
     * Sets loguser5
     *
     * @param bool $loguser5 loguser5
     *
     * @return $this
     */
    public function setLoguser5($loguser5)
    {
        $this->container['loguser5'] = $loguser5;

        return $this;
    }

    /**
     * Gets firstroletype
     *
     * @return string
     */
    public function getFirstroletype()
    {
        return $this->container['firstroletype'];
    }

    /**
     * Sets firstroletype
     *
     * @param string $firstroletype firstroletype
     *
     * @return $this
     */
    public function setFirstroletype($firstroletype)
    {
        $this->container['firstroletype'] = $firstroletype;

        return $this;
    }

    /**
     * Gets firstprimarykey
     *
     * @return string
     */
    public function getFirstprimarykey()
    {
        return $this->container['firstprimarykey'];
    }

    /**
     * Sets firstprimarykey
     *
     * @param string $firstprimarykey firstprimarykey
     *
     * @return $this
     */
    public function setFirstprimarykey($firstprimarykey)
    {
        $this->container['firstprimarykey'] = $firstprimarykey;

        return $this;
    }

    /**
     * Gets firstsecondarykey
     *
     * @return string
     */
    public function getFirstsecondarykey()
    {
        return $this->container['firstsecondarykey'];
    }

    /**
     * Sets firstsecondarykey
     *
     * @param string $firstsecondarykey firstsecondarykey
     *
     * @return $this
     */
    public function setFirstsecondarykey($firstsecondarykey)
    {
        $this->container['firstsecondarykey'] = $firstsecondarykey;

        return $this;
    }

    /**
     * Gets firstname
     *
     * @return string
     */
    public function getFirstname()
    {
        return $this->container['firstname'];
    }

    /**
     * Sets firstname
     *
     * @param string $firstname firstname
     *
     * @return $this
     */
    public function setFirstname($firstname)
    {
        $this->container['firstname'] = $firstname;

        return $this;
    }

    /**
     * Gets secondroletype
     *
     * @return string
     */
    public function getSecondroletype()
    {
        return $this->container['secondroletype'];
    }

    /**
     * Sets secondroletype
     *
     * @param string $secondroletype secondroletype
     *
     * @return $this
     */
    public function setSecondroletype($secondroletype)
    {
        $this->container['secondroletype'] = $secondroletype;

        return $this;
    }

    /**
     * Gets secondprimarykey
     *
     * @return string
     */
    public function getSecondprimarykey()
    {
        return $this->container['secondprimarykey'];
    }

    /**
     * Sets secondprimarykey
     *
     * @param string $secondprimarykey secondprimarykey
     *
     * @return $this
     */
    public function setSecondprimarykey($secondprimarykey)
    {
        $this->container['secondprimarykey'] = $secondprimarykey;

        return $this;
    }

    /**
     * Gets secondsecondarykey
     *
     * @return string
     */
    public function getSecondsecondarykey()
    {
        return $this->container['secondsecondarykey'];
    }

    /**
     * Sets secondsecondarykey
     *
     * @param string $secondsecondarykey secondsecondarykey
     *
     * @return $this
     */
    public function setSecondsecondarykey($secondsecondarykey)
    {
        $this->container['secondsecondarykey'] = $secondsecondarykey;

        return $this;
    }

    /**
     * Gets secondname
     *
     * @return string
     */
    public function getSecondname()
    {
        return $this->container['secondname'];
    }

    /**
     * Sets secondname
     *
     * @param string $secondname secondname
     *
     * @return $this
     */
    public function setSecondname($secondname)
    {
        $this->container['secondname'] = $secondname;

        return $this;
    }

    /**
     * Gets firstphoneno
     *
     * @return string
     */
    public function getFirstphoneno()
    {
        return $this->container['firstphoneno'];
    }

    /**
     * Sets firstphoneno
     *
     * @param string $firstphoneno firstphoneno
     *
     * @return $this
     */
    public function setFirstphoneno($firstphoneno)
    {
        $this->container['firstphoneno'] = $firstphoneno;

        return $this;
    }

    /**
     * Gets firstphonenodesc
     *
     * @return string
     */
    public function getFirstphonenodesc()
    {
        return $this->container['firstphonenodesc'];
    }

    /**
     * Sets firstphonenodesc
     *
     * @param string $firstphonenodesc firstphonenodesc
     *
     * @return $this
     */
    public function setFirstphonenodesc($firstphonenodesc)
    {
        $this->container['firstphonenodesc'] = $firstphonenodesc;

        return $this;
    }

    /**
     * Gets secondphoneno
     *
     * @return string
     */
    public function getSecondphoneno()
    {
        return $this->container['secondphoneno'];
    }

    /**
     * Sets secondphoneno
     *
     * @param string $secondphoneno secondphoneno
     *
     * @return $this
     */
    public function setSecondphoneno($secondphoneno)
    {
        $this->container['secondphoneno'] = $secondphoneno;

        return $this;
    }

    /**
     * Gets secondphonenodesc
     *
     * @return string
     */
    public function getSecondphonenodesc()
    {
        return $this->container['secondphonenodesc'];
    }

    /**
     * Sets secondphonenodesc
     *
     * @param string $secondphonenodesc secondphonenodesc
     *
     * @return $this
     */
    public function setSecondphonenodesc($secondphonenodesc)
    {
        $this->container['secondphonenodesc'] = $secondphonenodesc;

        return $this;
    }

    /**
     * Gets thirdphoneno
     *
     * @return string
     */
    public function getThirdphoneno()
    {
        return $this->container['thirdphoneno'];
    }

    /**
     * Sets thirdphoneno
     *
     * @param string $thirdphoneno thirdphoneno
     *
     * @return $this
     */
    public function setThirdphoneno($thirdphoneno)
    {
        $this->container['thirdphoneno'] = $thirdphoneno;

        return $this;
    }

    /**
     * Gets thirdphonenodesc
     *
     * @return string
     */
    public function getThirdphonenodesc()
    {
        return $this->container['thirdphonenodesc'];
    }

    /**
     * Sets thirdphonenodesc
     *
     * @param string $thirdphonenodesc thirdphonenodesc
     *
     * @return $this
     */
    public function setThirdphonenodesc($thirdphonenodesc)
    {
        $this->container['thirdphonenodesc'] = $thirdphonenodesc;

        return $this;
    }

    /**
     * Gets faxphoneno
     *
     * @return string
     */
    public function getFaxphoneno()
    {
        return $this->container['faxphoneno'];
    }

    /**
     * Sets faxphoneno
     *
     * @param string $faxphoneno faxphoneno
     *
     * @return $this
     */
    public function setFaxphoneno($faxphoneno)
    {
        $this->container['faxphoneno'] = $faxphoneno;

        return $this;
    }

    /**
     * Gets firstemailaddr
     *
     * @return string
     */
    public function getFirstemailaddr()
    {
        return $this->container['firstemailaddr'];
    }

    /**
     * Sets firstemailaddr
     *
     * @param string $firstemailaddr firstemailaddr
     *
     * @return $this
     */
    public function setFirstemailaddr($firstemailaddr)
    {
        $this->container['firstemailaddr'] = $firstemailaddr;

        return $this;
    }

    /**
     * Gets firstemailaddrdesc
     *
     * @return string
     */
    public function getFirstemailaddrdesc()
    {
        return $this->container['firstemailaddrdesc'];
    }

    /**
     * Sets firstemailaddrdesc
     *
     * @param string $firstemailaddrdesc firstemailaddrdesc
     *
     * @return $this
     */
    public function setFirstemailaddrdesc($firstemailaddrdesc)
    {
        $this->container['firstemailaddrdesc'] = $firstemailaddrdesc;

        return $this;
    }

    /**
     * Gets secondemailaddr
     *
     * @return string
     */
    public function getSecondemailaddr()
    {
        return $this->container['secondemailaddr'];
    }

    /**
     * Sets secondemailaddr
     *
     * @param string $secondemailaddr secondemailaddr
     *
     * @return $this
     */
    public function setSecondemailaddr($secondemailaddr)
    {
        $this->container['secondemailaddr'] = $secondemailaddr;

        return $this;
    }

    /**
     * Gets secondemailaddrdesc
     *
     * @return string
     */
    public function getSecondemailaddrdesc()
    {
        return $this->container['secondemailaddrdesc'];
    }

    /**
     * Sets secondemailaddrdesc
     *
     * @param string $secondemailaddrdesc secondemailaddrdesc
     *
     * @return $this
     */
    public function setSecondemailaddrdesc($secondemailaddrdesc)
    {
        $this->container['secondemailaddrdesc'] = $secondemailaddrdesc;

        return $this;
    }

    /**
     * Gets addr1
     *
     * @return string
     */
    public function getAddr1()
    {
        return $this->container['addr1'];
    }

    /**
     * Sets addr1
     *
     * @param string $addr1 addr1
     *
     * @return $this
     */
    public function setAddr1($addr1)
    {
        $this->container['addr1'] = $addr1;

        return $this;
    }

    /**
     * Gets addr2
     *
     * @return string
     */
    public function getAddr2()
    {
        return $this->container['addr2'];
    }

    /**
     * Sets addr2
     *
     * @param string $addr2 addr2
     *
     * @return $this
     */
    public function setAddr2($addr2)
    {
        $this->container['addr2'] = $addr2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets zipcd
     *
     * @return string
     */
    public function getZipcd()
    {
        return $this->container['zipcd'];
    }

    /**
     * Sets zipcd
     *
     * @param string $zipcd zipcd
     *
     * @return $this
     */
    public function setZipcd($zipcd)
    {
        $this->container['zipcd'] = $zipcd;

        return $this;
    }

    /**
     * Gets notesdata
     *
     * @return string
     */
    public function getNotesdata()
    {
        return $this->container['notesdata'];
    }

    /**
     * Sets notesdata
     *
     * @param string $notesdata notesdata
     *
     * @return $this
     */
    public function setNotesdata($notesdata)
    {
        $this->container['notesdata'] = $notesdata;

        return $this;
    }

    /**
     * Gets sortfield
     *
     * @return string
     */
    public function getSortfield()
    {
        return $this->container['sortfield'];
    }

    /**
     * Sets sortfield
     *
     * @param string $sortfield sortfield
     *
     * @return $this
     */
    public function setSortfield($sortfield)
    {
        $this->container['sortfield'] = $sortfield;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


