<?php
/**
 * TPogetdelvlistresults
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TPogetdelvlistresults Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TPogetdelvlistresults implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-pogetdelvlistresults';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cono' => 'int',
        'whse' => 'string',
        'pono' => 'int',
        'posuf' => 'int',
        'stagecd' => 'int',
        'transtype' => 'string',
        'termstype' => 'string',
        'shipviaty' => 'string',
        'vendno' => 'double',
        'shipfmno' => 'int',
        'refer' => 'string',
        'shipinstr' => 'string',
        'enterdt' => '\DateTime',
        'reqshipdt' => '\DateTime',
        'expshipdt' => '\DateTime',
        'transdt' => '\DateTime',
        'transtm' => 'string',
        'totlineamt' => 'double',
        'totweight' => 'double',
        'totcubes' => 'double',
        'approvty' => 'string',
        'orderdisp' => 'string',
        'openinit' => 'string',
        'addonno1' => 'int',
        'addonno2' => 'int',
        'addonno3' => 'int',
        'addonno4' => 'int',
        'user1' => 'string',
        'user2' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user8' => '\DateTime',
        'user13' => 'string',
        'user18' => 'string',
        'user20' => 'string',
        'user24' => 'string',
        'userfield' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cono' => 'int64',
        'whse' => null,
        'pono' => 'int64',
        'posuf' => 'int64',
        'stagecd' => 'int64',
        'transtype' => null,
        'termstype' => null,
        'shipviaty' => null,
        'vendno' => 'double',
        'shipfmno' => 'int64',
        'refer' => null,
        'shipinstr' => null,
        'enterdt' => 'date',
        'reqshipdt' => 'date',
        'expshipdt' => 'date',
        'transdt' => 'date',
        'transtm' => null,
        'totlineamt' => 'double',
        'totweight' => 'double',
        'totcubes' => 'double',
        'approvty' => null,
        'orderdisp' => null,
        'openinit' => null,
        'addonno1' => 'int64',
        'addonno2' => 'int64',
        'addonno3' => 'int64',
        'addonno4' => 'int64',
        'user1' => null,
        'user2' => null,
        'user4' => null,
        'user5' => null,
        'user8' => 'date',
        'user13' => null,
        'user18' => null,
        'user20' => null,
        'user24' => null,
        'userfield' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cono' => 'cono',
        'whse' => 'whse',
        'pono' => 'pono',
        'posuf' => 'posuf',
        'stagecd' => 'stagecd',
        'transtype' => 'transtype',
        'termstype' => 'termstype',
        'shipviaty' => 'shipviaty',
        'vendno' => 'vendno',
        'shipfmno' => 'shipfmno',
        'refer' => 'refer',
        'shipinstr' => 'shipinstr',
        'enterdt' => 'enterdt',
        'reqshipdt' => 'reqshipdt',
        'expshipdt' => 'expshipdt',
        'transdt' => 'transdt',
        'transtm' => 'transtm',
        'totlineamt' => 'totlineamt',
        'totweight' => 'totweight',
        'totcubes' => 'totcubes',
        'approvty' => 'approvty',
        'orderdisp' => 'orderdisp',
        'openinit' => 'openinit',
        'addonno1' => 'addonno1',
        'addonno2' => 'addonno2',
        'addonno3' => 'addonno3',
        'addonno4' => 'addonno4',
        'user1' => 'user1',
        'user2' => 'user2',
        'user4' => 'user4',
        'user5' => 'user5',
        'user8' => 'user8',
        'user13' => 'user13',
        'user18' => 'user18',
        'user20' => 'user20',
        'user24' => 'user24',
        'userfield' => 'userfield'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cono' => 'setCono',
        'whse' => 'setWhse',
        'pono' => 'setPono',
        'posuf' => 'setPosuf',
        'stagecd' => 'setStagecd',
        'transtype' => 'setTranstype',
        'termstype' => 'setTermstype',
        'shipviaty' => 'setShipviaty',
        'vendno' => 'setVendno',
        'shipfmno' => 'setShipfmno',
        'refer' => 'setRefer',
        'shipinstr' => 'setShipinstr',
        'enterdt' => 'setEnterdt',
        'reqshipdt' => 'setReqshipdt',
        'expshipdt' => 'setExpshipdt',
        'transdt' => 'setTransdt',
        'transtm' => 'setTranstm',
        'totlineamt' => 'setTotlineamt',
        'totweight' => 'setTotweight',
        'totcubes' => 'setTotcubes',
        'approvty' => 'setApprovty',
        'orderdisp' => 'setOrderdisp',
        'openinit' => 'setOpeninit',
        'addonno1' => 'setAddonno1',
        'addonno2' => 'setAddonno2',
        'addonno3' => 'setAddonno3',
        'addonno4' => 'setAddonno4',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user8' => 'setUser8',
        'user13' => 'setUser13',
        'user18' => 'setUser18',
        'user20' => 'setUser20',
        'user24' => 'setUser24',
        'userfield' => 'setUserfield'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cono' => 'getCono',
        'whse' => 'getWhse',
        'pono' => 'getPono',
        'posuf' => 'getPosuf',
        'stagecd' => 'getStagecd',
        'transtype' => 'getTranstype',
        'termstype' => 'getTermstype',
        'shipviaty' => 'getShipviaty',
        'vendno' => 'getVendno',
        'shipfmno' => 'getShipfmno',
        'refer' => 'getRefer',
        'shipinstr' => 'getShipinstr',
        'enterdt' => 'getEnterdt',
        'reqshipdt' => 'getReqshipdt',
        'expshipdt' => 'getExpshipdt',
        'transdt' => 'getTransdt',
        'transtm' => 'getTranstm',
        'totlineamt' => 'getTotlineamt',
        'totweight' => 'getTotweight',
        'totcubes' => 'getTotcubes',
        'approvty' => 'getApprovty',
        'orderdisp' => 'getOrderdisp',
        'openinit' => 'getOpeninit',
        'addonno1' => 'getAddonno1',
        'addonno2' => 'getAddonno2',
        'addonno3' => 'getAddonno3',
        'addonno4' => 'getAddonno4',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user8' => 'getUser8',
        'user13' => 'getUser13',
        'user18' => 'getUser18',
        'user20' => 'getUser20',
        'user24' => 'getUser24',
        'userfield' => 'getUserfield'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['pono'] = isset($data['pono']) ? $data['pono'] : null;
        $this->container['posuf'] = isset($data['posuf']) ? $data['posuf'] : null;
        $this->container['stagecd'] = isset($data['stagecd']) ? $data['stagecd'] : null;
        $this->container['transtype'] = isset($data['transtype']) ? $data['transtype'] : null;
        $this->container['termstype'] = isset($data['termstype']) ? $data['termstype'] : null;
        $this->container['shipviaty'] = isset($data['shipviaty']) ? $data['shipviaty'] : null;
        $this->container['vendno'] = isset($data['vendno']) ? $data['vendno'] : null;
        $this->container['shipfmno'] = isset($data['shipfmno']) ? $data['shipfmno'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['shipinstr'] = isset($data['shipinstr']) ? $data['shipinstr'] : null;
        $this->container['enterdt'] = isset($data['enterdt']) ? $data['enterdt'] : null;
        $this->container['reqshipdt'] = isset($data['reqshipdt']) ? $data['reqshipdt'] : null;
        $this->container['expshipdt'] = isset($data['expshipdt']) ? $data['expshipdt'] : null;
        $this->container['transdt'] = isset($data['transdt']) ? $data['transdt'] : null;
        $this->container['transtm'] = isset($data['transtm']) ? $data['transtm'] : null;
        $this->container['totlineamt'] = isset($data['totlineamt']) ? $data['totlineamt'] : null;
        $this->container['totweight'] = isset($data['totweight']) ? $data['totweight'] : null;
        $this->container['totcubes'] = isset($data['totcubes']) ? $data['totcubes'] : null;
        $this->container['approvty'] = isset($data['approvty']) ? $data['approvty'] : null;
        $this->container['orderdisp'] = isset($data['orderdisp']) ? $data['orderdisp'] : null;
        $this->container['openinit'] = isset($data['openinit']) ? $data['openinit'] : null;
        $this->container['addonno1'] = isset($data['addonno1']) ? $data['addonno1'] : null;
        $this->container['addonno2'] = isset($data['addonno2']) ? $data['addonno2'] : null;
        $this->container['addonno3'] = isset($data['addonno3']) ? $data['addonno3'] : null;
        $this->container['addonno4'] = isset($data['addonno4']) ? $data['addonno4'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user13'] = isset($data['user13']) ? $data['user13'] : null;
        $this->container['user18'] = isset($data['user18']) ? $data['user18'] : null;
        $this->container['user20'] = isset($data['user20']) ? $data['user20'] : null;
        $this->container['user24'] = isset($data['user24']) ? $data['user24'] : null;
        $this->container['userfield'] = isset($data['userfield']) ? $data['userfield'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets pono
     *
     * @return int
     */
    public function getPono()
    {
        return $this->container['pono'];
    }

    /**
     * Sets pono
     *
     * @param int $pono pono
     *
     * @return $this
     */
    public function setPono($pono)
    {
        $this->container['pono'] = $pono;

        return $this;
    }

    /**
     * Gets posuf
     *
     * @return int
     */
    public function getPosuf()
    {
        return $this->container['posuf'];
    }

    /**
     * Sets posuf
     *
     * @param int $posuf posuf
     *
     * @return $this
     */
    public function setPosuf($posuf)
    {
        $this->container['posuf'] = $posuf;

        return $this;
    }

    /**
     * Gets stagecd
     *
     * @return int
     */
    public function getStagecd()
    {
        return $this->container['stagecd'];
    }

    /**
     * Sets stagecd
     *
     * @param int $stagecd stagecd
     *
     * @return $this
     */
    public function setStagecd($stagecd)
    {
        $this->container['stagecd'] = $stagecd;

        return $this;
    }

    /**
     * Gets transtype
     *
     * @return string
     */
    public function getTranstype()
    {
        return $this->container['transtype'];
    }

    /**
     * Sets transtype
     *
     * @param string $transtype transtype
     *
     * @return $this
     */
    public function setTranstype($transtype)
    {
        $this->container['transtype'] = $transtype;

        return $this;
    }

    /**
     * Gets termstype
     *
     * @return string
     */
    public function getTermstype()
    {
        return $this->container['termstype'];
    }

    /**
     * Sets termstype
     *
     * @param string $termstype termstype
     *
     * @return $this
     */
    public function setTermstype($termstype)
    {
        $this->container['termstype'] = $termstype;

        return $this;
    }

    /**
     * Gets shipviaty
     *
     * @return string
     */
    public function getShipviaty()
    {
        return $this->container['shipviaty'];
    }

    /**
     * Sets shipviaty
     *
     * @param string $shipviaty shipviaty
     *
     * @return $this
     */
    public function setShipviaty($shipviaty)
    {
        $this->container['shipviaty'] = $shipviaty;

        return $this;
    }

    /**
     * Gets vendno
     *
     * @return double
     */
    public function getVendno()
    {
        return $this->container['vendno'];
    }

    /**
     * Sets vendno
     *
     * @param double $vendno vendno
     *
     * @return $this
     */
    public function setVendno($vendno)
    {
        $this->container['vendno'] = $vendno;

        return $this;
    }

    /**
     * Gets shipfmno
     *
     * @return int
     */
    public function getShipfmno()
    {
        return $this->container['shipfmno'];
    }

    /**
     * Sets shipfmno
     *
     * @param int $shipfmno shipfmno
     *
     * @return $this
     */
    public function setShipfmno($shipfmno)
    {
        $this->container['shipfmno'] = $shipfmno;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets shipinstr
     *
     * @return string
     */
    public function getShipinstr()
    {
        return $this->container['shipinstr'];
    }

    /**
     * Sets shipinstr
     *
     * @param string $shipinstr shipinstr
     *
     * @return $this
     */
    public function setShipinstr($shipinstr)
    {
        $this->container['shipinstr'] = $shipinstr;

        return $this;
    }

    /**
     * Gets enterdt
     *
     * @return \DateTime
     */
    public function getEnterdt()
    {
        return $this->container['enterdt'];
    }

    /**
     * Sets enterdt
     *
     * @param \DateTime $enterdt enterdt
     *
     * @return $this
     */
    public function setEnterdt($enterdt)
    {
        $this->container['enterdt'] = $enterdt;

        return $this;
    }

    /**
     * Gets reqshipdt
     *
     * @return \DateTime
     */
    public function getReqshipdt()
    {
        return $this->container['reqshipdt'];
    }

    /**
     * Sets reqshipdt
     *
     * @param \DateTime $reqshipdt reqshipdt
     *
     * @return $this
     */
    public function setReqshipdt($reqshipdt)
    {
        $this->container['reqshipdt'] = $reqshipdt;

        return $this;
    }

    /**
     * Gets expshipdt
     *
     * @return \DateTime
     */
    public function getExpshipdt()
    {
        return $this->container['expshipdt'];
    }

    /**
     * Sets expshipdt
     *
     * @param \DateTime $expshipdt expshipdt
     *
     * @return $this
     */
    public function setExpshipdt($expshipdt)
    {
        $this->container['expshipdt'] = $expshipdt;

        return $this;
    }

    /**
     * Gets transdt
     *
     * @return \DateTime
     */
    public function getTransdt()
    {
        return $this->container['transdt'];
    }

    /**
     * Sets transdt
     *
     * @param \DateTime $transdt transdt
     *
     * @return $this
     */
    public function setTransdt($transdt)
    {
        $this->container['transdt'] = $transdt;

        return $this;
    }

    /**
     * Gets transtm
     *
     * @return string
     */
    public function getTranstm()
    {
        return $this->container['transtm'];
    }

    /**
     * Sets transtm
     *
     * @param string $transtm transtm
     *
     * @return $this
     */
    public function setTranstm($transtm)
    {
        $this->container['transtm'] = $transtm;

        return $this;
    }

    /**
     * Gets totlineamt
     *
     * @return double
     */
    public function getTotlineamt()
    {
        return $this->container['totlineamt'];
    }

    /**
     * Sets totlineamt
     *
     * @param double $totlineamt totlineamt
     *
     * @return $this
     */
    public function setTotlineamt($totlineamt)
    {
        $this->container['totlineamt'] = $totlineamt;

        return $this;
    }

    /**
     * Gets totweight
     *
     * @return double
     */
    public function getTotweight()
    {
        return $this->container['totweight'];
    }

    /**
     * Sets totweight
     *
     * @param double $totweight totweight
     *
     * @return $this
     */
    public function setTotweight($totweight)
    {
        $this->container['totweight'] = $totweight;

        return $this;
    }

    /**
     * Gets totcubes
     *
     * @return double
     */
    public function getTotcubes()
    {
        return $this->container['totcubes'];
    }

    /**
     * Sets totcubes
     *
     * @param double $totcubes totcubes
     *
     * @return $this
     */
    public function setTotcubes($totcubes)
    {
        $this->container['totcubes'] = $totcubes;

        return $this;
    }

    /**
     * Gets approvty
     *
     * @return string
     */
    public function getApprovty()
    {
        return $this->container['approvty'];
    }

    /**
     * Sets approvty
     *
     * @param string $approvty approvty
     *
     * @return $this
     */
    public function setApprovty($approvty)
    {
        $this->container['approvty'] = $approvty;

        return $this;
    }

    /**
     * Gets orderdisp
     *
     * @return string
     */
    public function getOrderdisp()
    {
        return $this->container['orderdisp'];
    }

    /**
     * Sets orderdisp
     *
     * @param string $orderdisp orderdisp
     *
     * @return $this
     */
    public function setOrderdisp($orderdisp)
    {
        $this->container['orderdisp'] = $orderdisp;

        return $this;
    }

    /**
     * Gets openinit
     *
     * @return string
     */
    public function getOpeninit()
    {
        return $this->container['openinit'];
    }

    /**
     * Sets openinit
     *
     * @param string $openinit openinit
     *
     * @return $this
     */
    public function setOpeninit($openinit)
    {
        $this->container['openinit'] = $openinit;

        return $this;
    }

    /**
     * Gets addonno1
     *
     * @return int
     */
    public function getAddonno1()
    {
        return $this->container['addonno1'];
    }

    /**
     * Sets addonno1
     *
     * @param int $addonno1 addonno1
     *
     * @return $this
     */
    public function setAddonno1($addonno1)
    {
        $this->container['addonno1'] = $addonno1;

        return $this;
    }

    /**
     * Gets addonno2
     *
     * @return int
     */
    public function getAddonno2()
    {
        return $this->container['addonno2'];
    }

    /**
     * Sets addonno2
     *
     * @param int $addonno2 addonno2
     *
     * @return $this
     */
    public function setAddonno2($addonno2)
    {
        $this->container['addonno2'] = $addonno2;

        return $this;
    }

    /**
     * Gets addonno3
     *
     * @return int
     */
    public function getAddonno3()
    {
        return $this->container['addonno3'];
    }

    /**
     * Sets addonno3
     *
     * @param int $addonno3 addonno3
     *
     * @return $this
     */
    public function setAddonno3($addonno3)
    {
        $this->container['addonno3'] = $addonno3;

        return $this;
    }

    /**
     * Gets addonno4
     *
     * @return int
     */
    public function getAddonno4()
    {
        return $this->container['addonno4'];
    }

    /**
     * Sets addonno4
     *
     * @param int $addonno4 addonno4
     *
     * @return $this
     */
    public function setAddonno4($addonno4)
    {
        $this->container['addonno4'] = $addonno4;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user13
     *
     * @return string
     */
    public function getUser13()
    {
        return $this->container['user13'];
    }

    /**
     * Sets user13
     *
     * @param string $user13 user13
     *
     * @return $this
     */
    public function setUser13($user13)
    {
        $this->container['user13'] = $user13;

        return $this;
    }

    /**
     * Gets user18
     *
     * @return string
     */
    public function getUser18()
    {
        return $this->container['user18'];
    }

    /**
     * Sets user18
     *
     * @param string $user18 user18
     *
     * @return $this
     */
    public function setUser18($user18)
    {
        $this->container['user18'] = $user18;

        return $this;
    }

    /**
     * Gets user20
     *
     * @return string
     */
    public function getUser20()
    {
        return $this->container['user20'];
    }

    /**
     * Sets user20
     *
     * @param string $user20 user20
     *
     * @return $this
     */
    public function setUser20($user20)
    {
        $this->container['user20'] = $user20;

        return $this;
    }

    /**
     * Gets user24
     *
     * @return string
     */
    public function getUser24()
    {
        return $this->container['user24'];
    }

    /**
     * Sets user24
     *
     * @param string $user24 user24
     *
     * @return $this
     */
    public function setUser24($user24)
    {
        $this->container['user24'] = $user24;

        return $this;
    }

    /**
     * Gets userfield
     *
     * @return string
     */
    public function getUserfield()
    {
        return $this->container['userfield'];
    }

    /**
     * Sets userfield
     *
     * @param string $userfield userfield
     *
     * @return $this
     */
    public function setUserfield($userfield)
    {
        $this->container['userfield'] = $userfield;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


