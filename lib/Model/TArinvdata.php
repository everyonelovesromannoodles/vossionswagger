<?php
/**
 * TArinvdata
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TArinvdata Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TArinvdata implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-arinvdata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'seqno' => 'int',
        'transdate' => '\DateTime',
        'transtype' => 'string',
        'transamt' => 'double',
        'payamt' => 'double',
        'currencycd' => 'string',
        'disctakenamt' => 'double',
        'checkno' => 'string',
        'adjno' => 'string',
        'tradepaytransamt' => 'double',
        'tradepaypaidamt' => 'double',
        'tradepaydiscamt' => 'double',
        'tradepaycurrcd' => 'string',
        'tradeinvtransamt' => 'double',
        'tradeinvpaidamt' => 'double',
        'tradeinvdiscamt' => 'double',
        'tradeinvcurrcd' => 'string',
        'orderno' => 'string',
        'ordersuf' => 'int',
        'custpono' => 'string',
        'histseqno' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'seqno' => 'int64',
        'transdate' => 'date',
        'transtype' => null,
        'transamt' => 'double',
        'payamt' => 'double',
        'currencycd' => null,
        'disctakenamt' => 'double',
        'checkno' => null,
        'adjno' => null,
        'tradepaytransamt' => 'double',
        'tradepaypaidamt' => 'double',
        'tradepaydiscamt' => 'double',
        'tradepaycurrcd' => null,
        'tradeinvtransamt' => 'double',
        'tradeinvpaidamt' => 'double',
        'tradeinvdiscamt' => 'double',
        'tradeinvcurrcd' => null,
        'orderno' => null,
        'ordersuf' => 'int64',
        'custpono' => null,
        'histseqno' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'seqno' => 'seqno',
        'transdate' => 'transdate',
        'transtype' => 'transtype',
        'transamt' => 'transamt',
        'payamt' => 'payamt',
        'currencycd' => 'currencycd',
        'disctakenamt' => 'disctakenamt',
        'checkno' => 'checkno',
        'adjno' => 'adjno',
        'tradepaytransamt' => 'tradepaytransamt',
        'tradepaypaidamt' => 'tradepaypaidamt',
        'tradepaydiscamt' => 'tradepaydiscamt',
        'tradepaycurrcd' => 'tradepaycurrcd',
        'tradeinvtransamt' => 'tradeinvtransamt',
        'tradeinvpaidamt' => 'tradeinvpaidamt',
        'tradeinvdiscamt' => 'tradeinvdiscamt',
        'tradeinvcurrcd' => 'tradeinvcurrcd',
        'orderno' => 'orderno',
        'ordersuf' => 'ordersuf',
        'custpono' => 'custpono',
        'histseqno' => 'histseqno'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'seqno' => 'setSeqno',
        'transdate' => 'setTransdate',
        'transtype' => 'setTranstype',
        'transamt' => 'setTransamt',
        'payamt' => 'setPayamt',
        'currencycd' => 'setCurrencycd',
        'disctakenamt' => 'setDisctakenamt',
        'checkno' => 'setCheckno',
        'adjno' => 'setAdjno',
        'tradepaytransamt' => 'setTradepaytransamt',
        'tradepaypaidamt' => 'setTradepaypaidamt',
        'tradepaydiscamt' => 'setTradepaydiscamt',
        'tradepaycurrcd' => 'setTradepaycurrcd',
        'tradeinvtransamt' => 'setTradeinvtransamt',
        'tradeinvpaidamt' => 'setTradeinvpaidamt',
        'tradeinvdiscamt' => 'setTradeinvdiscamt',
        'tradeinvcurrcd' => 'setTradeinvcurrcd',
        'orderno' => 'setOrderno',
        'ordersuf' => 'setOrdersuf',
        'custpono' => 'setCustpono',
        'histseqno' => 'setHistseqno'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'seqno' => 'getSeqno',
        'transdate' => 'getTransdate',
        'transtype' => 'getTranstype',
        'transamt' => 'getTransamt',
        'payamt' => 'getPayamt',
        'currencycd' => 'getCurrencycd',
        'disctakenamt' => 'getDisctakenamt',
        'checkno' => 'getCheckno',
        'adjno' => 'getAdjno',
        'tradepaytransamt' => 'getTradepaytransamt',
        'tradepaypaidamt' => 'getTradepaypaidamt',
        'tradepaydiscamt' => 'getTradepaydiscamt',
        'tradepaycurrcd' => 'getTradepaycurrcd',
        'tradeinvtransamt' => 'getTradeinvtransamt',
        'tradeinvpaidamt' => 'getTradeinvpaidamt',
        'tradeinvdiscamt' => 'getTradeinvdiscamt',
        'tradeinvcurrcd' => 'getTradeinvcurrcd',
        'orderno' => 'getOrderno',
        'ordersuf' => 'getOrdersuf',
        'custpono' => 'getCustpono',
        'histseqno' => 'getHistseqno'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['seqno'] = isset($data['seqno']) ? $data['seqno'] : null;
        $this->container['transdate'] = isset($data['transdate']) ? $data['transdate'] : null;
        $this->container['transtype'] = isset($data['transtype']) ? $data['transtype'] : null;
        $this->container['transamt'] = isset($data['transamt']) ? $data['transamt'] : null;
        $this->container['payamt'] = isset($data['payamt']) ? $data['payamt'] : null;
        $this->container['currencycd'] = isset($data['currencycd']) ? $data['currencycd'] : null;
        $this->container['disctakenamt'] = isset($data['disctakenamt']) ? $data['disctakenamt'] : null;
        $this->container['checkno'] = isset($data['checkno']) ? $data['checkno'] : null;
        $this->container['adjno'] = isset($data['adjno']) ? $data['adjno'] : null;
        $this->container['tradepaytransamt'] = isset($data['tradepaytransamt']) ? $data['tradepaytransamt'] : null;
        $this->container['tradepaypaidamt'] = isset($data['tradepaypaidamt']) ? $data['tradepaypaidamt'] : null;
        $this->container['tradepaydiscamt'] = isset($data['tradepaydiscamt']) ? $data['tradepaydiscamt'] : null;
        $this->container['tradepaycurrcd'] = isset($data['tradepaycurrcd']) ? $data['tradepaycurrcd'] : null;
        $this->container['tradeinvtransamt'] = isset($data['tradeinvtransamt']) ? $data['tradeinvtransamt'] : null;
        $this->container['tradeinvpaidamt'] = isset($data['tradeinvpaidamt']) ? $data['tradeinvpaidamt'] : null;
        $this->container['tradeinvdiscamt'] = isset($data['tradeinvdiscamt']) ? $data['tradeinvdiscamt'] : null;
        $this->container['tradeinvcurrcd'] = isset($data['tradeinvcurrcd']) ? $data['tradeinvcurrcd'] : null;
        $this->container['orderno'] = isset($data['orderno']) ? $data['orderno'] : null;
        $this->container['ordersuf'] = isset($data['ordersuf']) ? $data['ordersuf'] : null;
        $this->container['custpono'] = isset($data['custpono']) ? $data['custpono'] : null;
        $this->container['histseqno'] = isset($data['histseqno']) ? $data['histseqno'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets seqno
     *
     * @return int
     */
    public function getSeqno()
    {
        return $this->container['seqno'];
    }

    /**
     * Sets seqno
     *
     * @param int $seqno seqno
     *
     * @return $this
     */
    public function setSeqno($seqno)
    {
        $this->container['seqno'] = $seqno;

        return $this;
    }

    /**
     * Gets transdate
     *
     * @return \DateTime
     */
    public function getTransdate()
    {
        return $this->container['transdate'];
    }

    /**
     * Sets transdate
     *
     * @param \DateTime $transdate transdate
     *
     * @return $this
     */
    public function setTransdate($transdate)
    {
        $this->container['transdate'] = $transdate;

        return $this;
    }

    /**
     * Gets transtype
     *
     * @return string
     */
    public function getTranstype()
    {
        return $this->container['transtype'];
    }

    /**
     * Sets transtype
     *
     * @param string $transtype transtype
     *
     * @return $this
     */
    public function setTranstype($transtype)
    {
        $this->container['transtype'] = $transtype;

        return $this;
    }

    /**
     * Gets transamt
     *
     * @return double
     */
    public function getTransamt()
    {
        return $this->container['transamt'];
    }

    /**
     * Sets transamt
     *
     * @param double $transamt transamt
     *
     * @return $this
     */
    public function setTransamt($transamt)
    {
        $this->container['transamt'] = $transamt;

        return $this;
    }

    /**
     * Gets payamt
     *
     * @return double
     */
    public function getPayamt()
    {
        return $this->container['payamt'];
    }

    /**
     * Sets payamt
     *
     * @param double $payamt payamt
     *
     * @return $this
     */
    public function setPayamt($payamt)
    {
        $this->container['payamt'] = $payamt;

        return $this;
    }

    /**
     * Gets currencycd
     *
     * @return string
     */
    public function getCurrencycd()
    {
        return $this->container['currencycd'];
    }

    /**
     * Sets currencycd
     *
     * @param string $currencycd currencycd
     *
     * @return $this
     */
    public function setCurrencycd($currencycd)
    {
        $this->container['currencycd'] = $currencycd;

        return $this;
    }

    /**
     * Gets disctakenamt
     *
     * @return double
     */
    public function getDisctakenamt()
    {
        return $this->container['disctakenamt'];
    }

    /**
     * Sets disctakenamt
     *
     * @param double $disctakenamt disctakenamt
     *
     * @return $this
     */
    public function setDisctakenamt($disctakenamt)
    {
        $this->container['disctakenamt'] = $disctakenamt;

        return $this;
    }

    /**
     * Gets checkno
     *
     * @return string
     */
    public function getCheckno()
    {
        return $this->container['checkno'];
    }

    /**
     * Sets checkno
     *
     * @param string $checkno checkno
     *
     * @return $this
     */
    public function setCheckno($checkno)
    {
        $this->container['checkno'] = $checkno;

        return $this;
    }

    /**
     * Gets adjno
     *
     * @return string
     */
    public function getAdjno()
    {
        return $this->container['adjno'];
    }

    /**
     * Sets adjno
     *
     * @param string $adjno adjno
     *
     * @return $this
     */
    public function setAdjno($adjno)
    {
        $this->container['adjno'] = $adjno;

        return $this;
    }

    /**
     * Gets tradepaytransamt
     *
     * @return double
     */
    public function getTradepaytransamt()
    {
        return $this->container['tradepaytransamt'];
    }

    /**
     * Sets tradepaytransamt
     *
     * @param double $tradepaytransamt tradepaytransamt
     *
     * @return $this
     */
    public function setTradepaytransamt($tradepaytransamt)
    {
        $this->container['tradepaytransamt'] = $tradepaytransamt;

        return $this;
    }

    /**
     * Gets tradepaypaidamt
     *
     * @return double
     */
    public function getTradepaypaidamt()
    {
        return $this->container['tradepaypaidamt'];
    }

    /**
     * Sets tradepaypaidamt
     *
     * @param double $tradepaypaidamt tradepaypaidamt
     *
     * @return $this
     */
    public function setTradepaypaidamt($tradepaypaidamt)
    {
        $this->container['tradepaypaidamt'] = $tradepaypaidamt;

        return $this;
    }

    /**
     * Gets tradepaydiscamt
     *
     * @return double
     */
    public function getTradepaydiscamt()
    {
        return $this->container['tradepaydiscamt'];
    }

    /**
     * Sets tradepaydiscamt
     *
     * @param double $tradepaydiscamt tradepaydiscamt
     *
     * @return $this
     */
    public function setTradepaydiscamt($tradepaydiscamt)
    {
        $this->container['tradepaydiscamt'] = $tradepaydiscamt;

        return $this;
    }

    /**
     * Gets tradepaycurrcd
     *
     * @return string
     */
    public function getTradepaycurrcd()
    {
        return $this->container['tradepaycurrcd'];
    }

    /**
     * Sets tradepaycurrcd
     *
     * @param string $tradepaycurrcd tradepaycurrcd
     *
     * @return $this
     */
    public function setTradepaycurrcd($tradepaycurrcd)
    {
        $this->container['tradepaycurrcd'] = $tradepaycurrcd;

        return $this;
    }

    /**
     * Gets tradeinvtransamt
     *
     * @return double
     */
    public function getTradeinvtransamt()
    {
        return $this->container['tradeinvtransamt'];
    }

    /**
     * Sets tradeinvtransamt
     *
     * @param double $tradeinvtransamt tradeinvtransamt
     *
     * @return $this
     */
    public function setTradeinvtransamt($tradeinvtransamt)
    {
        $this->container['tradeinvtransamt'] = $tradeinvtransamt;

        return $this;
    }

    /**
     * Gets tradeinvpaidamt
     *
     * @return double
     */
    public function getTradeinvpaidamt()
    {
        return $this->container['tradeinvpaidamt'];
    }

    /**
     * Sets tradeinvpaidamt
     *
     * @param double $tradeinvpaidamt tradeinvpaidamt
     *
     * @return $this
     */
    public function setTradeinvpaidamt($tradeinvpaidamt)
    {
        $this->container['tradeinvpaidamt'] = $tradeinvpaidamt;

        return $this;
    }

    /**
     * Gets tradeinvdiscamt
     *
     * @return double
     */
    public function getTradeinvdiscamt()
    {
        return $this->container['tradeinvdiscamt'];
    }

    /**
     * Sets tradeinvdiscamt
     *
     * @param double $tradeinvdiscamt tradeinvdiscamt
     *
     * @return $this
     */
    public function setTradeinvdiscamt($tradeinvdiscamt)
    {
        $this->container['tradeinvdiscamt'] = $tradeinvdiscamt;

        return $this;
    }

    /**
     * Gets tradeinvcurrcd
     *
     * @return string
     */
    public function getTradeinvcurrcd()
    {
        return $this->container['tradeinvcurrcd'];
    }

    /**
     * Sets tradeinvcurrcd
     *
     * @param string $tradeinvcurrcd tradeinvcurrcd
     *
     * @return $this
     */
    public function setTradeinvcurrcd($tradeinvcurrcd)
    {
        $this->container['tradeinvcurrcd'] = $tradeinvcurrcd;

        return $this;
    }

    /**
     * Gets orderno
     *
     * @return string
     */
    public function getOrderno()
    {
        return $this->container['orderno'];
    }

    /**
     * Sets orderno
     *
     * @param string $orderno orderno
     *
     * @return $this
     */
    public function setOrderno($orderno)
    {
        $this->container['orderno'] = $orderno;

        return $this;
    }

    /**
     * Gets ordersuf
     *
     * @return int
     */
    public function getOrdersuf()
    {
        return $this->container['ordersuf'];
    }

    /**
     * Sets ordersuf
     *
     * @param int $ordersuf ordersuf
     *
     * @return $this
     */
    public function setOrdersuf($ordersuf)
    {
        $this->container['ordersuf'] = $ordersuf;

        return $this;
    }

    /**
     * Gets custpono
     *
     * @return string
     */
    public function getCustpono()
    {
        return $this->container['custpono'];
    }

    /**
     * Sets custpono
     *
     * @param string $custpono custpono
     *
     * @return $this
     */
    public function setCustpono($custpono)
    {
        $this->container['custpono'] = $custpono;

        return $this;
    }

    /**
     * Gets histseqno
     *
     * @return int
     */
    public function getHistseqno()
    {
        return $this->container['histseqno'];
    }

    /**
     * Sets histseqno
     *
     * @param int $histseqno histseqno
     *
     * @return $this
     */
    public function setHistseqno($histseqno)
    {
        $this->container['histseqno'] = $histseqno;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


