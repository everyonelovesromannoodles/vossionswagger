<?php
/**
 * Sxapiargetcustomerbalancev2Response
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Sxapiargetcustomerbalancev2Response Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Sxapiargetcustomerbalancev2Response implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapiargetcustomerbalancev2_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'c_error_message' => 'string',
        'period1_text' => 'string',
        'period1_balance' => 'double',
        'period2_text' => 'string',
        'period2_balance' => 'double',
        'period3_text' => 'string',
        'period3_balance' => 'double',
        'period4_text' => 'string',
        'period4_balance' => 'double',
        'period5_text' => 'string',
        'period5_balance' => 'double',
        'future_balance_text' => 'string',
        'future_balance' => 'double',
        'total1_text' => 'string',
        'total1_balance' => 'double',
        'total2_text' => 'string',
        'total2_balance' => 'double',
        'total3_text' => 'string',
        'total3_balance' => 'double',
        'total4_text' => 'string',
        'total4_balance' => 'double',
        'total5_text' => 'string',
        'total5_balance' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'c_error_message' => null,
        'period1_text' => null,
        'period1_balance' => 'double',
        'period2_text' => null,
        'period2_balance' => 'double',
        'period3_text' => null,
        'period3_balance' => 'double',
        'period4_text' => null,
        'period4_balance' => 'double',
        'period5_text' => null,
        'period5_balance' => 'double',
        'future_balance_text' => null,
        'future_balance' => 'double',
        'total1_text' => null,
        'total1_balance' => 'double',
        'total2_text' => null,
        'total2_balance' => 'double',
        'total3_text' => null,
        'total3_balance' => 'double',
        'total4_text' => null,
        'total4_balance' => 'double',
        'total5_text' => null,
        'total5_balance' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'c_error_message' => 'cErrorMessage',
        'period1_text' => 'period1Text',
        'period1_balance' => 'period1Balance',
        'period2_text' => 'period2Text',
        'period2_balance' => 'period2Balance',
        'period3_text' => 'period3Text',
        'period3_balance' => 'period3Balance',
        'period4_text' => 'period4Text',
        'period4_balance' => 'period4Balance',
        'period5_text' => 'period5Text',
        'period5_balance' => 'period5Balance',
        'future_balance_text' => 'futureBalanceText',
        'future_balance' => 'futureBalance',
        'total1_text' => 'total1Text',
        'total1_balance' => 'total1Balance',
        'total2_text' => 'total2Text',
        'total2_balance' => 'total2Balance',
        'total3_text' => 'total3Text',
        'total3_balance' => 'total3Balance',
        'total4_text' => 'total4Text',
        'total4_balance' => 'total4Balance',
        'total5_text' => 'total5Text',
        'total5_balance' => 'total5Balance'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'c_error_message' => 'setCErrorMessage',
        'period1_text' => 'setPeriod1Text',
        'period1_balance' => 'setPeriod1Balance',
        'period2_text' => 'setPeriod2Text',
        'period2_balance' => 'setPeriod2Balance',
        'period3_text' => 'setPeriod3Text',
        'period3_balance' => 'setPeriod3Balance',
        'period4_text' => 'setPeriod4Text',
        'period4_balance' => 'setPeriod4Balance',
        'period5_text' => 'setPeriod5Text',
        'period5_balance' => 'setPeriod5Balance',
        'future_balance_text' => 'setFutureBalanceText',
        'future_balance' => 'setFutureBalance',
        'total1_text' => 'setTotal1Text',
        'total1_balance' => 'setTotal1Balance',
        'total2_text' => 'setTotal2Text',
        'total2_balance' => 'setTotal2Balance',
        'total3_text' => 'setTotal3Text',
        'total3_balance' => 'setTotal3Balance',
        'total4_text' => 'setTotal4Text',
        'total4_balance' => 'setTotal4Balance',
        'total5_text' => 'setTotal5Text',
        'total5_balance' => 'setTotal5Balance'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'c_error_message' => 'getCErrorMessage',
        'period1_text' => 'getPeriod1Text',
        'period1_balance' => 'getPeriod1Balance',
        'period2_text' => 'getPeriod2Text',
        'period2_balance' => 'getPeriod2Balance',
        'period3_text' => 'getPeriod3Text',
        'period3_balance' => 'getPeriod3Balance',
        'period4_text' => 'getPeriod4Text',
        'period4_balance' => 'getPeriod4Balance',
        'period5_text' => 'getPeriod5Text',
        'period5_balance' => 'getPeriod5Balance',
        'future_balance_text' => 'getFutureBalanceText',
        'future_balance' => 'getFutureBalance',
        'total1_text' => 'getTotal1Text',
        'total1_balance' => 'getTotal1Balance',
        'total2_text' => 'getTotal2Text',
        'total2_balance' => 'getTotal2Balance',
        'total3_text' => 'getTotal3Text',
        'total3_balance' => 'getTotal3Balance',
        'total4_text' => 'getTotal4Text',
        'total4_balance' => 'getTotal4Balance',
        'total5_text' => 'getTotal5Text',
        'total5_balance' => 'getTotal5Balance'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['c_error_message'] = isset($data['c_error_message']) ? $data['c_error_message'] : null;
        $this->container['period1_text'] = isset($data['period1_text']) ? $data['period1_text'] : null;
        $this->container['period1_balance'] = isset($data['period1_balance']) ? $data['period1_balance'] : null;
        $this->container['period2_text'] = isset($data['period2_text']) ? $data['period2_text'] : null;
        $this->container['period2_balance'] = isset($data['period2_balance']) ? $data['period2_balance'] : null;
        $this->container['period3_text'] = isset($data['period3_text']) ? $data['period3_text'] : null;
        $this->container['period3_balance'] = isset($data['period3_balance']) ? $data['period3_balance'] : null;
        $this->container['period4_text'] = isset($data['period4_text']) ? $data['period4_text'] : null;
        $this->container['period4_balance'] = isset($data['period4_balance']) ? $data['period4_balance'] : null;
        $this->container['period5_text'] = isset($data['period5_text']) ? $data['period5_text'] : null;
        $this->container['period5_balance'] = isset($data['period5_balance']) ? $data['period5_balance'] : null;
        $this->container['future_balance_text'] = isset($data['future_balance_text']) ? $data['future_balance_text'] : null;
        $this->container['future_balance'] = isset($data['future_balance']) ? $data['future_balance'] : null;
        $this->container['total1_text'] = isset($data['total1_text']) ? $data['total1_text'] : null;
        $this->container['total1_balance'] = isset($data['total1_balance']) ? $data['total1_balance'] : null;
        $this->container['total2_text'] = isset($data['total2_text']) ? $data['total2_text'] : null;
        $this->container['total2_balance'] = isset($data['total2_balance']) ? $data['total2_balance'] : null;
        $this->container['total3_text'] = isset($data['total3_text']) ? $data['total3_text'] : null;
        $this->container['total3_balance'] = isset($data['total3_balance']) ? $data['total3_balance'] : null;
        $this->container['total4_text'] = isset($data['total4_text']) ? $data['total4_text'] : null;
        $this->container['total4_balance'] = isset($data['total4_balance']) ? $data['total4_balance'] : null;
        $this->container['total5_text'] = isset($data['total5_text']) ? $data['total5_text'] : null;
        $this->container['total5_balance'] = isset($data['total5_balance']) ? $data['total5_balance'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets c_error_message
     *
     * @return string
     */
    public function getCErrorMessage()
    {
        return $this->container['c_error_message'];
    }

    /**
     * Sets c_error_message
     *
     * @param string $c_error_message c_error_message
     *
     * @return $this
     */
    public function setCErrorMessage($c_error_message)
    {
        $this->container['c_error_message'] = $c_error_message;

        return $this;
    }

    /**
     * Gets period1_text
     *
     * @return string
     */
    public function getPeriod1Text()
    {
        return $this->container['period1_text'];
    }

    /**
     * Sets period1_text
     *
     * @param string $period1_text period1_text
     *
     * @return $this
     */
    public function setPeriod1Text($period1_text)
    {
        $this->container['period1_text'] = $period1_text;

        return $this;
    }

    /**
     * Gets period1_balance
     *
     * @return double
     */
    public function getPeriod1Balance()
    {
        return $this->container['period1_balance'];
    }

    /**
     * Sets period1_balance
     *
     * @param double $period1_balance period1_balance
     *
     * @return $this
     */
    public function setPeriod1Balance($period1_balance)
    {
        $this->container['period1_balance'] = $period1_balance;

        return $this;
    }

    /**
     * Gets period2_text
     *
     * @return string
     */
    public function getPeriod2Text()
    {
        return $this->container['period2_text'];
    }

    /**
     * Sets period2_text
     *
     * @param string $period2_text period2_text
     *
     * @return $this
     */
    public function setPeriod2Text($period2_text)
    {
        $this->container['period2_text'] = $period2_text;

        return $this;
    }

    /**
     * Gets period2_balance
     *
     * @return double
     */
    public function getPeriod2Balance()
    {
        return $this->container['period2_balance'];
    }

    /**
     * Sets period2_balance
     *
     * @param double $period2_balance period2_balance
     *
     * @return $this
     */
    public function setPeriod2Balance($period2_balance)
    {
        $this->container['period2_balance'] = $period2_balance;

        return $this;
    }

    /**
     * Gets period3_text
     *
     * @return string
     */
    public function getPeriod3Text()
    {
        return $this->container['period3_text'];
    }

    /**
     * Sets period3_text
     *
     * @param string $period3_text period3_text
     *
     * @return $this
     */
    public function setPeriod3Text($period3_text)
    {
        $this->container['period3_text'] = $period3_text;

        return $this;
    }

    /**
     * Gets period3_balance
     *
     * @return double
     */
    public function getPeriod3Balance()
    {
        return $this->container['period3_balance'];
    }

    /**
     * Sets period3_balance
     *
     * @param double $period3_balance period3_balance
     *
     * @return $this
     */
    public function setPeriod3Balance($period3_balance)
    {
        $this->container['period3_balance'] = $period3_balance;

        return $this;
    }

    /**
     * Gets period4_text
     *
     * @return string
     */
    public function getPeriod4Text()
    {
        return $this->container['period4_text'];
    }

    /**
     * Sets period4_text
     *
     * @param string $period4_text period4_text
     *
     * @return $this
     */
    public function setPeriod4Text($period4_text)
    {
        $this->container['period4_text'] = $period4_text;

        return $this;
    }

    /**
     * Gets period4_balance
     *
     * @return double
     */
    public function getPeriod4Balance()
    {
        return $this->container['period4_balance'];
    }

    /**
     * Sets period4_balance
     *
     * @param double $period4_balance period4_balance
     *
     * @return $this
     */
    public function setPeriod4Balance($period4_balance)
    {
        $this->container['period4_balance'] = $period4_balance;

        return $this;
    }

    /**
     * Gets period5_text
     *
     * @return string
     */
    public function getPeriod5Text()
    {
        return $this->container['period5_text'];
    }

    /**
     * Sets period5_text
     *
     * @param string $period5_text period5_text
     *
     * @return $this
     */
    public function setPeriod5Text($period5_text)
    {
        $this->container['period5_text'] = $period5_text;

        return $this;
    }

    /**
     * Gets period5_balance
     *
     * @return double
     */
    public function getPeriod5Balance()
    {
        return $this->container['period5_balance'];
    }

    /**
     * Sets period5_balance
     *
     * @param double $period5_balance period5_balance
     *
     * @return $this
     */
    public function setPeriod5Balance($period5_balance)
    {
        $this->container['period5_balance'] = $period5_balance;

        return $this;
    }

    /**
     * Gets future_balance_text
     *
     * @return string
     */
    public function getFutureBalanceText()
    {
        return $this->container['future_balance_text'];
    }

    /**
     * Sets future_balance_text
     *
     * @param string $future_balance_text future_balance_text
     *
     * @return $this
     */
    public function setFutureBalanceText($future_balance_text)
    {
        $this->container['future_balance_text'] = $future_balance_text;

        return $this;
    }

    /**
     * Gets future_balance
     *
     * @return double
     */
    public function getFutureBalance()
    {
        return $this->container['future_balance'];
    }

    /**
     * Sets future_balance
     *
     * @param double $future_balance future_balance
     *
     * @return $this
     */
    public function setFutureBalance($future_balance)
    {
        $this->container['future_balance'] = $future_balance;

        return $this;
    }

    /**
     * Gets total1_text
     *
     * @return string
     */
    public function getTotal1Text()
    {
        return $this->container['total1_text'];
    }

    /**
     * Sets total1_text
     *
     * @param string $total1_text total1_text
     *
     * @return $this
     */
    public function setTotal1Text($total1_text)
    {
        $this->container['total1_text'] = $total1_text;

        return $this;
    }

    /**
     * Gets total1_balance
     *
     * @return double
     */
    public function getTotal1Balance()
    {
        return $this->container['total1_balance'];
    }

    /**
     * Sets total1_balance
     *
     * @param double $total1_balance total1_balance
     *
     * @return $this
     */
    public function setTotal1Balance($total1_balance)
    {
        $this->container['total1_balance'] = $total1_balance;

        return $this;
    }

    /**
     * Gets total2_text
     *
     * @return string
     */
    public function getTotal2Text()
    {
        return $this->container['total2_text'];
    }

    /**
     * Sets total2_text
     *
     * @param string $total2_text total2_text
     *
     * @return $this
     */
    public function setTotal2Text($total2_text)
    {
        $this->container['total2_text'] = $total2_text;

        return $this;
    }

    /**
     * Gets total2_balance
     *
     * @return double
     */
    public function getTotal2Balance()
    {
        return $this->container['total2_balance'];
    }

    /**
     * Sets total2_balance
     *
     * @param double $total2_balance total2_balance
     *
     * @return $this
     */
    public function setTotal2Balance($total2_balance)
    {
        $this->container['total2_balance'] = $total2_balance;

        return $this;
    }

    /**
     * Gets total3_text
     *
     * @return string
     */
    public function getTotal3Text()
    {
        return $this->container['total3_text'];
    }

    /**
     * Sets total3_text
     *
     * @param string $total3_text total3_text
     *
     * @return $this
     */
    public function setTotal3Text($total3_text)
    {
        $this->container['total3_text'] = $total3_text;

        return $this;
    }

    /**
     * Gets total3_balance
     *
     * @return double
     */
    public function getTotal3Balance()
    {
        return $this->container['total3_balance'];
    }

    /**
     * Sets total3_balance
     *
     * @param double $total3_balance total3_balance
     *
     * @return $this
     */
    public function setTotal3Balance($total3_balance)
    {
        $this->container['total3_balance'] = $total3_balance;

        return $this;
    }

    /**
     * Gets total4_text
     *
     * @return string
     */
    public function getTotal4Text()
    {
        return $this->container['total4_text'];
    }

    /**
     * Sets total4_text
     *
     * @param string $total4_text total4_text
     *
     * @return $this
     */
    public function setTotal4Text($total4_text)
    {
        $this->container['total4_text'] = $total4_text;

        return $this;
    }

    /**
     * Gets total4_balance
     *
     * @return double
     */
    public function getTotal4Balance()
    {
        return $this->container['total4_balance'];
    }

    /**
     * Sets total4_balance
     *
     * @param double $total4_balance total4_balance
     *
     * @return $this
     */
    public function setTotal4Balance($total4_balance)
    {
        $this->container['total4_balance'] = $total4_balance;

        return $this;
    }

    /**
     * Gets total5_text
     *
     * @return string
     */
    public function getTotal5Text()
    {
        return $this->container['total5_text'];
    }

    /**
     * Sets total5_text
     *
     * @param string $total5_text total5_text
     *
     * @return $this
     */
    public function setTotal5Text($total5_text)
    {
        $this->container['total5_text'] = $total5_text;

        return $this;
    }

    /**
     * Gets total5_balance
     *
     * @return double
     */
    public function getTotal5Balance()
    {
        return $this->container['total5_balance'];
    }

    /**
     * Sets total5_balance
     *
     * @param double $total5_balance total5_balance
     *
     * @return $this
     */
    public function setTotal5Balance($total5_balance)
    {
        $this->container['total5_balance'] = $total5_balance;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


