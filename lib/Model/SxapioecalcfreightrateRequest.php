<?php
/**
 * SxapioecalcfreightrateRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapioecalcfreightrateRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapioecalcfreightrateRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapioecalcfreightrate_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'company_number' => 'int',
        'operator_init' => 'string',
        'operator_password' => 'string',
        'include_rate_shopping' => 'bool',
        'whse' => 'string',
        'ship_via' => 'string',
        'postal_code' => 'string',
        'order_weight' => 'double',
        'ship_weight' => 'double',
        'order_freight_extra1' => 'double',
        'order_freight_extra2' => 'double',
        'ship_freight_extra1' => 'double',
        'ship_freight_extra2' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'company_number' => 'int64',
        'operator_init' => null,
        'operator_password' => null,
        'include_rate_shopping' => null,
        'whse' => null,
        'ship_via' => null,
        'postal_code' => null,
        'order_weight' => 'double',
        'ship_weight' => 'double',
        'order_freight_extra1' => 'double',
        'order_freight_extra2' => 'double',
        'ship_freight_extra1' => 'double',
        'ship_freight_extra2' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_number' => 'companyNumber',
        'operator_init' => 'operatorInit',
        'operator_password' => 'operatorPassword',
        'include_rate_shopping' => 'includeRateShopping',
        'whse' => 'whse',
        'ship_via' => 'shipVia',
        'postal_code' => 'postalCode',
        'order_weight' => 'orderWeight',
        'ship_weight' => 'shipWeight',
        'order_freight_extra1' => 'orderFreightExtra1',
        'order_freight_extra2' => 'orderFreightExtra2',
        'ship_freight_extra1' => 'shipFreightExtra1',
        'ship_freight_extra2' => 'shipFreightExtra2'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_number' => 'setCompanyNumber',
        'operator_init' => 'setOperatorInit',
        'operator_password' => 'setOperatorPassword',
        'include_rate_shopping' => 'setIncludeRateShopping',
        'whse' => 'setWhse',
        'ship_via' => 'setShipVia',
        'postal_code' => 'setPostalCode',
        'order_weight' => 'setOrderWeight',
        'ship_weight' => 'setShipWeight',
        'order_freight_extra1' => 'setOrderFreightExtra1',
        'order_freight_extra2' => 'setOrderFreightExtra2',
        'ship_freight_extra1' => 'setShipFreightExtra1',
        'ship_freight_extra2' => 'setShipFreightExtra2'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_number' => 'getCompanyNumber',
        'operator_init' => 'getOperatorInit',
        'operator_password' => 'getOperatorPassword',
        'include_rate_shopping' => 'getIncludeRateShopping',
        'whse' => 'getWhse',
        'ship_via' => 'getShipVia',
        'postal_code' => 'getPostalCode',
        'order_weight' => 'getOrderWeight',
        'ship_weight' => 'getShipWeight',
        'order_freight_extra1' => 'getOrderFreightExtra1',
        'order_freight_extra2' => 'getOrderFreightExtra2',
        'ship_freight_extra1' => 'getShipFreightExtra1',
        'ship_freight_extra2' => 'getShipFreightExtra2'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_number'] = isset($data['company_number']) ? $data['company_number'] : null;
        $this->container['operator_init'] = isset($data['operator_init']) ? $data['operator_init'] : null;
        $this->container['operator_password'] = isset($data['operator_password']) ? $data['operator_password'] : null;
        $this->container['include_rate_shopping'] = isset($data['include_rate_shopping']) ? $data['include_rate_shopping'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['ship_via'] = isset($data['ship_via']) ? $data['ship_via'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['order_weight'] = isset($data['order_weight']) ? $data['order_weight'] : null;
        $this->container['ship_weight'] = isset($data['ship_weight']) ? $data['ship_weight'] : null;
        $this->container['order_freight_extra1'] = isset($data['order_freight_extra1']) ? $data['order_freight_extra1'] : null;
        $this->container['order_freight_extra2'] = isset($data['order_freight_extra2']) ? $data['order_freight_extra2'] : null;
        $this->container['ship_freight_extra1'] = isset($data['ship_freight_extra1']) ? $data['ship_freight_extra1'] : null;
        $this->container['ship_freight_extra2'] = isset($data['ship_freight_extra2']) ? $data['ship_freight_extra2'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_number
     *
     * @return int
     */
    public function getCompanyNumber()
    {
        return $this->container['company_number'];
    }

    /**
     * Sets company_number
     *
     * @param int $company_number company_number
     *
     * @return $this
     */
    public function setCompanyNumber($company_number)
    {
        $this->container['company_number'] = $company_number;

        return $this;
    }

    /**
     * Gets operator_init
     *
     * @return string
     */
    public function getOperatorInit()
    {
        return $this->container['operator_init'];
    }

    /**
     * Sets operator_init
     *
     * @param string $operator_init operator_init
     *
     * @return $this
     */
    public function setOperatorInit($operator_init)
    {
        $this->container['operator_init'] = $operator_init;

        return $this;
    }

    /**
     * Gets operator_password
     *
     * @return string
     */
    public function getOperatorPassword()
    {
        return $this->container['operator_password'];
    }

    /**
     * Sets operator_password
     *
     * @param string $operator_password operator_password
     *
     * @return $this
     */
    public function setOperatorPassword($operator_password)
    {
        $this->container['operator_password'] = $operator_password;

        return $this;
    }

    /**
     * Gets include_rate_shopping
     *
     * @return bool
     */
    public function getIncludeRateShopping()
    {
        return $this->container['include_rate_shopping'];
    }

    /**
     * Sets include_rate_shopping
     *
     * @param bool $include_rate_shopping include_rate_shopping
     *
     * @return $this
     */
    public function setIncludeRateShopping($include_rate_shopping)
    {
        $this->container['include_rate_shopping'] = $include_rate_shopping;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets ship_via
     *
     * @return string
     */
    public function getShipVia()
    {
        return $this->container['ship_via'];
    }

    /**
     * Sets ship_via
     *
     * @param string $ship_via ship_via
     *
     * @return $this
     */
    public function setShipVia($ship_via)
    {
        $this->container['ship_via'] = $ship_via;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code postal_code
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets order_weight
     *
     * @return double
     */
    public function getOrderWeight()
    {
        return $this->container['order_weight'];
    }

    /**
     * Sets order_weight
     *
     * @param double $order_weight order_weight
     *
     * @return $this
     */
    public function setOrderWeight($order_weight)
    {
        $this->container['order_weight'] = $order_weight;

        return $this;
    }

    /**
     * Gets ship_weight
     *
     * @return double
     */
    public function getShipWeight()
    {
        return $this->container['ship_weight'];
    }

    /**
     * Sets ship_weight
     *
     * @param double $ship_weight ship_weight
     *
     * @return $this
     */
    public function setShipWeight($ship_weight)
    {
        $this->container['ship_weight'] = $ship_weight;

        return $this;
    }

    /**
     * Gets order_freight_extra1
     *
     * @return double
     */
    public function getOrderFreightExtra1()
    {
        return $this->container['order_freight_extra1'];
    }

    /**
     * Sets order_freight_extra1
     *
     * @param double $order_freight_extra1 order_freight_extra1
     *
     * @return $this
     */
    public function setOrderFreightExtra1($order_freight_extra1)
    {
        $this->container['order_freight_extra1'] = $order_freight_extra1;

        return $this;
    }

    /**
     * Gets order_freight_extra2
     *
     * @return double
     */
    public function getOrderFreightExtra2()
    {
        return $this->container['order_freight_extra2'];
    }

    /**
     * Sets order_freight_extra2
     *
     * @param double $order_freight_extra2 order_freight_extra2
     *
     * @return $this
     */
    public function setOrderFreightExtra2($order_freight_extra2)
    {
        $this->container['order_freight_extra2'] = $order_freight_extra2;

        return $this;
    }

    /**
     * Gets ship_freight_extra1
     *
     * @return double
     */
    public function getShipFreightExtra1()
    {
        return $this->container['ship_freight_extra1'];
    }

    /**
     * Sets ship_freight_extra1
     *
     * @param double $ship_freight_extra1 ship_freight_extra1
     *
     * @return $this
     */
    public function setShipFreightExtra1($ship_freight_extra1)
    {
        $this->container['ship_freight_extra1'] = $ship_freight_extra1;

        return $this;
    }

    /**
     * Gets ship_freight_extra2
     *
     * @return double
     */
    public function getShipFreightExtra2()
    {
        return $this->container['ship_freight_extra2'];
    }

    /**
     * Sets ship_freight_extra2
     *
     * @param double $ship_freight_extra2 ship_freight_extra2
     *
     * @return $this
     */
    public function setShipFreightExtra2($ship_freight_extra2)
    {
        $this->container['ship_freight_extra2'] = $ship_freight_extra2;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


