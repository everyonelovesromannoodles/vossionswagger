<?php
/**
 * SxapiapinvoiceprocessRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapiapinvoiceprocessRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapiapinvoiceprocessRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapiapinvoiceprocess_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'company_number' => 'int',
        'operator_init' => 'string',
        'operator_password' => 'string',
        'sxt_inv_header' => '\Swagger\Client\Model\SxtInvHeaderReq',
        'sxt_inv_header_extra' => '\Swagger\Client\Model\SxtInvHeaderExtraReq',
        'sxt_inv_notes' => '\Swagger\Client\Model\SxtInvNotesReq',
        'sxt_inv_customer' => '\Swagger\Client\Model\SxtInvCustomerReq',
        'sxt_inv_shipto' => '\Swagger\Client\Model\SxtInvShiptoReq',
        'sxt_inv_billto' => '\Swagger\Client\Model\SxtInvBilltoReq',
        'sxt_inv_remit' => '\Swagger\Client\Model\SxtInvRemitReq',
        'sxt_inv_terms' => '\Swagger\Client\Model\SxtInvTermsReq',
        'sxt_inv_addon' => '\Swagger\Client\Model\SxtInvAddonReq',
        'sxt_inv_line' => '\Swagger\Client\Model\SxtInvLineReq',
        'sxt_inv_line_extra' => '\Swagger\Client\Model\SxtInvLineExtraReq',
        'sxt_inv_line_ack' => '\Swagger\Client\Model\SxtInvLineAckReq',
        'sxt_inv_line_comment' => '\Swagger\Client\Model\SxtInvLineCommentReq',
        'sxt_inv_line_serial' => '\Swagger\Client\Model\SxtInvLineSerialReq',
        'sxt_inv_line_lot' => '\Swagger\Client\Model\SxtInvLineLotReq',
        'sxt_inv_pkg' => '\Swagger\Client\Model\SxtInvPkgReq',
        'sxt_inv_pkg_total' => '\Swagger\Client\Model\SxtInvPkgTotalReq',
        'sxt_inv_vat_total' => '\Swagger\Client\Model\SxtInvVatTotalReq',
        'sxt_inv_total' => '\Swagger\Client\Model\SxtInvTotalReq',
        'custom_parameter' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'company_number' => 'int64',
        'operator_init' => null,
        'operator_password' => null,
        'sxt_inv_header' => null,
        'sxt_inv_header_extra' => null,
        'sxt_inv_notes' => null,
        'sxt_inv_customer' => null,
        'sxt_inv_shipto' => null,
        'sxt_inv_billto' => null,
        'sxt_inv_remit' => null,
        'sxt_inv_terms' => null,
        'sxt_inv_addon' => null,
        'sxt_inv_line' => null,
        'sxt_inv_line_extra' => null,
        'sxt_inv_line_ack' => null,
        'sxt_inv_line_comment' => null,
        'sxt_inv_line_serial' => null,
        'sxt_inv_line_lot' => null,
        'sxt_inv_pkg' => null,
        'sxt_inv_pkg_total' => null,
        'sxt_inv_vat_total' => null,
        'sxt_inv_total' => null,
        'custom_parameter' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_number' => 'companyNumber',
        'operator_init' => 'operatorInit',
        'operator_password' => 'operatorPassword',
        'sxt_inv_header' => 'sxt_inv_header',
        'sxt_inv_header_extra' => 'sxt_inv_header_extra',
        'sxt_inv_notes' => 'sxt_inv_notes',
        'sxt_inv_customer' => 'sxt_inv_customer',
        'sxt_inv_shipto' => 'sxt_inv_shipto',
        'sxt_inv_billto' => 'sxt_inv_billto',
        'sxt_inv_remit' => 'sxt_inv_remit',
        'sxt_inv_terms' => 'sxt_inv_terms',
        'sxt_inv_addon' => 'sxt_inv_addon',
        'sxt_inv_line' => 'sxt_inv_line',
        'sxt_inv_line_extra' => 'sxt_inv_line_extra',
        'sxt_inv_line_ack' => 'sxt_inv_line_ack',
        'sxt_inv_line_comment' => 'sxt_inv_line_comment',
        'sxt_inv_line_serial' => 'sxt_inv_line_serial',
        'sxt_inv_line_lot' => 'sxt_inv_line_lot',
        'sxt_inv_pkg' => 'sxt_inv_pkg',
        'sxt_inv_pkg_total' => 'sxt_inv_pkg_total',
        'sxt_inv_vat_total' => 'sxt_inv_vat_total',
        'sxt_inv_total' => 'sxt_inv_total',
        'custom_parameter' => 'customParameter'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_number' => 'setCompanyNumber',
        'operator_init' => 'setOperatorInit',
        'operator_password' => 'setOperatorPassword',
        'sxt_inv_header' => 'setSxtInvHeader',
        'sxt_inv_header_extra' => 'setSxtInvHeaderExtra',
        'sxt_inv_notes' => 'setSxtInvNotes',
        'sxt_inv_customer' => 'setSxtInvCustomer',
        'sxt_inv_shipto' => 'setSxtInvShipto',
        'sxt_inv_billto' => 'setSxtInvBillto',
        'sxt_inv_remit' => 'setSxtInvRemit',
        'sxt_inv_terms' => 'setSxtInvTerms',
        'sxt_inv_addon' => 'setSxtInvAddon',
        'sxt_inv_line' => 'setSxtInvLine',
        'sxt_inv_line_extra' => 'setSxtInvLineExtra',
        'sxt_inv_line_ack' => 'setSxtInvLineAck',
        'sxt_inv_line_comment' => 'setSxtInvLineComment',
        'sxt_inv_line_serial' => 'setSxtInvLineSerial',
        'sxt_inv_line_lot' => 'setSxtInvLineLot',
        'sxt_inv_pkg' => 'setSxtInvPkg',
        'sxt_inv_pkg_total' => 'setSxtInvPkgTotal',
        'sxt_inv_vat_total' => 'setSxtInvVatTotal',
        'sxt_inv_total' => 'setSxtInvTotal',
        'custom_parameter' => 'setCustomParameter'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_number' => 'getCompanyNumber',
        'operator_init' => 'getOperatorInit',
        'operator_password' => 'getOperatorPassword',
        'sxt_inv_header' => 'getSxtInvHeader',
        'sxt_inv_header_extra' => 'getSxtInvHeaderExtra',
        'sxt_inv_notes' => 'getSxtInvNotes',
        'sxt_inv_customer' => 'getSxtInvCustomer',
        'sxt_inv_shipto' => 'getSxtInvShipto',
        'sxt_inv_billto' => 'getSxtInvBillto',
        'sxt_inv_remit' => 'getSxtInvRemit',
        'sxt_inv_terms' => 'getSxtInvTerms',
        'sxt_inv_addon' => 'getSxtInvAddon',
        'sxt_inv_line' => 'getSxtInvLine',
        'sxt_inv_line_extra' => 'getSxtInvLineExtra',
        'sxt_inv_line_ack' => 'getSxtInvLineAck',
        'sxt_inv_line_comment' => 'getSxtInvLineComment',
        'sxt_inv_line_serial' => 'getSxtInvLineSerial',
        'sxt_inv_line_lot' => 'getSxtInvLineLot',
        'sxt_inv_pkg' => 'getSxtInvPkg',
        'sxt_inv_pkg_total' => 'getSxtInvPkgTotal',
        'sxt_inv_vat_total' => 'getSxtInvVatTotal',
        'sxt_inv_total' => 'getSxtInvTotal',
        'custom_parameter' => 'getCustomParameter'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_number'] = isset($data['company_number']) ? $data['company_number'] : null;
        $this->container['operator_init'] = isset($data['operator_init']) ? $data['operator_init'] : null;
        $this->container['operator_password'] = isset($data['operator_password']) ? $data['operator_password'] : null;
        $this->container['sxt_inv_header'] = isset($data['sxt_inv_header']) ? $data['sxt_inv_header'] : null;
        $this->container['sxt_inv_header_extra'] = isset($data['sxt_inv_header_extra']) ? $data['sxt_inv_header_extra'] : null;
        $this->container['sxt_inv_notes'] = isset($data['sxt_inv_notes']) ? $data['sxt_inv_notes'] : null;
        $this->container['sxt_inv_customer'] = isset($data['sxt_inv_customer']) ? $data['sxt_inv_customer'] : null;
        $this->container['sxt_inv_shipto'] = isset($data['sxt_inv_shipto']) ? $data['sxt_inv_shipto'] : null;
        $this->container['sxt_inv_billto'] = isset($data['sxt_inv_billto']) ? $data['sxt_inv_billto'] : null;
        $this->container['sxt_inv_remit'] = isset($data['sxt_inv_remit']) ? $data['sxt_inv_remit'] : null;
        $this->container['sxt_inv_terms'] = isset($data['sxt_inv_terms']) ? $data['sxt_inv_terms'] : null;
        $this->container['sxt_inv_addon'] = isset($data['sxt_inv_addon']) ? $data['sxt_inv_addon'] : null;
        $this->container['sxt_inv_line'] = isset($data['sxt_inv_line']) ? $data['sxt_inv_line'] : null;
        $this->container['sxt_inv_line_extra'] = isset($data['sxt_inv_line_extra']) ? $data['sxt_inv_line_extra'] : null;
        $this->container['sxt_inv_line_ack'] = isset($data['sxt_inv_line_ack']) ? $data['sxt_inv_line_ack'] : null;
        $this->container['sxt_inv_line_comment'] = isset($data['sxt_inv_line_comment']) ? $data['sxt_inv_line_comment'] : null;
        $this->container['sxt_inv_line_serial'] = isset($data['sxt_inv_line_serial']) ? $data['sxt_inv_line_serial'] : null;
        $this->container['sxt_inv_line_lot'] = isset($data['sxt_inv_line_lot']) ? $data['sxt_inv_line_lot'] : null;
        $this->container['sxt_inv_pkg'] = isset($data['sxt_inv_pkg']) ? $data['sxt_inv_pkg'] : null;
        $this->container['sxt_inv_pkg_total'] = isset($data['sxt_inv_pkg_total']) ? $data['sxt_inv_pkg_total'] : null;
        $this->container['sxt_inv_vat_total'] = isset($data['sxt_inv_vat_total']) ? $data['sxt_inv_vat_total'] : null;
        $this->container['sxt_inv_total'] = isset($data['sxt_inv_total']) ? $data['sxt_inv_total'] : null;
        $this->container['custom_parameter'] = isset($data['custom_parameter']) ? $data['custom_parameter'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_number
     *
     * @return int
     */
    public function getCompanyNumber()
    {
        return $this->container['company_number'];
    }

    /**
     * Sets company_number
     *
     * @param int $company_number company_number
     *
     * @return $this
     */
    public function setCompanyNumber($company_number)
    {
        $this->container['company_number'] = $company_number;

        return $this;
    }

    /**
     * Gets operator_init
     *
     * @return string
     */
    public function getOperatorInit()
    {
        return $this->container['operator_init'];
    }

    /**
     * Sets operator_init
     *
     * @param string $operator_init operator_init
     *
     * @return $this
     */
    public function setOperatorInit($operator_init)
    {
        $this->container['operator_init'] = $operator_init;

        return $this;
    }

    /**
     * Gets operator_password
     *
     * @return string
     */
    public function getOperatorPassword()
    {
        return $this->container['operator_password'];
    }

    /**
     * Sets operator_password
     *
     * @param string $operator_password operator_password
     *
     * @return $this
     */
    public function setOperatorPassword($operator_password)
    {
        $this->container['operator_password'] = $operator_password;

        return $this;
    }

    /**
     * Gets sxt_inv_header
     *
     * @return \Swagger\Client\Model\SxtInvHeaderReq
     */
    public function getSxtInvHeader()
    {
        return $this->container['sxt_inv_header'];
    }

    /**
     * Sets sxt_inv_header
     *
     * @param \Swagger\Client\Model\SxtInvHeaderReq $sxt_inv_header sxt_inv_header
     *
     * @return $this
     */
    public function setSxtInvHeader($sxt_inv_header)
    {
        $this->container['sxt_inv_header'] = $sxt_inv_header;

        return $this;
    }

    /**
     * Gets sxt_inv_header_extra
     *
     * @return \Swagger\Client\Model\SxtInvHeaderExtraReq
     */
    public function getSxtInvHeaderExtra()
    {
        return $this->container['sxt_inv_header_extra'];
    }

    /**
     * Sets sxt_inv_header_extra
     *
     * @param \Swagger\Client\Model\SxtInvHeaderExtraReq $sxt_inv_header_extra sxt_inv_header_extra
     *
     * @return $this
     */
    public function setSxtInvHeaderExtra($sxt_inv_header_extra)
    {
        $this->container['sxt_inv_header_extra'] = $sxt_inv_header_extra;

        return $this;
    }

    /**
     * Gets sxt_inv_notes
     *
     * @return \Swagger\Client\Model\SxtInvNotesReq
     */
    public function getSxtInvNotes()
    {
        return $this->container['sxt_inv_notes'];
    }

    /**
     * Sets sxt_inv_notes
     *
     * @param \Swagger\Client\Model\SxtInvNotesReq $sxt_inv_notes sxt_inv_notes
     *
     * @return $this
     */
    public function setSxtInvNotes($sxt_inv_notes)
    {
        $this->container['sxt_inv_notes'] = $sxt_inv_notes;

        return $this;
    }

    /**
     * Gets sxt_inv_customer
     *
     * @return \Swagger\Client\Model\SxtInvCustomerReq
     */
    public function getSxtInvCustomer()
    {
        return $this->container['sxt_inv_customer'];
    }

    /**
     * Sets sxt_inv_customer
     *
     * @param \Swagger\Client\Model\SxtInvCustomerReq $sxt_inv_customer sxt_inv_customer
     *
     * @return $this
     */
    public function setSxtInvCustomer($sxt_inv_customer)
    {
        $this->container['sxt_inv_customer'] = $sxt_inv_customer;

        return $this;
    }

    /**
     * Gets sxt_inv_shipto
     *
     * @return \Swagger\Client\Model\SxtInvShiptoReq
     */
    public function getSxtInvShipto()
    {
        return $this->container['sxt_inv_shipto'];
    }

    /**
     * Sets sxt_inv_shipto
     *
     * @param \Swagger\Client\Model\SxtInvShiptoReq $sxt_inv_shipto sxt_inv_shipto
     *
     * @return $this
     */
    public function setSxtInvShipto($sxt_inv_shipto)
    {
        $this->container['sxt_inv_shipto'] = $sxt_inv_shipto;

        return $this;
    }

    /**
     * Gets sxt_inv_billto
     *
     * @return \Swagger\Client\Model\SxtInvBilltoReq
     */
    public function getSxtInvBillto()
    {
        return $this->container['sxt_inv_billto'];
    }

    /**
     * Sets sxt_inv_billto
     *
     * @param \Swagger\Client\Model\SxtInvBilltoReq $sxt_inv_billto sxt_inv_billto
     *
     * @return $this
     */
    public function setSxtInvBillto($sxt_inv_billto)
    {
        $this->container['sxt_inv_billto'] = $sxt_inv_billto;

        return $this;
    }

    /**
     * Gets sxt_inv_remit
     *
     * @return \Swagger\Client\Model\SxtInvRemitReq
     */
    public function getSxtInvRemit()
    {
        return $this->container['sxt_inv_remit'];
    }

    /**
     * Sets sxt_inv_remit
     *
     * @param \Swagger\Client\Model\SxtInvRemitReq $sxt_inv_remit sxt_inv_remit
     *
     * @return $this
     */
    public function setSxtInvRemit($sxt_inv_remit)
    {
        $this->container['sxt_inv_remit'] = $sxt_inv_remit;

        return $this;
    }

    /**
     * Gets sxt_inv_terms
     *
     * @return \Swagger\Client\Model\SxtInvTermsReq
     */
    public function getSxtInvTerms()
    {
        return $this->container['sxt_inv_terms'];
    }

    /**
     * Sets sxt_inv_terms
     *
     * @param \Swagger\Client\Model\SxtInvTermsReq $sxt_inv_terms sxt_inv_terms
     *
     * @return $this
     */
    public function setSxtInvTerms($sxt_inv_terms)
    {
        $this->container['sxt_inv_terms'] = $sxt_inv_terms;

        return $this;
    }

    /**
     * Gets sxt_inv_addon
     *
     * @return \Swagger\Client\Model\SxtInvAddonReq
     */
    public function getSxtInvAddon()
    {
        return $this->container['sxt_inv_addon'];
    }

    /**
     * Sets sxt_inv_addon
     *
     * @param \Swagger\Client\Model\SxtInvAddonReq $sxt_inv_addon sxt_inv_addon
     *
     * @return $this
     */
    public function setSxtInvAddon($sxt_inv_addon)
    {
        $this->container['sxt_inv_addon'] = $sxt_inv_addon;

        return $this;
    }

    /**
     * Gets sxt_inv_line
     *
     * @return \Swagger\Client\Model\SxtInvLineReq
     */
    public function getSxtInvLine()
    {
        return $this->container['sxt_inv_line'];
    }

    /**
     * Sets sxt_inv_line
     *
     * @param \Swagger\Client\Model\SxtInvLineReq $sxt_inv_line sxt_inv_line
     *
     * @return $this
     */
    public function setSxtInvLine($sxt_inv_line)
    {
        $this->container['sxt_inv_line'] = $sxt_inv_line;

        return $this;
    }

    /**
     * Gets sxt_inv_line_extra
     *
     * @return \Swagger\Client\Model\SxtInvLineExtraReq
     */
    public function getSxtInvLineExtra()
    {
        return $this->container['sxt_inv_line_extra'];
    }

    /**
     * Sets sxt_inv_line_extra
     *
     * @param \Swagger\Client\Model\SxtInvLineExtraReq $sxt_inv_line_extra sxt_inv_line_extra
     *
     * @return $this
     */
    public function setSxtInvLineExtra($sxt_inv_line_extra)
    {
        $this->container['sxt_inv_line_extra'] = $sxt_inv_line_extra;

        return $this;
    }

    /**
     * Gets sxt_inv_line_ack
     *
     * @return \Swagger\Client\Model\SxtInvLineAckReq
     */
    public function getSxtInvLineAck()
    {
        return $this->container['sxt_inv_line_ack'];
    }

    /**
     * Sets sxt_inv_line_ack
     *
     * @param \Swagger\Client\Model\SxtInvLineAckReq $sxt_inv_line_ack sxt_inv_line_ack
     *
     * @return $this
     */
    public function setSxtInvLineAck($sxt_inv_line_ack)
    {
        $this->container['sxt_inv_line_ack'] = $sxt_inv_line_ack;

        return $this;
    }

    /**
     * Gets sxt_inv_line_comment
     *
     * @return \Swagger\Client\Model\SxtInvLineCommentReq
     */
    public function getSxtInvLineComment()
    {
        return $this->container['sxt_inv_line_comment'];
    }

    /**
     * Sets sxt_inv_line_comment
     *
     * @param \Swagger\Client\Model\SxtInvLineCommentReq $sxt_inv_line_comment sxt_inv_line_comment
     *
     * @return $this
     */
    public function setSxtInvLineComment($sxt_inv_line_comment)
    {
        $this->container['sxt_inv_line_comment'] = $sxt_inv_line_comment;

        return $this;
    }

    /**
     * Gets sxt_inv_line_serial
     *
     * @return \Swagger\Client\Model\SxtInvLineSerialReq
     */
    public function getSxtInvLineSerial()
    {
        return $this->container['sxt_inv_line_serial'];
    }

    /**
     * Sets sxt_inv_line_serial
     *
     * @param \Swagger\Client\Model\SxtInvLineSerialReq $sxt_inv_line_serial sxt_inv_line_serial
     *
     * @return $this
     */
    public function setSxtInvLineSerial($sxt_inv_line_serial)
    {
        $this->container['sxt_inv_line_serial'] = $sxt_inv_line_serial;

        return $this;
    }

    /**
     * Gets sxt_inv_line_lot
     *
     * @return \Swagger\Client\Model\SxtInvLineLotReq
     */
    public function getSxtInvLineLot()
    {
        return $this->container['sxt_inv_line_lot'];
    }

    /**
     * Sets sxt_inv_line_lot
     *
     * @param \Swagger\Client\Model\SxtInvLineLotReq $sxt_inv_line_lot sxt_inv_line_lot
     *
     * @return $this
     */
    public function setSxtInvLineLot($sxt_inv_line_lot)
    {
        $this->container['sxt_inv_line_lot'] = $sxt_inv_line_lot;

        return $this;
    }

    /**
     * Gets sxt_inv_pkg
     *
     * @return \Swagger\Client\Model\SxtInvPkgReq
     */
    public function getSxtInvPkg()
    {
        return $this->container['sxt_inv_pkg'];
    }

    /**
     * Sets sxt_inv_pkg
     *
     * @param \Swagger\Client\Model\SxtInvPkgReq $sxt_inv_pkg sxt_inv_pkg
     *
     * @return $this
     */
    public function setSxtInvPkg($sxt_inv_pkg)
    {
        $this->container['sxt_inv_pkg'] = $sxt_inv_pkg;

        return $this;
    }

    /**
     * Gets sxt_inv_pkg_total
     *
     * @return \Swagger\Client\Model\SxtInvPkgTotalReq
     */
    public function getSxtInvPkgTotal()
    {
        return $this->container['sxt_inv_pkg_total'];
    }

    /**
     * Sets sxt_inv_pkg_total
     *
     * @param \Swagger\Client\Model\SxtInvPkgTotalReq $sxt_inv_pkg_total sxt_inv_pkg_total
     *
     * @return $this
     */
    public function setSxtInvPkgTotal($sxt_inv_pkg_total)
    {
        $this->container['sxt_inv_pkg_total'] = $sxt_inv_pkg_total;

        return $this;
    }

    /**
     * Gets sxt_inv_vat_total
     *
     * @return \Swagger\Client\Model\SxtInvVatTotalReq
     */
    public function getSxtInvVatTotal()
    {
        return $this->container['sxt_inv_vat_total'];
    }

    /**
     * Sets sxt_inv_vat_total
     *
     * @param \Swagger\Client\Model\SxtInvVatTotalReq $sxt_inv_vat_total sxt_inv_vat_total
     *
     * @return $this
     */
    public function setSxtInvVatTotal($sxt_inv_vat_total)
    {
        $this->container['sxt_inv_vat_total'] = $sxt_inv_vat_total;

        return $this;
    }

    /**
     * Gets sxt_inv_total
     *
     * @return \Swagger\Client\Model\SxtInvTotalReq
     */
    public function getSxtInvTotal()
    {
        return $this->container['sxt_inv_total'];
    }

    /**
     * Sets sxt_inv_total
     *
     * @param \Swagger\Client\Model\SxtInvTotalReq $sxt_inv_total sxt_inv_total
     *
     * @return $this
     */
    public function setSxtInvTotal($sxt_inv_total)
    {
        $this->container['sxt_inv_total'] = $sxt_inv_total;

        return $this;
    }

    /**
     * Gets custom_parameter
     *
     * @return string
     */
    public function getCustomParameter()
    {
        return $this->container['custom_parameter'];
    }

    /**
     * Sets custom_parameter
     *
     * @param string $custom_parameter custom_parameter
     *
     * @return $this
     */
    public function setCustomParameter($custom_parameter)
    {
        $this->container['custom_parameter'] = $custom_parameter;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


