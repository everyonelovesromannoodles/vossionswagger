<?php
/**
 * TInpoackline
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TInpoackline Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TInpoackline implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-inpoackline';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'barcode' => 'string',
        'commentdata' => 'string',
        'currencyty' => 'string',
        'duedt' => '\DateTime',
        'exchgrate' => 'double',
        'expshipdt' => '\DateTime',
        'lineno' => 'int',
        'lnshipdt' => '\DateTime',
        'lnstatuscd' => 'string',
        'price' => 'double',
        'priceuom' => 'string',
        'qtyord' => 'double',
        'shipprod' => 'string',
        'subfl' => 'bool',
        'superfl' => 'bool',
        'unit' => 'string',
        'upcno1' => 'string',
        'upcno2' => 'string',
        'upcno3' => 'int',
        'upcno4' => 'int',
        'upcno5' => 'string',
        'upcno6' => 'string',
        'vendlineno' => 'string',
        'vendprod' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'barcode' => null,
        'commentdata' => null,
        'currencyty' => null,
        'duedt' => 'date',
        'exchgrate' => 'double',
        'expshipdt' => 'date',
        'lineno' => 'int64',
        'lnshipdt' => 'date',
        'lnstatuscd' => null,
        'price' => 'double',
        'priceuom' => null,
        'qtyord' => 'double',
        'shipprod' => null,
        'subfl' => null,
        'superfl' => null,
        'unit' => null,
        'upcno1' => null,
        'upcno2' => null,
        'upcno3' => 'int64',
        'upcno4' => 'int64',
        'upcno5' => null,
        'upcno6' => null,
        'vendlineno' => null,
        'vendprod' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'barcode' => 'barcode',
        'commentdata' => 'commentdata',
        'currencyty' => 'currencyty',
        'duedt' => 'duedt',
        'exchgrate' => 'exchgrate',
        'expshipdt' => 'expshipdt',
        'lineno' => 'lineno',
        'lnshipdt' => 'lnshipdt',
        'lnstatuscd' => 'lnstatuscd',
        'price' => 'price',
        'priceuom' => 'priceuom',
        'qtyord' => 'qtyord',
        'shipprod' => 'shipprod',
        'subfl' => 'subfl',
        'superfl' => 'superfl',
        'unit' => 'unit',
        'upcno1' => 'upcno1',
        'upcno2' => 'upcno2',
        'upcno3' => 'upcno3',
        'upcno4' => 'upcno4',
        'upcno5' => 'upcno5',
        'upcno6' => 'upcno6',
        'vendlineno' => 'vendlineno',
        'vendprod' => 'vendprod',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'barcode' => 'setBarcode',
        'commentdata' => 'setCommentdata',
        'currencyty' => 'setCurrencyty',
        'duedt' => 'setDuedt',
        'exchgrate' => 'setExchgrate',
        'expshipdt' => 'setExpshipdt',
        'lineno' => 'setLineno',
        'lnshipdt' => 'setLnshipdt',
        'lnstatuscd' => 'setLnstatuscd',
        'price' => 'setPrice',
        'priceuom' => 'setPriceuom',
        'qtyord' => 'setQtyord',
        'shipprod' => 'setShipprod',
        'subfl' => 'setSubfl',
        'superfl' => 'setSuperfl',
        'unit' => 'setUnit',
        'upcno1' => 'setUpcno1',
        'upcno2' => 'setUpcno2',
        'upcno3' => 'setUpcno3',
        'upcno4' => 'setUpcno4',
        'upcno5' => 'setUpcno5',
        'upcno6' => 'setUpcno6',
        'vendlineno' => 'setVendlineno',
        'vendprod' => 'setVendprod',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'barcode' => 'getBarcode',
        'commentdata' => 'getCommentdata',
        'currencyty' => 'getCurrencyty',
        'duedt' => 'getDuedt',
        'exchgrate' => 'getExchgrate',
        'expshipdt' => 'getExpshipdt',
        'lineno' => 'getLineno',
        'lnshipdt' => 'getLnshipdt',
        'lnstatuscd' => 'getLnstatuscd',
        'price' => 'getPrice',
        'priceuom' => 'getPriceuom',
        'qtyord' => 'getQtyord',
        'shipprod' => 'getShipprod',
        'subfl' => 'getSubfl',
        'superfl' => 'getSuperfl',
        'unit' => 'getUnit',
        'upcno1' => 'getUpcno1',
        'upcno2' => 'getUpcno2',
        'upcno3' => 'getUpcno3',
        'upcno4' => 'getUpcno4',
        'upcno5' => 'getUpcno5',
        'upcno6' => 'getUpcno6',
        'vendlineno' => 'getVendlineno',
        'vendprod' => 'getVendprod',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['barcode'] = isset($data['barcode']) ? $data['barcode'] : null;
        $this->container['commentdata'] = isset($data['commentdata']) ? $data['commentdata'] : null;
        $this->container['currencyty'] = isset($data['currencyty']) ? $data['currencyty'] : null;
        $this->container['duedt'] = isset($data['duedt']) ? $data['duedt'] : null;
        $this->container['exchgrate'] = isset($data['exchgrate']) ? $data['exchgrate'] : null;
        $this->container['expshipdt'] = isset($data['expshipdt']) ? $data['expshipdt'] : null;
        $this->container['lineno'] = isset($data['lineno']) ? $data['lineno'] : null;
        $this->container['lnshipdt'] = isset($data['lnshipdt']) ? $data['lnshipdt'] : null;
        $this->container['lnstatuscd'] = isset($data['lnstatuscd']) ? $data['lnstatuscd'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['priceuom'] = isset($data['priceuom']) ? $data['priceuom'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['shipprod'] = isset($data['shipprod']) ? $data['shipprod'] : null;
        $this->container['subfl'] = isset($data['subfl']) ? $data['subfl'] : null;
        $this->container['superfl'] = isset($data['superfl']) ? $data['superfl'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['upcno1'] = isset($data['upcno1']) ? $data['upcno1'] : null;
        $this->container['upcno2'] = isset($data['upcno2']) ? $data['upcno2'] : null;
        $this->container['upcno3'] = isset($data['upcno3']) ? $data['upcno3'] : null;
        $this->container['upcno4'] = isset($data['upcno4']) ? $data['upcno4'] : null;
        $this->container['upcno5'] = isset($data['upcno5']) ? $data['upcno5'] : null;
        $this->container['upcno6'] = isset($data['upcno6']) ? $data['upcno6'] : null;
        $this->container['vendlineno'] = isset($data['vendlineno']) ? $data['vendlineno'] : null;
        $this->container['vendprod'] = isset($data['vendprod']) ? $data['vendprod'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets barcode
     *
     * @return string
     */
    public function getBarcode()
    {
        return $this->container['barcode'];
    }

    /**
     * Sets barcode
     *
     * @param string $barcode barcode
     *
     * @return $this
     */
    public function setBarcode($barcode)
    {
        $this->container['barcode'] = $barcode;

        return $this;
    }

    /**
     * Gets commentdata
     *
     * @return string
     */
    public function getCommentdata()
    {
        return $this->container['commentdata'];
    }

    /**
     * Sets commentdata
     *
     * @param string $commentdata commentdata
     *
     * @return $this
     */
    public function setCommentdata($commentdata)
    {
        $this->container['commentdata'] = $commentdata;

        return $this;
    }

    /**
     * Gets currencyty
     *
     * @return string
     */
    public function getCurrencyty()
    {
        return $this->container['currencyty'];
    }

    /**
     * Sets currencyty
     *
     * @param string $currencyty currencyty
     *
     * @return $this
     */
    public function setCurrencyty($currencyty)
    {
        $this->container['currencyty'] = $currencyty;

        return $this;
    }

    /**
     * Gets duedt
     *
     * @return \DateTime
     */
    public function getDuedt()
    {
        return $this->container['duedt'];
    }

    /**
     * Sets duedt
     *
     * @param \DateTime $duedt duedt
     *
     * @return $this
     */
    public function setDuedt($duedt)
    {
        $this->container['duedt'] = $duedt;

        return $this;
    }

    /**
     * Gets exchgrate
     *
     * @return double
     */
    public function getExchgrate()
    {
        return $this->container['exchgrate'];
    }

    /**
     * Sets exchgrate
     *
     * @param double $exchgrate exchgrate
     *
     * @return $this
     */
    public function setExchgrate($exchgrate)
    {
        $this->container['exchgrate'] = $exchgrate;

        return $this;
    }

    /**
     * Gets expshipdt
     *
     * @return \DateTime
     */
    public function getExpshipdt()
    {
        return $this->container['expshipdt'];
    }

    /**
     * Sets expshipdt
     *
     * @param \DateTime $expshipdt expshipdt
     *
     * @return $this
     */
    public function setExpshipdt($expshipdt)
    {
        $this->container['expshipdt'] = $expshipdt;

        return $this;
    }

    /**
     * Gets lineno
     *
     * @return int
     */
    public function getLineno()
    {
        return $this->container['lineno'];
    }

    /**
     * Sets lineno
     *
     * @param int $lineno lineno
     *
     * @return $this
     */
    public function setLineno($lineno)
    {
        $this->container['lineno'] = $lineno;

        return $this;
    }

    /**
     * Gets lnshipdt
     *
     * @return \DateTime
     */
    public function getLnshipdt()
    {
        return $this->container['lnshipdt'];
    }

    /**
     * Sets lnshipdt
     *
     * @param \DateTime $lnshipdt lnshipdt
     *
     * @return $this
     */
    public function setLnshipdt($lnshipdt)
    {
        $this->container['lnshipdt'] = $lnshipdt;

        return $this;
    }

    /**
     * Gets lnstatuscd
     *
     * @return string
     */
    public function getLnstatuscd()
    {
        return $this->container['lnstatuscd'];
    }

    /**
     * Sets lnstatuscd
     *
     * @param string $lnstatuscd lnstatuscd
     *
     * @return $this
     */
    public function setLnstatuscd($lnstatuscd)
    {
        $this->container['lnstatuscd'] = $lnstatuscd;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceuom
     *
     * @return string
     */
    public function getPriceuom()
    {
        return $this->container['priceuom'];
    }

    /**
     * Sets priceuom
     *
     * @param string $priceuom priceuom
     *
     * @return $this
     */
    public function setPriceuom($priceuom)
    {
        $this->container['priceuom'] = $priceuom;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets shipprod
     *
     * @return string
     */
    public function getShipprod()
    {
        return $this->container['shipprod'];
    }

    /**
     * Sets shipprod
     *
     * @param string $shipprod shipprod
     *
     * @return $this
     */
    public function setShipprod($shipprod)
    {
        $this->container['shipprod'] = $shipprod;

        return $this;
    }

    /**
     * Gets subfl
     *
     * @return bool
     */
    public function getSubfl()
    {
        return $this->container['subfl'];
    }

    /**
     * Sets subfl
     *
     * @param bool $subfl subfl
     *
     * @return $this
     */
    public function setSubfl($subfl)
    {
        $this->container['subfl'] = $subfl;

        return $this;
    }

    /**
     * Gets superfl
     *
     * @return bool
     */
    public function getSuperfl()
    {
        return $this->container['superfl'];
    }

    /**
     * Sets superfl
     *
     * @param bool $superfl superfl
     *
     * @return $this
     */
    public function setSuperfl($superfl)
    {
        $this->container['superfl'] = $superfl;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets upcno1
     *
     * @return string
     */
    public function getUpcno1()
    {
        return $this->container['upcno1'];
    }

    /**
     * Sets upcno1
     *
     * @param string $upcno1 upcno1
     *
     * @return $this
     */
    public function setUpcno1($upcno1)
    {
        $this->container['upcno1'] = $upcno1;

        return $this;
    }

    /**
     * Gets upcno2
     *
     * @return string
     */
    public function getUpcno2()
    {
        return $this->container['upcno2'];
    }

    /**
     * Sets upcno2
     *
     * @param string $upcno2 upcno2
     *
     * @return $this
     */
    public function setUpcno2($upcno2)
    {
        $this->container['upcno2'] = $upcno2;

        return $this;
    }

    /**
     * Gets upcno3
     *
     * @return int
     */
    public function getUpcno3()
    {
        return $this->container['upcno3'];
    }

    /**
     * Sets upcno3
     *
     * @param int $upcno3 upcno3
     *
     * @return $this
     */
    public function setUpcno3($upcno3)
    {
        $this->container['upcno3'] = $upcno3;

        return $this;
    }

    /**
     * Gets upcno4
     *
     * @return int
     */
    public function getUpcno4()
    {
        return $this->container['upcno4'];
    }

    /**
     * Sets upcno4
     *
     * @param int $upcno4 upcno4
     *
     * @return $this
     */
    public function setUpcno4($upcno4)
    {
        $this->container['upcno4'] = $upcno4;

        return $this;
    }

    /**
     * Gets upcno5
     *
     * @return string
     */
    public function getUpcno5()
    {
        return $this->container['upcno5'];
    }

    /**
     * Sets upcno5
     *
     * @param string $upcno5 upcno5
     *
     * @return $this
     */
    public function setUpcno5($upcno5)
    {
        $this->container['upcno5'] = $upcno5;

        return $this;
    }

    /**
     * Gets upcno6
     *
     * @return string
     */
    public function getUpcno6()
    {
        return $this->container['upcno6'];
    }

    /**
     * Sets upcno6
     *
     * @param string $upcno6 upcno6
     *
     * @return $this
     */
    public function setUpcno6($upcno6)
    {
        $this->container['upcno6'] = $upcno6;

        return $this;
    }

    /**
     * Gets vendlineno
     *
     * @return string
     */
    public function getVendlineno()
    {
        return $this->container['vendlineno'];
    }

    /**
     * Sets vendlineno
     *
     * @param string $vendlineno vendlineno
     *
     * @return $this
     */
    public function setVendlineno($vendlineno)
    {
        $this->container['vendlineno'] = $vendlineno;

        return $this;
    }

    /**
     * Gets vendprod
     *
     * @return string
     */
    public function getVendprod()
    {
        return $this->container['vendprod'];
    }

    /**
     * Sets vendprod
     *
     * @param string $vendprod vendprod
     *
     * @return $this
     */
    public function setVendprod($vendprod)
    {
        $this->container['vendprod'] = $vendprod;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


