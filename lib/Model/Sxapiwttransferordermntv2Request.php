<?php
/**
 * Sxapiwttransferordermntv2Request
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * Sxapiwttransferordermntv2Request Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Sxapiwttransferordermntv2Request implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapiwttransferordermntv2_request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'company_number' => 'int',
        'operator_init' => 'string',
        'operator_password' => 'string',
        'retrieve_change_warehouse_transfer_number' => 'int',
        'retrieve_change_warehouse_transfer_suffix' => 'int',
        't_inwtmntheader' => '\Swagger\Client\Model\TInwtmntheaderReq',
        't_inwtmntline' => '\Swagger\Client\Model\TInwtmntlineReq',
        't_infieldvalue' => '\Swagger\Client\Model\TInfieldvalueReq'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'company_number' => 'int64',
        'operator_init' => null,
        'operator_password' => null,
        'retrieve_change_warehouse_transfer_number' => 'int64',
        'retrieve_change_warehouse_transfer_suffix' => 'int64',
        't_inwtmntheader' => null,
        't_inwtmntline' => null,
        't_infieldvalue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'company_number' => 'companyNumber',
        'operator_init' => 'operatorInit',
        'operator_password' => 'operatorPassword',
        'retrieve_change_warehouse_transfer_number' => 'retrieveChangeWarehouseTransferNumber',
        'retrieve_change_warehouse_transfer_suffix' => 'retrieveChangeWarehouseTransferSuffix',
        't_inwtmntheader' => 'tInwtmntheader',
        't_inwtmntline' => 'tInwtmntline',
        't_infieldvalue' => 'tInfieldvalue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'company_number' => 'setCompanyNumber',
        'operator_init' => 'setOperatorInit',
        'operator_password' => 'setOperatorPassword',
        'retrieve_change_warehouse_transfer_number' => 'setRetrieveChangeWarehouseTransferNumber',
        'retrieve_change_warehouse_transfer_suffix' => 'setRetrieveChangeWarehouseTransferSuffix',
        't_inwtmntheader' => 'setTInwtmntheader',
        't_inwtmntline' => 'setTInwtmntline',
        't_infieldvalue' => 'setTInfieldvalue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'company_number' => 'getCompanyNumber',
        'operator_init' => 'getOperatorInit',
        'operator_password' => 'getOperatorPassword',
        'retrieve_change_warehouse_transfer_number' => 'getRetrieveChangeWarehouseTransferNumber',
        'retrieve_change_warehouse_transfer_suffix' => 'getRetrieveChangeWarehouseTransferSuffix',
        't_inwtmntheader' => 'getTInwtmntheader',
        't_inwtmntline' => 'getTInwtmntline',
        't_infieldvalue' => 'getTInfieldvalue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['company_number'] = isset($data['company_number']) ? $data['company_number'] : null;
        $this->container['operator_init'] = isset($data['operator_init']) ? $data['operator_init'] : null;
        $this->container['operator_password'] = isset($data['operator_password']) ? $data['operator_password'] : null;
        $this->container['retrieve_change_warehouse_transfer_number'] = isset($data['retrieve_change_warehouse_transfer_number']) ? $data['retrieve_change_warehouse_transfer_number'] : null;
        $this->container['retrieve_change_warehouse_transfer_suffix'] = isset($data['retrieve_change_warehouse_transfer_suffix']) ? $data['retrieve_change_warehouse_transfer_suffix'] : null;
        $this->container['t_inwtmntheader'] = isset($data['t_inwtmntheader']) ? $data['t_inwtmntheader'] : null;
        $this->container['t_inwtmntline'] = isset($data['t_inwtmntline']) ? $data['t_inwtmntline'] : null;
        $this->container['t_infieldvalue'] = isset($data['t_infieldvalue']) ? $data['t_infieldvalue'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets company_number
     *
     * @return int
     */
    public function getCompanyNumber()
    {
        return $this->container['company_number'];
    }

    /**
     * Sets company_number
     *
     * @param int $company_number company_number
     *
     * @return $this
     */
    public function setCompanyNumber($company_number)
    {
        $this->container['company_number'] = $company_number;

        return $this;
    }

    /**
     * Gets operator_init
     *
     * @return string
     */
    public function getOperatorInit()
    {
        return $this->container['operator_init'];
    }

    /**
     * Sets operator_init
     *
     * @param string $operator_init operator_init
     *
     * @return $this
     */
    public function setOperatorInit($operator_init)
    {
        $this->container['operator_init'] = $operator_init;

        return $this;
    }

    /**
     * Gets operator_password
     *
     * @return string
     */
    public function getOperatorPassword()
    {
        return $this->container['operator_password'];
    }

    /**
     * Sets operator_password
     *
     * @param string $operator_password operator_password
     *
     * @return $this
     */
    public function setOperatorPassword($operator_password)
    {
        $this->container['operator_password'] = $operator_password;

        return $this;
    }

    /**
     * Gets retrieve_change_warehouse_transfer_number
     *
     * @return int
     */
    public function getRetrieveChangeWarehouseTransferNumber()
    {
        return $this->container['retrieve_change_warehouse_transfer_number'];
    }

    /**
     * Sets retrieve_change_warehouse_transfer_number
     *
     * @param int $retrieve_change_warehouse_transfer_number retrieve_change_warehouse_transfer_number
     *
     * @return $this
     */
    public function setRetrieveChangeWarehouseTransferNumber($retrieve_change_warehouse_transfer_number)
    {
        $this->container['retrieve_change_warehouse_transfer_number'] = $retrieve_change_warehouse_transfer_number;

        return $this;
    }

    /**
     * Gets retrieve_change_warehouse_transfer_suffix
     *
     * @return int
     */
    public function getRetrieveChangeWarehouseTransferSuffix()
    {
        return $this->container['retrieve_change_warehouse_transfer_suffix'];
    }

    /**
     * Sets retrieve_change_warehouse_transfer_suffix
     *
     * @param int $retrieve_change_warehouse_transfer_suffix retrieve_change_warehouse_transfer_suffix
     *
     * @return $this
     */
    public function setRetrieveChangeWarehouseTransferSuffix($retrieve_change_warehouse_transfer_suffix)
    {
        $this->container['retrieve_change_warehouse_transfer_suffix'] = $retrieve_change_warehouse_transfer_suffix;

        return $this;
    }

    /**
     * Gets t_inwtmntheader
     *
     * @return \Swagger\Client\Model\TInwtmntheaderReq
     */
    public function getTInwtmntheader()
    {
        return $this->container['t_inwtmntheader'];
    }

    /**
     * Sets t_inwtmntheader
     *
     * @param \Swagger\Client\Model\TInwtmntheaderReq $t_inwtmntheader t_inwtmntheader
     *
     * @return $this
     */
    public function setTInwtmntheader($t_inwtmntheader)
    {
        $this->container['t_inwtmntheader'] = $t_inwtmntheader;

        return $this;
    }

    /**
     * Gets t_inwtmntline
     *
     * @return \Swagger\Client\Model\TInwtmntlineReq
     */
    public function getTInwtmntline()
    {
        return $this->container['t_inwtmntline'];
    }

    /**
     * Sets t_inwtmntline
     *
     * @param \Swagger\Client\Model\TInwtmntlineReq $t_inwtmntline t_inwtmntline
     *
     * @return $this
     */
    public function setTInwtmntline($t_inwtmntline)
    {
        $this->container['t_inwtmntline'] = $t_inwtmntline;

        return $this;
    }

    /**
     * Gets t_infieldvalue
     *
     * @return \Swagger\Client\Model\TInfieldvalueReq
     */
    public function getTInfieldvalue()
    {
        return $this->container['t_infieldvalue'];
    }

    /**
     * Sets t_infieldvalue
     *
     * @param \Swagger\Client\Model\TInfieldvalueReq $t_infieldvalue t_infieldvalue
     *
     * @return $this
     */
    public function setTInfieldvalue($t_infieldvalue)
    {
        $this->container['t_infieldvalue'] = $t_infieldvalue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


