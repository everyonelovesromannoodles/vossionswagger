<?php
/**
 * TtShopList
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TtShopList Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TtShopList implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'tt-shop_list';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'addswoptprodfl' => 'bool',
        'arpprodline' => 'string',
        'arpvendno' => 'double',
        'chrg' => 'string',
        'cono' => 'int',
        'csunperstk' => 'double',
        'cubes' => 'double',
        'descrip' => 'string',
        'descrip2' => 'string',
        'discamt' => 'double',
        'discoverfl' => 'bool',
        'dsplprod' => 'string',
        'extra_1' => 'string',
        'extra_2' => 'string',
        'icspecrecno' => 'int',
        'keyindex' => 'string',
        'lastprice' => 'double',
        'lookupnm' => 'string',
        'marginamt' => 'double',
        'netord' => 'double',
        'netrecommend' => 'double',
        'notesfl' => 'string',
        'oper2' => 'string',
        'operinit' => 'string',
        'optionalwords' => 'string',
        'pdrecno' => 'int',
        'pdsvfl' => 'bool',
        'prccostper' => 'string',
        'price' => 'double',
        'priceoverfl' => 'bool',
        'prod' => 'string',
        'prodcat' => 'string',
        'prodcost' => 'double',
        'qtyavail' => 'double',
        'qtybreakty' => 'string',
        'qtyord' => 'double',
        'qtyrecommend' => 'double',
        'seasontype' => 'string',
        'seqno' => 'int',
        'specconv' => 'double',
        'speccostty' => 'string',
        'specsntype' => 'string',
        'statmessage' => 'string',
        'stkqtyord' => 'double',
        'stkqtyrecommend' => 'double',
        'totalstkqty' => 'double',
        'transdt' => '\DateTime',
        'transrroc' => 'string',
        'transtm' => 'string',
        'unit' => 'string',
        'unitconv' => 'double',
        'weight' => 'double',
        'whse' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'addswoptprodfl' => null,
        'arpprodline' => null,
        'arpvendno' => 'double',
        'chrg' => null,
        'cono' => 'int64',
        'csunperstk' => 'double',
        'cubes' => 'double',
        'descrip' => null,
        'descrip2' => null,
        'discamt' => 'double',
        'discoverfl' => null,
        'dsplprod' => null,
        'extra_1' => null,
        'extra_2' => null,
        'icspecrecno' => 'int64',
        'keyindex' => null,
        'lastprice' => 'double',
        'lookupnm' => null,
        'marginamt' => 'double',
        'netord' => 'double',
        'netrecommend' => 'double',
        'notesfl' => null,
        'oper2' => null,
        'operinit' => null,
        'optionalwords' => null,
        'pdrecno' => 'int64',
        'pdsvfl' => null,
        'prccostper' => null,
        'price' => 'double',
        'priceoverfl' => null,
        'prod' => null,
        'prodcat' => null,
        'prodcost' => 'double',
        'qtyavail' => 'double',
        'qtybreakty' => null,
        'qtyord' => 'double',
        'qtyrecommend' => 'double',
        'seasontype' => null,
        'seqno' => 'int64',
        'specconv' => 'double',
        'speccostty' => null,
        'specsntype' => null,
        'statmessage' => null,
        'stkqtyord' => 'double',
        'stkqtyrecommend' => 'double',
        'totalstkqty' => 'double',
        'transdt' => 'date',
        'transrroc' => null,
        'transtm' => null,
        'unit' => null,
        'unitconv' => 'double',
        'weight' => 'double',
        'whse' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'addswoptprodfl' => 'addswoptprodfl',
        'arpprodline' => 'arpprodline',
        'arpvendno' => 'arpvendno',
        'chrg' => 'chrg',
        'cono' => 'cono',
        'csunperstk' => 'csunperstk',
        'cubes' => 'cubes',
        'descrip' => 'descrip',
        'descrip2' => 'descrip2',
        'discamt' => 'discamt',
        'discoverfl' => 'discoverfl',
        'dsplprod' => 'dsplprod',
        'extra_1' => 'extra-1',
        'extra_2' => 'extra-2',
        'icspecrecno' => 'icspecrecno',
        'keyindex' => 'keyindex',
        'lastprice' => 'lastprice',
        'lookupnm' => 'lookupnm',
        'marginamt' => 'marginamt',
        'netord' => 'netord',
        'netrecommend' => 'netrecommend',
        'notesfl' => 'notesfl',
        'oper2' => 'oper2',
        'operinit' => 'operinit',
        'optionalwords' => 'optionalwords',
        'pdrecno' => 'pdrecno',
        'pdsvfl' => 'pdsvfl',
        'prccostper' => 'prccostper',
        'price' => 'price',
        'priceoverfl' => 'priceoverfl',
        'prod' => 'prod',
        'prodcat' => 'prodcat',
        'prodcost' => 'prodcost',
        'qtyavail' => 'qtyavail',
        'qtybreakty' => 'qtybreakty',
        'qtyord' => 'qtyord',
        'qtyrecommend' => 'qtyrecommend',
        'seasontype' => 'seasontype',
        'seqno' => 'seqno',
        'specconv' => 'specconv',
        'speccostty' => 'speccostty',
        'specsntype' => 'specsntype',
        'statmessage' => 'statmessage',
        'stkqtyord' => 'stkqtyord',
        'stkqtyrecommend' => 'stkqtyrecommend',
        'totalstkqty' => 'totalstkqty',
        'transdt' => 'transdt',
        'transrroc' => 'transrroc',
        'transtm' => 'transtm',
        'unit' => 'unit',
        'unitconv' => 'unitconv',
        'weight' => 'weight',
        'whse' => 'whse'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'addswoptprodfl' => 'setAddswoptprodfl',
        'arpprodline' => 'setArpprodline',
        'arpvendno' => 'setArpvendno',
        'chrg' => 'setChrg',
        'cono' => 'setCono',
        'csunperstk' => 'setCsunperstk',
        'cubes' => 'setCubes',
        'descrip' => 'setDescrip',
        'descrip2' => 'setDescrip2',
        'discamt' => 'setDiscamt',
        'discoverfl' => 'setDiscoverfl',
        'dsplprod' => 'setDsplprod',
        'extra_1' => 'setExtra1',
        'extra_2' => 'setExtra2',
        'icspecrecno' => 'setIcspecrecno',
        'keyindex' => 'setKeyindex',
        'lastprice' => 'setLastprice',
        'lookupnm' => 'setLookupnm',
        'marginamt' => 'setMarginamt',
        'netord' => 'setNetord',
        'netrecommend' => 'setNetrecommend',
        'notesfl' => 'setNotesfl',
        'oper2' => 'setOper2',
        'operinit' => 'setOperinit',
        'optionalwords' => 'setOptionalwords',
        'pdrecno' => 'setPdrecno',
        'pdsvfl' => 'setPdsvfl',
        'prccostper' => 'setPrccostper',
        'price' => 'setPrice',
        'priceoverfl' => 'setPriceoverfl',
        'prod' => 'setProd',
        'prodcat' => 'setProdcat',
        'prodcost' => 'setProdcost',
        'qtyavail' => 'setQtyavail',
        'qtybreakty' => 'setQtybreakty',
        'qtyord' => 'setQtyord',
        'qtyrecommend' => 'setQtyrecommend',
        'seasontype' => 'setSeasontype',
        'seqno' => 'setSeqno',
        'specconv' => 'setSpecconv',
        'speccostty' => 'setSpeccostty',
        'specsntype' => 'setSpecsntype',
        'statmessage' => 'setStatmessage',
        'stkqtyord' => 'setStkqtyord',
        'stkqtyrecommend' => 'setStkqtyrecommend',
        'totalstkqty' => 'setTotalstkqty',
        'transdt' => 'setTransdt',
        'transrroc' => 'setTransrroc',
        'transtm' => 'setTranstm',
        'unit' => 'setUnit',
        'unitconv' => 'setUnitconv',
        'weight' => 'setWeight',
        'whse' => 'setWhse'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'addswoptprodfl' => 'getAddswoptprodfl',
        'arpprodline' => 'getArpprodline',
        'arpvendno' => 'getArpvendno',
        'chrg' => 'getChrg',
        'cono' => 'getCono',
        'csunperstk' => 'getCsunperstk',
        'cubes' => 'getCubes',
        'descrip' => 'getDescrip',
        'descrip2' => 'getDescrip2',
        'discamt' => 'getDiscamt',
        'discoverfl' => 'getDiscoverfl',
        'dsplprod' => 'getDsplprod',
        'extra_1' => 'getExtra1',
        'extra_2' => 'getExtra2',
        'icspecrecno' => 'getIcspecrecno',
        'keyindex' => 'getKeyindex',
        'lastprice' => 'getLastprice',
        'lookupnm' => 'getLookupnm',
        'marginamt' => 'getMarginamt',
        'netord' => 'getNetord',
        'netrecommend' => 'getNetrecommend',
        'notesfl' => 'getNotesfl',
        'oper2' => 'getOper2',
        'operinit' => 'getOperinit',
        'optionalwords' => 'getOptionalwords',
        'pdrecno' => 'getPdrecno',
        'pdsvfl' => 'getPdsvfl',
        'prccostper' => 'getPrccostper',
        'price' => 'getPrice',
        'priceoverfl' => 'getPriceoverfl',
        'prod' => 'getProd',
        'prodcat' => 'getProdcat',
        'prodcost' => 'getProdcost',
        'qtyavail' => 'getQtyavail',
        'qtybreakty' => 'getQtybreakty',
        'qtyord' => 'getQtyord',
        'qtyrecommend' => 'getQtyrecommend',
        'seasontype' => 'getSeasontype',
        'seqno' => 'getSeqno',
        'specconv' => 'getSpecconv',
        'speccostty' => 'getSpeccostty',
        'specsntype' => 'getSpecsntype',
        'statmessage' => 'getStatmessage',
        'stkqtyord' => 'getStkqtyord',
        'stkqtyrecommend' => 'getStkqtyrecommend',
        'totalstkqty' => 'getTotalstkqty',
        'transdt' => 'getTransdt',
        'transrroc' => 'getTransrroc',
        'transtm' => 'getTranstm',
        'unit' => 'getUnit',
        'unitconv' => 'getUnitconv',
        'weight' => 'getWeight',
        'whse' => 'getWhse'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['addswoptprodfl'] = isset($data['addswoptprodfl']) ? $data['addswoptprodfl'] : null;
        $this->container['arpprodline'] = isset($data['arpprodline']) ? $data['arpprodline'] : null;
        $this->container['arpvendno'] = isset($data['arpvendno']) ? $data['arpvendno'] : null;
        $this->container['chrg'] = isset($data['chrg']) ? $data['chrg'] : null;
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['csunperstk'] = isset($data['csunperstk']) ? $data['csunperstk'] : null;
        $this->container['cubes'] = isset($data['cubes']) ? $data['cubes'] : null;
        $this->container['descrip'] = isset($data['descrip']) ? $data['descrip'] : null;
        $this->container['descrip2'] = isset($data['descrip2']) ? $data['descrip2'] : null;
        $this->container['discamt'] = isset($data['discamt']) ? $data['discamt'] : null;
        $this->container['discoverfl'] = isset($data['discoverfl']) ? $data['discoverfl'] : null;
        $this->container['dsplprod'] = isset($data['dsplprod']) ? $data['dsplprod'] : null;
        $this->container['extra_1'] = isset($data['extra_1']) ? $data['extra_1'] : null;
        $this->container['extra_2'] = isset($data['extra_2']) ? $data['extra_2'] : null;
        $this->container['icspecrecno'] = isset($data['icspecrecno']) ? $data['icspecrecno'] : null;
        $this->container['keyindex'] = isset($data['keyindex']) ? $data['keyindex'] : null;
        $this->container['lastprice'] = isset($data['lastprice']) ? $data['lastprice'] : null;
        $this->container['lookupnm'] = isset($data['lookupnm']) ? $data['lookupnm'] : null;
        $this->container['marginamt'] = isset($data['marginamt']) ? $data['marginamt'] : null;
        $this->container['netord'] = isset($data['netord']) ? $data['netord'] : null;
        $this->container['netrecommend'] = isset($data['netrecommend']) ? $data['netrecommend'] : null;
        $this->container['notesfl'] = isset($data['notesfl']) ? $data['notesfl'] : null;
        $this->container['oper2'] = isset($data['oper2']) ? $data['oper2'] : null;
        $this->container['operinit'] = isset($data['operinit']) ? $data['operinit'] : null;
        $this->container['optionalwords'] = isset($data['optionalwords']) ? $data['optionalwords'] : null;
        $this->container['pdrecno'] = isset($data['pdrecno']) ? $data['pdrecno'] : null;
        $this->container['pdsvfl'] = isset($data['pdsvfl']) ? $data['pdsvfl'] : null;
        $this->container['prccostper'] = isset($data['prccostper']) ? $data['prccostper'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['priceoverfl'] = isset($data['priceoverfl']) ? $data['priceoverfl'] : null;
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['prodcost'] = isset($data['prodcost']) ? $data['prodcost'] : null;
        $this->container['qtyavail'] = isset($data['qtyavail']) ? $data['qtyavail'] : null;
        $this->container['qtybreakty'] = isset($data['qtybreakty']) ? $data['qtybreakty'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['qtyrecommend'] = isset($data['qtyrecommend']) ? $data['qtyrecommend'] : null;
        $this->container['seasontype'] = isset($data['seasontype']) ? $data['seasontype'] : null;
        $this->container['seqno'] = isset($data['seqno']) ? $data['seqno'] : null;
        $this->container['specconv'] = isset($data['specconv']) ? $data['specconv'] : null;
        $this->container['speccostty'] = isset($data['speccostty']) ? $data['speccostty'] : null;
        $this->container['specsntype'] = isset($data['specsntype']) ? $data['specsntype'] : null;
        $this->container['statmessage'] = isset($data['statmessage']) ? $data['statmessage'] : null;
        $this->container['stkqtyord'] = isset($data['stkqtyord']) ? $data['stkqtyord'] : null;
        $this->container['stkqtyrecommend'] = isset($data['stkqtyrecommend']) ? $data['stkqtyrecommend'] : null;
        $this->container['totalstkqty'] = isset($data['totalstkqty']) ? $data['totalstkqty'] : null;
        $this->container['transdt'] = isset($data['transdt']) ? $data['transdt'] : null;
        $this->container['transrroc'] = isset($data['transrroc']) ? $data['transrroc'] : null;
        $this->container['transtm'] = isset($data['transtm']) ? $data['transtm'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['unitconv'] = isset($data['unitconv']) ? $data['unitconv'] : null;
        $this->container['weight'] = isset($data['weight']) ? $data['weight'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets addswoptprodfl
     *
     * @return bool
     */
    public function getAddswoptprodfl()
    {
        return $this->container['addswoptprodfl'];
    }

    /**
     * Sets addswoptprodfl
     *
     * @param bool $addswoptprodfl addswoptprodfl
     *
     * @return $this
     */
    public function setAddswoptprodfl($addswoptprodfl)
    {
        $this->container['addswoptprodfl'] = $addswoptprodfl;

        return $this;
    }

    /**
     * Gets arpprodline
     *
     * @return string
     */
    public function getArpprodline()
    {
        return $this->container['arpprodline'];
    }

    /**
     * Sets arpprodline
     *
     * @param string $arpprodline arpprodline
     *
     * @return $this
     */
    public function setArpprodline($arpprodline)
    {
        $this->container['arpprodline'] = $arpprodline;

        return $this;
    }

    /**
     * Gets arpvendno
     *
     * @return double
     */
    public function getArpvendno()
    {
        return $this->container['arpvendno'];
    }

    /**
     * Sets arpvendno
     *
     * @param double $arpvendno arpvendno
     *
     * @return $this
     */
    public function setArpvendno($arpvendno)
    {
        $this->container['arpvendno'] = $arpvendno;

        return $this;
    }

    /**
     * Gets chrg
     *
     * @return string
     */
    public function getChrg()
    {
        return $this->container['chrg'];
    }

    /**
     * Sets chrg
     *
     * @param string $chrg chrg
     *
     * @return $this
     */
    public function setChrg($chrg)
    {
        $this->container['chrg'] = $chrg;

        return $this;
    }

    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets csunperstk
     *
     * @return double
     */
    public function getCsunperstk()
    {
        return $this->container['csunperstk'];
    }

    /**
     * Sets csunperstk
     *
     * @param double $csunperstk csunperstk
     *
     * @return $this
     */
    public function setCsunperstk($csunperstk)
    {
        $this->container['csunperstk'] = $csunperstk;

        return $this;
    }

    /**
     * Gets cubes
     *
     * @return double
     */
    public function getCubes()
    {
        return $this->container['cubes'];
    }

    /**
     * Sets cubes
     *
     * @param double $cubes cubes
     *
     * @return $this
     */
    public function setCubes($cubes)
    {
        $this->container['cubes'] = $cubes;

        return $this;
    }

    /**
     * Gets descrip
     *
     * @return string
     */
    public function getDescrip()
    {
        return $this->container['descrip'];
    }

    /**
     * Sets descrip
     *
     * @param string $descrip descrip
     *
     * @return $this
     */
    public function setDescrip($descrip)
    {
        $this->container['descrip'] = $descrip;

        return $this;
    }

    /**
     * Gets descrip2
     *
     * @return string
     */
    public function getDescrip2()
    {
        return $this->container['descrip2'];
    }

    /**
     * Sets descrip2
     *
     * @param string $descrip2 descrip2
     *
     * @return $this
     */
    public function setDescrip2($descrip2)
    {
        $this->container['descrip2'] = $descrip2;

        return $this;
    }

    /**
     * Gets discamt
     *
     * @return double
     */
    public function getDiscamt()
    {
        return $this->container['discamt'];
    }

    /**
     * Sets discamt
     *
     * @param double $discamt discamt
     *
     * @return $this
     */
    public function setDiscamt($discamt)
    {
        $this->container['discamt'] = $discamt;

        return $this;
    }

    /**
     * Gets discoverfl
     *
     * @return bool
     */
    public function getDiscoverfl()
    {
        return $this->container['discoverfl'];
    }

    /**
     * Sets discoverfl
     *
     * @param bool $discoverfl discoverfl
     *
     * @return $this
     */
    public function setDiscoverfl($discoverfl)
    {
        $this->container['discoverfl'] = $discoverfl;

        return $this;
    }

    /**
     * Gets dsplprod
     *
     * @return string
     */
    public function getDsplprod()
    {
        return $this->container['dsplprod'];
    }

    /**
     * Sets dsplprod
     *
     * @param string $dsplprod dsplprod
     *
     * @return $this
     */
    public function setDsplprod($dsplprod)
    {
        $this->container['dsplprod'] = $dsplprod;

        return $this;
    }

    /**
     * Gets extra_1
     *
     * @return string
     */
    public function getExtra1()
    {
        return $this->container['extra_1'];
    }

    /**
     * Sets extra_1
     *
     * @param string $extra_1 extra_1
     *
     * @return $this
     */
    public function setExtra1($extra_1)
    {
        $this->container['extra_1'] = $extra_1;

        return $this;
    }

    /**
     * Gets extra_2
     *
     * @return string
     */
    public function getExtra2()
    {
        return $this->container['extra_2'];
    }

    /**
     * Sets extra_2
     *
     * @param string $extra_2 extra_2
     *
     * @return $this
     */
    public function setExtra2($extra_2)
    {
        $this->container['extra_2'] = $extra_2;

        return $this;
    }

    /**
     * Gets icspecrecno
     *
     * @return int
     */
    public function getIcspecrecno()
    {
        return $this->container['icspecrecno'];
    }

    /**
     * Sets icspecrecno
     *
     * @param int $icspecrecno icspecrecno
     *
     * @return $this
     */
    public function setIcspecrecno($icspecrecno)
    {
        $this->container['icspecrecno'] = $icspecrecno;

        return $this;
    }

    /**
     * Gets keyindex
     *
     * @return string
     */
    public function getKeyindex()
    {
        return $this->container['keyindex'];
    }

    /**
     * Sets keyindex
     *
     * @param string $keyindex keyindex
     *
     * @return $this
     */
    public function setKeyindex($keyindex)
    {
        $this->container['keyindex'] = $keyindex;

        return $this;
    }

    /**
     * Gets lastprice
     *
     * @return double
     */
    public function getLastprice()
    {
        return $this->container['lastprice'];
    }

    /**
     * Sets lastprice
     *
     * @param double $lastprice lastprice
     *
     * @return $this
     */
    public function setLastprice($lastprice)
    {
        $this->container['lastprice'] = $lastprice;

        return $this;
    }

    /**
     * Gets lookupnm
     *
     * @return string
     */
    public function getLookupnm()
    {
        return $this->container['lookupnm'];
    }

    /**
     * Sets lookupnm
     *
     * @param string $lookupnm lookupnm
     *
     * @return $this
     */
    public function setLookupnm($lookupnm)
    {
        $this->container['lookupnm'] = $lookupnm;

        return $this;
    }

    /**
     * Gets marginamt
     *
     * @return double
     */
    public function getMarginamt()
    {
        return $this->container['marginamt'];
    }

    /**
     * Sets marginamt
     *
     * @param double $marginamt marginamt
     *
     * @return $this
     */
    public function setMarginamt($marginamt)
    {
        $this->container['marginamt'] = $marginamt;

        return $this;
    }

    /**
     * Gets netord
     *
     * @return double
     */
    public function getNetord()
    {
        return $this->container['netord'];
    }

    /**
     * Sets netord
     *
     * @param double $netord netord
     *
     * @return $this
     */
    public function setNetord($netord)
    {
        $this->container['netord'] = $netord;

        return $this;
    }

    /**
     * Gets netrecommend
     *
     * @return double
     */
    public function getNetrecommend()
    {
        return $this->container['netrecommend'];
    }

    /**
     * Sets netrecommend
     *
     * @param double $netrecommend netrecommend
     *
     * @return $this
     */
    public function setNetrecommend($netrecommend)
    {
        $this->container['netrecommend'] = $netrecommend;

        return $this;
    }

    /**
     * Gets notesfl
     *
     * @return string
     */
    public function getNotesfl()
    {
        return $this->container['notesfl'];
    }

    /**
     * Sets notesfl
     *
     * @param string $notesfl notesfl
     *
     * @return $this
     */
    public function setNotesfl($notesfl)
    {
        $this->container['notesfl'] = $notesfl;

        return $this;
    }

    /**
     * Gets oper2
     *
     * @return string
     */
    public function getOper2()
    {
        return $this->container['oper2'];
    }

    /**
     * Sets oper2
     *
     * @param string $oper2 oper2
     *
     * @return $this
     */
    public function setOper2($oper2)
    {
        $this->container['oper2'] = $oper2;

        return $this;
    }

    /**
     * Gets operinit
     *
     * @return string
     */
    public function getOperinit()
    {
        return $this->container['operinit'];
    }

    /**
     * Sets operinit
     *
     * @param string $operinit operinit
     *
     * @return $this
     */
    public function setOperinit($operinit)
    {
        $this->container['operinit'] = $operinit;

        return $this;
    }

    /**
     * Gets optionalwords
     *
     * @return string
     */
    public function getOptionalwords()
    {
        return $this->container['optionalwords'];
    }

    /**
     * Sets optionalwords
     *
     * @param string $optionalwords optionalwords
     *
     * @return $this
     */
    public function setOptionalwords($optionalwords)
    {
        $this->container['optionalwords'] = $optionalwords;

        return $this;
    }

    /**
     * Gets pdrecno
     *
     * @return int
     */
    public function getPdrecno()
    {
        return $this->container['pdrecno'];
    }

    /**
     * Sets pdrecno
     *
     * @param int $pdrecno pdrecno
     *
     * @return $this
     */
    public function setPdrecno($pdrecno)
    {
        $this->container['pdrecno'] = $pdrecno;

        return $this;
    }

    /**
     * Gets pdsvfl
     *
     * @return bool
     */
    public function getPdsvfl()
    {
        return $this->container['pdsvfl'];
    }

    /**
     * Sets pdsvfl
     *
     * @param bool $pdsvfl pdsvfl
     *
     * @return $this
     */
    public function setPdsvfl($pdsvfl)
    {
        $this->container['pdsvfl'] = $pdsvfl;

        return $this;
    }

    /**
     * Gets prccostper
     *
     * @return string
     */
    public function getPrccostper()
    {
        return $this->container['prccostper'];
    }

    /**
     * Sets prccostper
     *
     * @param string $prccostper prccostper
     *
     * @return $this
     */
    public function setPrccostper($prccostper)
    {
        $this->container['prccostper'] = $prccostper;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets priceoverfl
     *
     * @return bool
     */
    public function getPriceoverfl()
    {
        return $this->container['priceoverfl'];
    }

    /**
     * Sets priceoverfl
     *
     * @param bool $priceoverfl priceoverfl
     *
     * @return $this
     */
    public function setPriceoverfl($priceoverfl)
    {
        $this->container['priceoverfl'] = $priceoverfl;

        return $this;
    }

    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets prodcost
     *
     * @return double
     */
    public function getProdcost()
    {
        return $this->container['prodcost'];
    }

    /**
     * Sets prodcost
     *
     * @param double $prodcost prodcost
     *
     * @return $this
     */
    public function setProdcost($prodcost)
    {
        $this->container['prodcost'] = $prodcost;

        return $this;
    }

    /**
     * Gets qtyavail
     *
     * @return double
     */
    public function getQtyavail()
    {
        return $this->container['qtyavail'];
    }

    /**
     * Sets qtyavail
     *
     * @param double $qtyavail qtyavail
     *
     * @return $this
     */
    public function setQtyavail($qtyavail)
    {
        $this->container['qtyavail'] = $qtyavail;

        return $this;
    }

    /**
     * Gets qtybreakty
     *
     * @return string
     */
    public function getQtybreakty()
    {
        return $this->container['qtybreakty'];
    }

    /**
     * Sets qtybreakty
     *
     * @param string $qtybreakty qtybreakty
     *
     * @return $this
     */
    public function setQtybreakty($qtybreakty)
    {
        $this->container['qtybreakty'] = $qtybreakty;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets qtyrecommend
     *
     * @return double
     */
    public function getQtyrecommend()
    {
        return $this->container['qtyrecommend'];
    }

    /**
     * Sets qtyrecommend
     *
     * @param double $qtyrecommend qtyrecommend
     *
     * @return $this
     */
    public function setQtyrecommend($qtyrecommend)
    {
        $this->container['qtyrecommend'] = $qtyrecommend;

        return $this;
    }

    /**
     * Gets seasontype
     *
     * @return string
     */
    public function getSeasontype()
    {
        return $this->container['seasontype'];
    }

    /**
     * Sets seasontype
     *
     * @param string $seasontype seasontype
     *
     * @return $this
     */
    public function setSeasontype($seasontype)
    {
        $this->container['seasontype'] = $seasontype;

        return $this;
    }

    /**
     * Gets seqno
     *
     * @return int
     */
    public function getSeqno()
    {
        return $this->container['seqno'];
    }

    /**
     * Sets seqno
     *
     * @param int $seqno seqno
     *
     * @return $this
     */
    public function setSeqno($seqno)
    {
        $this->container['seqno'] = $seqno;

        return $this;
    }

    /**
     * Gets specconv
     *
     * @return double
     */
    public function getSpecconv()
    {
        return $this->container['specconv'];
    }

    /**
     * Sets specconv
     *
     * @param double $specconv specconv
     *
     * @return $this
     */
    public function setSpecconv($specconv)
    {
        $this->container['specconv'] = $specconv;

        return $this;
    }

    /**
     * Gets speccostty
     *
     * @return string
     */
    public function getSpeccostty()
    {
        return $this->container['speccostty'];
    }

    /**
     * Sets speccostty
     *
     * @param string $speccostty speccostty
     *
     * @return $this
     */
    public function setSpeccostty($speccostty)
    {
        $this->container['speccostty'] = $speccostty;

        return $this;
    }

    /**
     * Gets specsntype
     *
     * @return string
     */
    public function getSpecsntype()
    {
        return $this->container['specsntype'];
    }

    /**
     * Sets specsntype
     *
     * @param string $specsntype specsntype
     *
     * @return $this
     */
    public function setSpecsntype($specsntype)
    {
        $this->container['specsntype'] = $specsntype;

        return $this;
    }

    /**
     * Gets statmessage
     *
     * @return string
     */
    public function getStatmessage()
    {
        return $this->container['statmessage'];
    }

    /**
     * Sets statmessage
     *
     * @param string $statmessage statmessage
     *
     * @return $this
     */
    public function setStatmessage($statmessage)
    {
        $this->container['statmessage'] = $statmessage;

        return $this;
    }

    /**
     * Gets stkqtyord
     *
     * @return double
     */
    public function getStkqtyord()
    {
        return $this->container['stkqtyord'];
    }

    /**
     * Sets stkqtyord
     *
     * @param double $stkqtyord stkqtyord
     *
     * @return $this
     */
    public function setStkqtyord($stkqtyord)
    {
        $this->container['stkqtyord'] = $stkqtyord;

        return $this;
    }

    /**
     * Gets stkqtyrecommend
     *
     * @return double
     */
    public function getStkqtyrecommend()
    {
        return $this->container['stkqtyrecommend'];
    }

    /**
     * Sets stkqtyrecommend
     *
     * @param double $stkqtyrecommend stkqtyrecommend
     *
     * @return $this
     */
    public function setStkqtyrecommend($stkqtyrecommend)
    {
        $this->container['stkqtyrecommend'] = $stkqtyrecommend;

        return $this;
    }

    /**
     * Gets totalstkqty
     *
     * @return double
     */
    public function getTotalstkqty()
    {
        return $this->container['totalstkqty'];
    }

    /**
     * Sets totalstkqty
     *
     * @param double $totalstkqty totalstkqty
     *
     * @return $this
     */
    public function setTotalstkqty($totalstkqty)
    {
        $this->container['totalstkqty'] = $totalstkqty;

        return $this;
    }

    /**
     * Gets transdt
     *
     * @return \DateTime
     */
    public function getTransdt()
    {
        return $this->container['transdt'];
    }

    /**
     * Sets transdt
     *
     * @param \DateTime $transdt transdt
     *
     * @return $this
     */
    public function setTransdt($transdt)
    {
        $this->container['transdt'] = $transdt;

        return $this;
    }

    /**
     * Gets transrroc
     *
     * @return string
     */
    public function getTransrroc()
    {
        return $this->container['transrroc'];
    }

    /**
     * Sets transrroc
     *
     * @param string $transrroc transrroc
     *
     * @return $this
     */
    public function setTransrroc($transrroc)
    {
        $this->container['transrroc'] = $transrroc;

        return $this;
    }

    /**
     * Gets transtm
     *
     * @return string
     */
    public function getTranstm()
    {
        return $this->container['transtm'];
    }

    /**
     * Sets transtm
     *
     * @param string $transtm transtm
     *
     * @return $this
     */
    public function setTranstm($transtm)
    {
        $this->container['transtm'] = $transtm;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets unitconv
     *
     * @return double
     */
    public function getUnitconv()
    {
        return $this->container['unitconv'];
    }

    /**
     * Sets unitconv
     *
     * @param double $unitconv unitconv
     *
     * @return $this
     */
    public function setUnitconv($unitconv)
    {
        $this->container['unitconv'] = $unitconv;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return double
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param double $weight weight
     *
     * @return $this
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


