<?php
/**
 * TWtord
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TWtord Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TWtord implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-wtord';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'wtno' => 'int',
        'wtsuf' => 'int',
        'cono' => 'int',
        'cono2' => 'int',
        'duedt' => '\DateTime',
        'enterdt' => '\DateTime',
        'orderdt' => '\DateTime',
        'pickedby' => 'string',
        'printeddt' => '\DateTime',
        'receiptdt' => '\DateTime',
        'shipdt' => '\DateTime',
        'shipfmwhse' => 'string',
        'shiptowhse' => 'string',
        'shipviaty' => 'string',
        'shipviatydesc' => 'string',
        'stagecd' => 'int',
        'stagecdwords' => 'string',
        'totcubes' => 'double',
        'totlineamt' => 'double',
        'totordamt' => 'double',
        'totrcvamt' => 'double',
        'totshipamt' => 'double',
        'totweight' => 'double',
        'transtype' => 'string',
        'sortfld' => 'string',
        'shiptonm' => 'string',
        'shiptost' => 'string',
        'shiptozip' => 'string',
        'shiptoaddr1' => 'string',
        'shiptoaddr2' => 'string',
        'shiptocity' => 'string',
        'orderaltno' => 'int',
        'orderaltsuf' => 'int',
        'nolineitem' => 'int',
        'totqtyord' => 'double',
        'totqtyshp' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'wtno' => 'int64',
        'wtsuf' => 'int64',
        'cono' => 'int64',
        'cono2' => 'int64',
        'duedt' => 'date',
        'enterdt' => 'date',
        'orderdt' => 'date',
        'pickedby' => null,
        'printeddt' => 'date',
        'receiptdt' => 'date',
        'shipdt' => 'date',
        'shipfmwhse' => null,
        'shiptowhse' => null,
        'shipviaty' => null,
        'shipviatydesc' => null,
        'stagecd' => 'int64',
        'stagecdwords' => null,
        'totcubes' => 'double',
        'totlineamt' => 'double',
        'totordamt' => 'double',
        'totrcvamt' => 'double',
        'totshipamt' => 'double',
        'totweight' => 'double',
        'transtype' => null,
        'sortfld' => null,
        'shiptonm' => null,
        'shiptost' => null,
        'shiptozip' => null,
        'shiptoaddr1' => null,
        'shiptoaddr2' => null,
        'shiptocity' => null,
        'orderaltno' => 'int64',
        'orderaltsuf' => 'int64',
        'nolineitem' => 'int64',
        'totqtyord' => 'double',
        'totqtyshp' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'wtno' => 'wtno',
        'wtsuf' => 'wtsuf',
        'cono' => 'cono',
        'cono2' => 'cono2',
        'duedt' => 'duedt',
        'enterdt' => 'enterdt',
        'orderdt' => 'orderdt',
        'pickedby' => 'pickedby',
        'printeddt' => 'printeddt',
        'receiptdt' => 'receiptdt',
        'shipdt' => 'shipdt',
        'shipfmwhse' => 'shipfmwhse',
        'shiptowhse' => 'shiptowhse',
        'shipviaty' => 'shipviaty',
        'shipviatydesc' => 'shipviatydesc',
        'stagecd' => 'stagecd',
        'stagecdwords' => 'stagecdwords',
        'totcubes' => 'totcubes',
        'totlineamt' => 'totlineamt',
        'totordamt' => 'totordamt',
        'totrcvamt' => 'totrcvamt',
        'totshipamt' => 'totshipamt',
        'totweight' => 'totweight',
        'transtype' => 'transtype',
        'sortfld' => 'sortfld',
        'shiptonm' => 'shiptonm',
        'shiptost' => 'shiptost',
        'shiptozip' => 'shiptozip',
        'shiptoaddr1' => 'shiptoaddr1',
        'shiptoaddr2' => 'shiptoaddr2',
        'shiptocity' => 'shiptocity',
        'orderaltno' => 'orderaltno',
        'orderaltsuf' => 'orderaltsuf',
        'nolineitem' => 'nolineitem',
        'totqtyord' => 'totqtyord',
        'totqtyshp' => 'totqtyshp'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'wtno' => 'setWtno',
        'wtsuf' => 'setWtsuf',
        'cono' => 'setCono',
        'cono2' => 'setCono2',
        'duedt' => 'setDuedt',
        'enterdt' => 'setEnterdt',
        'orderdt' => 'setOrderdt',
        'pickedby' => 'setPickedby',
        'printeddt' => 'setPrinteddt',
        'receiptdt' => 'setReceiptdt',
        'shipdt' => 'setShipdt',
        'shipfmwhse' => 'setShipfmwhse',
        'shiptowhse' => 'setShiptowhse',
        'shipviaty' => 'setShipviaty',
        'shipviatydesc' => 'setShipviatydesc',
        'stagecd' => 'setStagecd',
        'stagecdwords' => 'setStagecdwords',
        'totcubes' => 'setTotcubes',
        'totlineamt' => 'setTotlineamt',
        'totordamt' => 'setTotordamt',
        'totrcvamt' => 'setTotrcvamt',
        'totshipamt' => 'setTotshipamt',
        'totweight' => 'setTotweight',
        'transtype' => 'setTranstype',
        'sortfld' => 'setSortfld',
        'shiptonm' => 'setShiptonm',
        'shiptost' => 'setShiptost',
        'shiptozip' => 'setShiptozip',
        'shiptoaddr1' => 'setShiptoaddr1',
        'shiptoaddr2' => 'setShiptoaddr2',
        'shiptocity' => 'setShiptocity',
        'orderaltno' => 'setOrderaltno',
        'orderaltsuf' => 'setOrderaltsuf',
        'nolineitem' => 'setNolineitem',
        'totqtyord' => 'setTotqtyord',
        'totqtyshp' => 'setTotqtyshp'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'wtno' => 'getWtno',
        'wtsuf' => 'getWtsuf',
        'cono' => 'getCono',
        'cono2' => 'getCono2',
        'duedt' => 'getDuedt',
        'enterdt' => 'getEnterdt',
        'orderdt' => 'getOrderdt',
        'pickedby' => 'getPickedby',
        'printeddt' => 'getPrinteddt',
        'receiptdt' => 'getReceiptdt',
        'shipdt' => 'getShipdt',
        'shipfmwhse' => 'getShipfmwhse',
        'shiptowhse' => 'getShiptowhse',
        'shipviaty' => 'getShipviaty',
        'shipviatydesc' => 'getShipviatydesc',
        'stagecd' => 'getStagecd',
        'stagecdwords' => 'getStagecdwords',
        'totcubes' => 'getTotcubes',
        'totlineamt' => 'getTotlineamt',
        'totordamt' => 'getTotordamt',
        'totrcvamt' => 'getTotrcvamt',
        'totshipamt' => 'getTotshipamt',
        'totweight' => 'getTotweight',
        'transtype' => 'getTranstype',
        'sortfld' => 'getSortfld',
        'shiptonm' => 'getShiptonm',
        'shiptost' => 'getShiptost',
        'shiptozip' => 'getShiptozip',
        'shiptoaddr1' => 'getShiptoaddr1',
        'shiptoaddr2' => 'getShiptoaddr2',
        'shiptocity' => 'getShiptocity',
        'orderaltno' => 'getOrderaltno',
        'orderaltsuf' => 'getOrderaltsuf',
        'nolineitem' => 'getNolineitem',
        'totqtyord' => 'getTotqtyord',
        'totqtyshp' => 'getTotqtyshp'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['wtno'] = isset($data['wtno']) ? $data['wtno'] : null;
        $this->container['wtsuf'] = isset($data['wtsuf']) ? $data['wtsuf'] : null;
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['cono2'] = isset($data['cono2']) ? $data['cono2'] : null;
        $this->container['duedt'] = isset($data['duedt']) ? $data['duedt'] : null;
        $this->container['enterdt'] = isset($data['enterdt']) ? $data['enterdt'] : null;
        $this->container['orderdt'] = isset($data['orderdt']) ? $data['orderdt'] : null;
        $this->container['pickedby'] = isset($data['pickedby']) ? $data['pickedby'] : null;
        $this->container['printeddt'] = isset($data['printeddt']) ? $data['printeddt'] : null;
        $this->container['receiptdt'] = isset($data['receiptdt']) ? $data['receiptdt'] : null;
        $this->container['shipdt'] = isset($data['shipdt']) ? $data['shipdt'] : null;
        $this->container['shipfmwhse'] = isset($data['shipfmwhse']) ? $data['shipfmwhse'] : null;
        $this->container['shiptowhse'] = isset($data['shiptowhse']) ? $data['shiptowhse'] : null;
        $this->container['shipviaty'] = isset($data['shipviaty']) ? $data['shipviaty'] : null;
        $this->container['shipviatydesc'] = isset($data['shipviatydesc']) ? $data['shipviatydesc'] : null;
        $this->container['stagecd'] = isset($data['stagecd']) ? $data['stagecd'] : null;
        $this->container['stagecdwords'] = isset($data['stagecdwords']) ? $data['stagecdwords'] : null;
        $this->container['totcubes'] = isset($data['totcubes']) ? $data['totcubes'] : null;
        $this->container['totlineamt'] = isset($data['totlineamt']) ? $data['totlineamt'] : null;
        $this->container['totordamt'] = isset($data['totordamt']) ? $data['totordamt'] : null;
        $this->container['totrcvamt'] = isset($data['totrcvamt']) ? $data['totrcvamt'] : null;
        $this->container['totshipamt'] = isset($data['totshipamt']) ? $data['totshipamt'] : null;
        $this->container['totweight'] = isset($data['totweight']) ? $data['totweight'] : null;
        $this->container['transtype'] = isset($data['transtype']) ? $data['transtype'] : null;
        $this->container['sortfld'] = isset($data['sortfld']) ? $data['sortfld'] : null;
        $this->container['shiptonm'] = isset($data['shiptonm']) ? $data['shiptonm'] : null;
        $this->container['shiptost'] = isset($data['shiptost']) ? $data['shiptost'] : null;
        $this->container['shiptozip'] = isset($data['shiptozip']) ? $data['shiptozip'] : null;
        $this->container['shiptoaddr1'] = isset($data['shiptoaddr1']) ? $data['shiptoaddr1'] : null;
        $this->container['shiptoaddr2'] = isset($data['shiptoaddr2']) ? $data['shiptoaddr2'] : null;
        $this->container['shiptocity'] = isset($data['shiptocity']) ? $data['shiptocity'] : null;
        $this->container['orderaltno'] = isset($data['orderaltno']) ? $data['orderaltno'] : null;
        $this->container['orderaltsuf'] = isset($data['orderaltsuf']) ? $data['orderaltsuf'] : null;
        $this->container['nolineitem'] = isset($data['nolineitem']) ? $data['nolineitem'] : null;
        $this->container['totqtyord'] = isset($data['totqtyord']) ? $data['totqtyord'] : null;
        $this->container['totqtyshp'] = isset($data['totqtyshp']) ? $data['totqtyshp'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets wtno
     *
     * @return int
     */
    public function getWtno()
    {
        return $this->container['wtno'];
    }

    /**
     * Sets wtno
     *
     * @param int $wtno wtno
     *
     * @return $this
     */
    public function setWtno($wtno)
    {
        $this->container['wtno'] = $wtno;

        return $this;
    }

    /**
     * Gets wtsuf
     *
     * @return int
     */
    public function getWtsuf()
    {
        return $this->container['wtsuf'];
    }

    /**
     * Sets wtsuf
     *
     * @param int $wtsuf wtsuf
     *
     * @return $this
     */
    public function setWtsuf($wtsuf)
    {
        $this->container['wtsuf'] = $wtsuf;

        return $this;
    }

    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets cono2
     *
     * @return int
     */
    public function getCono2()
    {
        return $this->container['cono2'];
    }

    /**
     * Sets cono2
     *
     * @param int $cono2 cono2
     *
     * @return $this
     */
    public function setCono2($cono2)
    {
        $this->container['cono2'] = $cono2;

        return $this;
    }

    /**
     * Gets duedt
     *
     * @return \DateTime
     */
    public function getDuedt()
    {
        return $this->container['duedt'];
    }

    /**
     * Sets duedt
     *
     * @param \DateTime $duedt duedt
     *
     * @return $this
     */
    public function setDuedt($duedt)
    {
        $this->container['duedt'] = $duedt;

        return $this;
    }

    /**
     * Gets enterdt
     *
     * @return \DateTime
     */
    public function getEnterdt()
    {
        return $this->container['enterdt'];
    }

    /**
     * Sets enterdt
     *
     * @param \DateTime $enterdt enterdt
     *
     * @return $this
     */
    public function setEnterdt($enterdt)
    {
        $this->container['enterdt'] = $enterdt;

        return $this;
    }

    /**
     * Gets orderdt
     *
     * @return \DateTime
     */
    public function getOrderdt()
    {
        return $this->container['orderdt'];
    }

    /**
     * Sets orderdt
     *
     * @param \DateTime $orderdt orderdt
     *
     * @return $this
     */
    public function setOrderdt($orderdt)
    {
        $this->container['orderdt'] = $orderdt;

        return $this;
    }

    /**
     * Gets pickedby
     *
     * @return string
     */
    public function getPickedby()
    {
        return $this->container['pickedby'];
    }

    /**
     * Sets pickedby
     *
     * @param string $pickedby pickedby
     *
     * @return $this
     */
    public function setPickedby($pickedby)
    {
        $this->container['pickedby'] = $pickedby;

        return $this;
    }

    /**
     * Gets printeddt
     *
     * @return \DateTime
     */
    public function getPrinteddt()
    {
        return $this->container['printeddt'];
    }

    /**
     * Sets printeddt
     *
     * @param \DateTime $printeddt printeddt
     *
     * @return $this
     */
    public function setPrinteddt($printeddt)
    {
        $this->container['printeddt'] = $printeddt;

        return $this;
    }

    /**
     * Gets receiptdt
     *
     * @return \DateTime
     */
    public function getReceiptdt()
    {
        return $this->container['receiptdt'];
    }

    /**
     * Sets receiptdt
     *
     * @param \DateTime $receiptdt receiptdt
     *
     * @return $this
     */
    public function setReceiptdt($receiptdt)
    {
        $this->container['receiptdt'] = $receiptdt;

        return $this;
    }

    /**
     * Gets shipdt
     *
     * @return \DateTime
     */
    public function getShipdt()
    {
        return $this->container['shipdt'];
    }

    /**
     * Sets shipdt
     *
     * @param \DateTime $shipdt shipdt
     *
     * @return $this
     */
    public function setShipdt($shipdt)
    {
        $this->container['shipdt'] = $shipdt;

        return $this;
    }

    /**
     * Gets shipfmwhse
     *
     * @return string
     */
    public function getShipfmwhse()
    {
        return $this->container['shipfmwhse'];
    }

    /**
     * Sets shipfmwhse
     *
     * @param string $shipfmwhse shipfmwhse
     *
     * @return $this
     */
    public function setShipfmwhse($shipfmwhse)
    {
        $this->container['shipfmwhse'] = $shipfmwhse;

        return $this;
    }

    /**
     * Gets shiptowhse
     *
     * @return string
     */
    public function getShiptowhse()
    {
        return $this->container['shiptowhse'];
    }

    /**
     * Sets shiptowhse
     *
     * @param string $shiptowhse shiptowhse
     *
     * @return $this
     */
    public function setShiptowhse($shiptowhse)
    {
        $this->container['shiptowhse'] = $shiptowhse;

        return $this;
    }

    /**
     * Gets shipviaty
     *
     * @return string
     */
    public function getShipviaty()
    {
        return $this->container['shipviaty'];
    }

    /**
     * Sets shipviaty
     *
     * @param string $shipviaty shipviaty
     *
     * @return $this
     */
    public function setShipviaty($shipviaty)
    {
        $this->container['shipviaty'] = $shipviaty;

        return $this;
    }

    /**
     * Gets shipviatydesc
     *
     * @return string
     */
    public function getShipviatydesc()
    {
        return $this->container['shipviatydesc'];
    }

    /**
     * Sets shipviatydesc
     *
     * @param string $shipviatydesc shipviatydesc
     *
     * @return $this
     */
    public function setShipviatydesc($shipviatydesc)
    {
        $this->container['shipviatydesc'] = $shipviatydesc;

        return $this;
    }

    /**
     * Gets stagecd
     *
     * @return int
     */
    public function getStagecd()
    {
        return $this->container['stagecd'];
    }

    /**
     * Sets stagecd
     *
     * @param int $stagecd stagecd
     *
     * @return $this
     */
    public function setStagecd($stagecd)
    {
        $this->container['stagecd'] = $stagecd;

        return $this;
    }

    /**
     * Gets stagecdwords
     *
     * @return string
     */
    public function getStagecdwords()
    {
        return $this->container['stagecdwords'];
    }

    /**
     * Sets stagecdwords
     *
     * @param string $stagecdwords stagecdwords
     *
     * @return $this
     */
    public function setStagecdwords($stagecdwords)
    {
        $this->container['stagecdwords'] = $stagecdwords;

        return $this;
    }

    /**
     * Gets totcubes
     *
     * @return double
     */
    public function getTotcubes()
    {
        return $this->container['totcubes'];
    }

    /**
     * Sets totcubes
     *
     * @param double $totcubes totcubes
     *
     * @return $this
     */
    public function setTotcubes($totcubes)
    {
        $this->container['totcubes'] = $totcubes;

        return $this;
    }

    /**
     * Gets totlineamt
     *
     * @return double
     */
    public function getTotlineamt()
    {
        return $this->container['totlineamt'];
    }

    /**
     * Sets totlineamt
     *
     * @param double $totlineamt totlineamt
     *
     * @return $this
     */
    public function setTotlineamt($totlineamt)
    {
        $this->container['totlineamt'] = $totlineamt;

        return $this;
    }

    /**
     * Gets totordamt
     *
     * @return double
     */
    public function getTotordamt()
    {
        return $this->container['totordamt'];
    }

    /**
     * Sets totordamt
     *
     * @param double $totordamt totordamt
     *
     * @return $this
     */
    public function setTotordamt($totordamt)
    {
        $this->container['totordamt'] = $totordamt;

        return $this;
    }

    /**
     * Gets totrcvamt
     *
     * @return double
     */
    public function getTotrcvamt()
    {
        return $this->container['totrcvamt'];
    }

    /**
     * Sets totrcvamt
     *
     * @param double $totrcvamt totrcvamt
     *
     * @return $this
     */
    public function setTotrcvamt($totrcvamt)
    {
        $this->container['totrcvamt'] = $totrcvamt;

        return $this;
    }

    /**
     * Gets totshipamt
     *
     * @return double
     */
    public function getTotshipamt()
    {
        return $this->container['totshipamt'];
    }

    /**
     * Sets totshipamt
     *
     * @param double $totshipamt totshipamt
     *
     * @return $this
     */
    public function setTotshipamt($totshipamt)
    {
        $this->container['totshipamt'] = $totshipamt;

        return $this;
    }

    /**
     * Gets totweight
     *
     * @return double
     */
    public function getTotweight()
    {
        return $this->container['totweight'];
    }

    /**
     * Sets totweight
     *
     * @param double $totweight totweight
     *
     * @return $this
     */
    public function setTotweight($totweight)
    {
        $this->container['totweight'] = $totweight;

        return $this;
    }

    /**
     * Gets transtype
     *
     * @return string
     */
    public function getTranstype()
    {
        return $this->container['transtype'];
    }

    /**
     * Sets transtype
     *
     * @param string $transtype transtype
     *
     * @return $this
     */
    public function setTranstype($transtype)
    {
        $this->container['transtype'] = $transtype;

        return $this;
    }

    /**
     * Gets sortfld
     *
     * @return string
     */
    public function getSortfld()
    {
        return $this->container['sortfld'];
    }

    /**
     * Sets sortfld
     *
     * @param string $sortfld sortfld
     *
     * @return $this
     */
    public function setSortfld($sortfld)
    {
        $this->container['sortfld'] = $sortfld;

        return $this;
    }

    /**
     * Gets shiptonm
     *
     * @return string
     */
    public function getShiptonm()
    {
        return $this->container['shiptonm'];
    }

    /**
     * Sets shiptonm
     *
     * @param string $shiptonm shiptonm
     *
     * @return $this
     */
    public function setShiptonm($shiptonm)
    {
        $this->container['shiptonm'] = $shiptonm;

        return $this;
    }

    /**
     * Gets shiptost
     *
     * @return string
     */
    public function getShiptost()
    {
        return $this->container['shiptost'];
    }

    /**
     * Sets shiptost
     *
     * @param string $shiptost shiptost
     *
     * @return $this
     */
    public function setShiptost($shiptost)
    {
        $this->container['shiptost'] = $shiptost;

        return $this;
    }

    /**
     * Gets shiptozip
     *
     * @return string
     */
    public function getShiptozip()
    {
        return $this->container['shiptozip'];
    }

    /**
     * Sets shiptozip
     *
     * @param string $shiptozip shiptozip
     *
     * @return $this
     */
    public function setShiptozip($shiptozip)
    {
        $this->container['shiptozip'] = $shiptozip;

        return $this;
    }

    /**
     * Gets shiptoaddr1
     *
     * @return string
     */
    public function getShiptoaddr1()
    {
        return $this->container['shiptoaddr1'];
    }

    /**
     * Sets shiptoaddr1
     *
     * @param string $shiptoaddr1 shiptoaddr1
     *
     * @return $this
     */
    public function setShiptoaddr1($shiptoaddr1)
    {
        $this->container['shiptoaddr1'] = $shiptoaddr1;

        return $this;
    }

    /**
     * Gets shiptoaddr2
     *
     * @return string
     */
    public function getShiptoaddr2()
    {
        return $this->container['shiptoaddr2'];
    }

    /**
     * Sets shiptoaddr2
     *
     * @param string $shiptoaddr2 shiptoaddr2
     *
     * @return $this
     */
    public function setShiptoaddr2($shiptoaddr2)
    {
        $this->container['shiptoaddr2'] = $shiptoaddr2;

        return $this;
    }

    /**
     * Gets shiptocity
     *
     * @return string
     */
    public function getShiptocity()
    {
        return $this->container['shiptocity'];
    }

    /**
     * Sets shiptocity
     *
     * @param string $shiptocity shiptocity
     *
     * @return $this
     */
    public function setShiptocity($shiptocity)
    {
        $this->container['shiptocity'] = $shiptocity;

        return $this;
    }

    /**
     * Gets orderaltno
     *
     * @return int
     */
    public function getOrderaltno()
    {
        return $this->container['orderaltno'];
    }

    /**
     * Sets orderaltno
     *
     * @param int $orderaltno orderaltno
     *
     * @return $this
     */
    public function setOrderaltno($orderaltno)
    {
        $this->container['orderaltno'] = $orderaltno;

        return $this;
    }

    /**
     * Gets orderaltsuf
     *
     * @return int
     */
    public function getOrderaltsuf()
    {
        return $this->container['orderaltsuf'];
    }

    /**
     * Sets orderaltsuf
     *
     * @param int $orderaltsuf orderaltsuf
     *
     * @return $this
     */
    public function setOrderaltsuf($orderaltsuf)
    {
        $this->container['orderaltsuf'] = $orderaltsuf;

        return $this;
    }

    /**
     * Gets nolineitem
     *
     * @return int
     */
    public function getNolineitem()
    {
        return $this->container['nolineitem'];
    }

    /**
     * Sets nolineitem
     *
     * @param int $nolineitem nolineitem
     *
     * @return $this
     */
    public function setNolineitem($nolineitem)
    {
        $this->container['nolineitem'] = $nolineitem;

        return $this;
    }

    /**
     * Gets totqtyord
     *
     * @return double
     */
    public function getTotqtyord()
    {
        return $this->container['totqtyord'];
    }

    /**
     * Sets totqtyord
     *
     * @param double $totqtyord totqtyord
     *
     * @return $this
     */
    public function setTotqtyord($totqtyord)
    {
        $this->container['totqtyord'] = $totqtyord;

        return $this;
    }

    /**
     * Gets totqtyshp
     *
     * @return double
     */
    public function getTotqtyshp()
    {
        return $this->container['totqtyshp'];
    }

    /**
     * Sets totqtyshp
     *
     * @param double $totqtyshp totqtyshp
     *
     * @return $this
     */
    public function setTotqtyshp($totqtyshp)
    {
        $this->container['totqtyshp'] = $totqtyshp;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


