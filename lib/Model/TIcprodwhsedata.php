<?php
/**
 * TIcprodwhsedata
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TIcprodwhsedata Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TIcprodwhsedata implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-icprodwhsedata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'prod' => 'string',
        'whse' => 'string',
        'statustype' => 'string',
        'nonstockty' => 'string',
        'serlottype' => 'string',
        'reservety' => 'string',
        'reservedays' => 'int',
        'pricetype' => 'string',
        'pricetypedesc' => 'string',
        'prodline' => 'string',
        'baseprice' => 'double',
        'listprice' => 'double',
        'arptype' => 'string',
        'arpvendno' => 'double',
        'arpwhse' => 'string',
        'binloc1' => 'string',
        'binloc2' => 'string',
        'leadtmavg' => 'int',
        'arppushfl' => 'bool',
        'bintype' => 'string',
        'boshortfl' => 'bool',
        'enterdt' => '\DateTime',
        'famgrptype' => 'string',
        'frtextra1' => 'double',
        'frtextra2' => 'double',
        'frtfreefl' => 'bool',
        'lastpowtdt' => '\DateTime',
        'vendprod' => 'string',
        'lastupdate' => 'string',
        'acquiredt' => '\DateTime',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'prod' => null,
        'whse' => null,
        'statustype' => null,
        'nonstockty' => null,
        'serlottype' => null,
        'reservety' => null,
        'reservedays' => 'int64',
        'pricetype' => null,
        'pricetypedesc' => null,
        'prodline' => null,
        'baseprice' => 'double',
        'listprice' => 'double',
        'arptype' => null,
        'arpvendno' => 'double',
        'arpwhse' => null,
        'binloc1' => null,
        'binloc2' => null,
        'leadtmavg' => 'int64',
        'arppushfl' => null,
        'bintype' => null,
        'boshortfl' => null,
        'enterdt' => 'date',
        'famgrptype' => null,
        'frtextra1' => 'double',
        'frtextra2' => 'double',
        'frtfreefl' => null,
        'lastpowtdt' => 'date',
        'vendprod' => null,
        'lastupdate' => null,
        'acquiredt' => 'date',
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'prod' => 'prod',
        'whse' => 'whse',
        'statustype' => 'statustype',
        'nonstockty' => 'nonstockty',
        'serlottype' => 'serlottype',
        'reservety' => 'reservety',
        'reservedays' => 'reservedays',
        'pricetype' => 'pricetype',
        'pricetypedesc' => 'pricetypedesc',
        'prodline' => 'prodline',
        'baseprice' => 'baseprice',
        'listprice' => 'listprice',
        'arptype' => 'arptype',
        'arpvendno' => 'arpvendno',
        'arpwhse' => 'arpwhse',
        'binloc1' => 'binloc1',
        'binloc2' => 'binloc2',
        'leadtmavg' => 'leadtmavg',
        'arppushfl' => 'arppushfl',
        'bintype' => 'bintype',
        'boshortfl' => 'boshortfl',
        'enterdt' => 'enterdt',
        'famgrptype' => 'famgrptype',
        'frtextra1' => 'frtextra1',
        'frtextra2' => 'frtextra2',
        'frtfreefl' => 'frtfreefl',
        'lastpowtdt' => 'lastpowtdt',
        'vendprod' => 'vendprod',
        'lastupdate' => 'lastupdate',
        'acquiredt' => 'acquiredt',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'prod' => 'setProd',
        'whse' => 'setWhse',
        'statustype' => 'setStatustype',
        'nonstockty' => 'setNonstockty',
        'serlottype' => 'setSerlottype',
        'reservety' => 'setReservety',
        'reservedays' => 'setReservedays',
        'pricetype' => 'setPricetype',
        'pricetypedesc' => 'setPricetypedesc',
        'prodline' => 'setProdline',
        'baseprice' => 'setBaseprice',
        'listprice' => 'setListprice',
        'arptype' => 'setArptype',
        'arpvendno' => 'setArpvendno',
        'arpwhse' => 'setArpwhse',
        'binloc1' => 'setBinloc1',
        'binloc2' => 'setBinloc2',
        'leadtmavg' => 'setLeadtmavg',
        'arppushfl' => 'setArppushfl',
        'bintype' => 'setBintype',
        'boshortfl' => 'setBoshortfl',
        'enterdt' => 'setEnterdt',
        'famgrptype' => 'setFamgrptype',
        'frtextra1' => 'setFrtextra1',
        'frtextra2' => 'setFrtextra2',
        'frtfreefl' => 'setFrtfreefl',
        'lastpowtdt' => 'setLastpowtdt',
        'vendprod' => 'setVendprod',
        'lastupdate' => 'setLastupdate',
        'acquiredt' => 'setAcquiredt',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'prod' => 'getProd',
        'whse' => 'getWhse',
        'statustype' => 'getStatustype',
        'nonstockty' => 'getNonstockty',
        'serlottype' => 'getSerlottype',
        'reservety' => 'getReservety',
        'reservedays' => 'getReservedays',
        'pricetype' => 'getPricetype',
        'pricetypedesc' => 'getPricetypedesc',
        'prodline' => 'getProdline',
        'baseprice' => 'getBaseprice',
        'listprice' => 'getListprice',
        'arptype' => 'getArptype',
        'arpvendno' => 'getArpvendno',
        'arpwhse' => 'getArpwhse',
        'binloc1' => 'getBinloc1',
        'binloc2' => 'getBinloc2',
        'leadtmavg' => 'getLeadtmavg',
        'arppushfl' => 'getArppushfl',
        'bintype' => 'getBintype',
        'boshortfl' => 'getBoshortfl',
        'enterdt' => 'getEnterdt',
        'famgrptype' => 'getFamgrptype',
        'frtextra1' => 'getFrtextra1',
        'frtextra2' => 'getFrtextra2',
        'frtfreefl' => 'getFrtfreefl',
        'lastpowtdt' => 'getLastpowtdt',
        'vendprod' => 'getVendprod',
        'lastupdate' => 'getLastupdate',
        'acquiredt' => 'getAcquiredt',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['statustype'] = isset($data['statustype']) ? $data['statustype'] : null;
        $this->container['nonstockty'] = isset($data['nonstockty']) ? $data['nonstockty'] : null;
        $this->container['serlottype'] = isset($data['serlottype']) ? $data['serlottype'] : null;
        $this->container['reservety'] = isset($data['reservety']) ? $data['reservety'] : null;
        $this->container['reservedays'] = isset($data['reservedays']) ? $data['reservedays'] : null;
        $this->container['pricetype'] = isset($data['pricetype']) ? $data['pricetype'] : null;
        $this->container['pricetypedesc'] = isset($data['pricetypedesc']) ? $data['pricetypedesc'] : null;
        $this->container['prodline'] = isset($data['prodline']) ? $data['prodline'] : null;
        $this->container['baseprice'] = isset($data['baseprice']) ? $data['baseprice'] : null;
        $this->container['listprice'] = isset($data['listprice']) ? $data['listprice'] : null;
        $this->container['arptype'] = isset($data['arptype']) ? $data['arptype'] : null;
        $this->container['arpvendno'] = isset($data['arpvendno']) ? $data['arpvendno'] : null;
        $this->container['arpwhse'] = isset($data['arpwhse']) ? $data['arpwhse'] : null;
        $this->container['binloc1'] = isset($data['binloc1']) ? $data['binloc1'] : null;
        $this->container['binloc2'] = isset($data['binloc2']) ? $data['binloc2'] : null;
        $this->container['leadtmavg'] = isset($data['leadtmavg']) ? $data['leadtmavg'] : null;
        $this->container['arppushfl'] = isset($data['arppushfl']) ? $data['arppushfl'] : null;
        $this->container['bintype'] = isset($data['bintype']) ? $data['bintype'] : null;
        $this->container['boshortfl'] = isset($data['boshortfl']) ? $data['boshortfl'] : null;
        $this->container['enterdt'] = isset($data['enterdt']) ? $data['enterdt'] : null;
        $this->container['famgrptype'] = isset($data['famgrptype']) ? $data['famgrptype'] : null;
        $this->container['frtextra1'] = isset($data['frtextra1']) ? $data['frtextra1'] : null;
        $this->container['frtextra2'] = isset($data['frtextra2']) ? $data['frtextra2'] : null;
        $this->container['frtfreefl'] = isset($data['frtfreefl']) ? $data['frtfreefl'] : null;
        $this->container['lastpowtdt'] = isset($data['lastpowtdt']) ? $data['lastpowtdt'] : null;
        $this->container['vendprod'] = isset($data['vendprod']) ? $data['vendprod'] : null;
        $this->container['lastupdate'] = isset($data['lastupdate']) ? $data['lastupdate'] : null;
        $this->container['acquiredt'] = isset($data['acquiredt']) ? $data['acquiredt'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets statustype
     *
     * @return string
     */
    public function getStatustype()
    {
        return $this->container['statustype'];
    }

    /**
     * Sets statustype
     *
     * @param string $statustype statustype
     *
     * @return $this
     */
    public function setStatustype($statustype)
    {
        $this->container['statustype'] = $statustype;

        return $this;
    }

    /**
     * Gets nonstockty
     *
     * @return string
     */
    public function getNonstockty()
    {
        return $this->container['nonstockty'];
    }

    /**
     * Sets nonstockty
     *
     * @param string $nonstockty nonstockty
     *
     * @return $this
     */
    public function setNonstockty($nonstockty)
    {
        $this->container['nonstockty'] = $nonstockty;

        return $this;
    }

    /**
     * Gets serlottype
     *
     * @return string
     */
    public function getSerlottype()
    {
        return $this->container['serlottype'];
    }

    /**
     * Sets serlottype
     *
     * @param string $serlottype serlottype
     *
     * @return $this
     */
    public function setSerlottype($serlottype)
    {
        $this->container['serlottype'] = $serlottype;

        return $this;
    }

    /**
     * Gets reservety
     *
     * @return string
     */
    public function getReservety()
    {
        return $this->container['reservety'];
    }

    /**
     * Sets reservety
     *
     * @param string $reservety reservety
     *
     * @return $this
     */
    public function setReservety($reservety)
    {
        $this->container['reservety'] = $reservety;

        return $this;
    }

    /**
     * Gets reservedays
     *
     * @return int
     */
    public function getReservedays()
    {
        return $this->container['reservedays'];
    }

    /**
     * Sets reservedays
     *
     * @param int $reservedays reservedays
     *
     * @return $this
     */
    public function setReservedays($reservedays)
    {
        $this->container['reservedays'] = $reservedays;

        return $this;
    }

    /**
     * Gets pricetype
     *
     * @return string
     */
    public function getPricetype()
    {
        return $this->container['pricetype'];
    }

    /**
     * Sets pricetype
     *
     * @param string $pricetype pricetype
     *
     * @return $this
     */
    public function setPricetype($pricetype)
    {
        $this->container['pricetype'] = $pricetype;

        return $this;
    }

    /**
     * Gets pricetypedesc
     *
     * @return string
     */
    public function getPricetypedesc()
    {
        return $this->container['pricetypedesc'];
    }

    /**
     * Sets pricetypedesc
     *
     * @param string $pricetypedesc pricetypedesc
     *
     * @return $this
     */
    public function setPricetypedesc($pricetypedesc)
    {
        $this->container['pricetypedesc'] = $pricetypedesc;

        return $this;
    }

    /**
     * Gets prodline
     *
     * @return string
     */
    public function getProdline()
    {
        return $this->container['prodline'];
    }

    /**
     * Sets prodline
     *
     * @param string $prodline prodline
     *
     * @return $this
     */
    public function setProdline($prodline)
    {
        $this->container['prodline'] = $prodline;

        return $this;
    }

    /**
     * Gets baseprice
     *
     * @return double
     */
    public function getBaseprice()
    {
        return $this->container['baseprice'];
    }

    /**
     * Sets baseprice
     *
     * @param double $baseprice baseprice
     *
     * @return $this
     */
    public function setBaseprice($baseprice)
    {
        $this->container['baseprice'] = $baseprice;

        return $this;
    }

    /**
     * Gets listprice
     *
     * @return double
     */
    public function getListprice()
    {
        return $this->container['listprice'];
    }

    /**
     * Sets listprice
     *
     * @param double $listprice listprice
     *
     * @return $this
     */
    public function setListprice($listprice)
    {
        $this->container['listprice'] = $listprice;

        return $this;
    }

    /**
     * Gets arptype
     *
     * @return string
     */
    public function getArptype()
    {
        return $this->container['arptype'];
    }

    /**
     * Sets arptype
     *
     * @param string $arptype arptype
     *
     * @return $this
     */
    public function setArptype($arptype)
    {
        $this->container['arptype'] = $arptype;

        return $this;
    }

    /**
     * Gets arpvendno
     *
     * @return double
     */
    public function getArpvendno()
    {
        return $this->container['arpvendno'];
    }

    /**
     * Sets arpvendno
     *
     * @param double $arpvendno arpvendno
     *
     * @return $this
     */
    public function setArpvendno($arpvendno)
    {
        $this->container['arpvendno'] = $arpvendno;

        return $this;
    }

    /**
     * Gets arpwhse
     *
     * @return string
     */
    public function getArpwhse()
    {
        return $this->container['arpwhse'];
    }

    /**
     * Sets arpwhse
     *
     * @param string $arpwhse arpwhse
     *
     * @return $this
     */
    public function setArpwhse($arpwhse)
    {
        $this->container['arpwhse'] = $arpwhse;

        return $this;
    }

    /**
     * Gets binloc1
     *
     * @return string
     */
    public function getBinloc1()
    {
        return $this->container['binloc1'];
    }

    /**
     * Sets binloc1
     *
     * @param string $binloc1 binloc1
     *
     * @return $this
     */
    public function setBinloc1($binloc1)
    {
        $this->container['binloc1'] = $binloc1;

        return $this;
    }

    /**
     * Gets binloc2
     *
     * @return string
     */
    public function getBinloc2()
    {
        return $this->container['binloc2'];
    }

    /**
     * Sets binloc2
     *
     * @param string $binloc2 binloc2
     *
     * @return $this
     */
    public function setBinloc2($binloc2)
    {
        $this->container['binloc2'] = $binloc2;

        return $this;
    }

    /**
     * Gets leadtmavg
     *
     * @return int
     */
    public function getLeadtmavg()
    {
        return $this->container['leadtmavg'];
    }

    /**
     * Sets leadtmavg
     *
     * @param int $leadtmavg leadtmavg
     *
     * @return $this
     */
    public function setLeadtmavg($leadtmavg)
    {
        $this->container['leadtmavg'] = $leadtmavg;

        return $this;
    }

    /**
     * Gets arppushfl
     *
     * @return bool
     */
    public function getArppushfl()
    {
        return $this->container['arppushfl'];
    }

    /**
     * Sets arppushfl
     *
     * @param bool $arppushfl arppushfl
     *
     * @return $this
     */
    public function setArppushfl($arppushfl)
    {
        $this->container['arppushfl'] = $arppushfl;

        return $this;
    }

    /**
     * Gets bintype
     *
     * @return string
     */
    public function getBintype()
    {
        return $this->container['bintype'];
    }

    /**
     * Sets bintype
     *
     * @param string $bintype bintype
     *
     * @return $this
     */
    public function setBintype($bintype)
    {
        $this->container['bintype'] = $bintype;

        return $this;
    }

    /**
     * Gets boshortfl
     *
     * @return bool
     */
    public function getBoshortfl()
    {
        return $this->container['boshortfl'];
    }

    /**
     * Sets boshortfl
     *
     * @param bool $boshortfl boshortfl
     *
     * @return $this
     */
    public function setBoshortfl($boshortfl)
    {
        $this->container['boshortfl'] = $boshortfl;

        return $this;
    }

    /**
     * Gets enterdt
     *
     * @return \DateTime
     */
    public function getEnterdt()
    {
        return $this->container['enterdt'];
    }

    /**
     * Sets enterdt
     *
     * @param \DateTime $enterdt enterdt
     *
     * @return $this
     */
    public function setEnterdt($enterdt)
    {
        $this->container['enterdt'] = $enterdt;

        return $this;
    }

    /**
     * Gets famgrptype
     *
     * @return string
     */
    public function getFamgrptype()
    {
        return $this->container['famgrptype'];
    }

    /**
     * Sets famgrptype
     *
     * @param string $famgrptype famgrptype
     *
     * @return $this
     */
    public function setFamgrptype($famgrptype)
    {
        $this->container['famgrptype'] = $famgrptype;

        return $this;
    }

    /**
     * Gets frtextra1
     *
     * @return double
     */
    public function getFrtextra1()
    {
        return $this->container['frtextra1'];
    }

    /**
     * Sets frtextra1
     *
     * @param double $frtextra1 frtextra1
     *
     * @return $this
     */
    public function setFrtextra1($frtextra1)
    {
        $this->container['frtextra1'] = $frtextra1;

        return $this;
    }

    /**
     * Gets frtextra2
     *
     * @return double
     */
    public function getFrtextra2()
    {
        return $this->container['frtextra2'];
    }

    /**
     * Sets frtextra2
     *
     * @param double $frtextra2 frtextra2
     *
     * @return $this
     */
    public function setFrtextra2($frtextra2)
    {
        $this->container['frtextra2'] = $frtextra2;

        return $this;
    }

    /**
     * Gets frtfreefl
     *
     * @return bool
     */
    public function getFrtfreefl()
    {
        return $this->container['frtfreefl'];
    }

    /**
     * Sets frtfreefl
     *
     * @param bool $frtfreefl frtfreefl
     *
     * @return $this
     */
    public function setFrtfreefl($frtfreefl)
    {
        $this->container['frtfreefl'] = $frtfreefl;

        return $this;
    }

    /**
     * Gets lastpowtdt
     *
     * @return \DateTime
     */
    public function getLastpowtdt()
    {
        return $this->container['lastpowtdt'];
    }

    /**
     * Sets lastpowtdt
     *
     * @param \DateTime $lastpowtdt lastpowtdt
     *
     * @return $this
     */
    public function setLastpowtdt($lastpowtdt)
    {
        $this->container['lastpowtdt'] = $lastpowtdt;

        return $this;
    }

    /**
     * Gets vendprod
     *
     * @return string
     */
    public function getVendprod()
    {
        return $this->container['vendprod'];
    }

    /**
     * Sets vendprod
     *
     * @param string $vendprod vendprod
     *
     * @return $this
     */
    public function setVendprod($vendprod)
    {
        $this->container['vendprod'] = $vendprod;

        return $this;
    }

    /**
     * Gets lastupdate
     *
     * @return string
     */
    public function getLastupdate()
    {
        return $this->container['lastupdate'];
    }

    /**
     * Sets lastupdate
     *
     * @param string $lastupdate lastupdate
     *
     * @return $this
     */
    public function setLastupdate($lastupdate)
    {
        $this->container['lastupdate'] = $lastupdate;

        return $this;
    }

    /**
     * Gets acquiredt
     *
     * @return \DateTime
     */
    public function getAcquiredt()
    {
        return $this->container['acquiredt'];
    }

    /**
     * Sets acquiredt
     *
     * @param \DateTime $acquiredt acquiredt
     *
     * @return $this
     */
    public function setAcquiredt($acquiredt)
    {
        $this->container['acquiredt'] = $acquiredt;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


