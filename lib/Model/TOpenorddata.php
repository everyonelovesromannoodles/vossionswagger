<?php
/**
 * TOpenorddata
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TOpenorddata Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TOpenorddata implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-openorddata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cono' => 'int',
        'custno' => 'double',
        'orderno' => 'string',
        'ordersuf' => 'string',
        'lineno' => 'int',
        'seqno' => 'int',
        'prod' => 'string',
        'proddesc1' => 'string',
        'proddesc2' => 'string',
        'qtyord' => 'double',
        'qtyship' => 'double',
        'qtybo' => 'double',
        'uom' => 'string',
        'cust_uom' => 'string',
        'price_uom' => 'string',
        'custprice_uom' => 'string',
        'listprice' => 'double',
        'saleprice' => 'double',
        'totlineamt' => 'double',
        'custpo' => 'string',
        'duedt' => '\DateTime',
        'orgprod' => 'string',
        'entseqno' => 'int',
        'whse' => 'string',
        'ordstatcd' => 'string',
        'reqshpdt' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cono' => 'int64',
        'custno' => 'double',
        'orderno' => null,
        'ordersuf' => null,
        'lineno' => 'int64',
        'seqno' => 'int64',
        'prod' => null,
        'proddesc1' => null,
        'proddesc2' => null,
        'qtyord' => 'double',
        'qtyship' => 'double',
        'qtybo' => 'double',
        'uom' => null,
        'cust_uom' => null,
        'price_uom' => null,
        'custprice_uom' => null,
        'listprice' => 'double',
        'saleprice' => 'double',
        'totlineamt' => 'double',
        'custpo' => null,
        'duedt' => 'date',
        'orgprod' => null,
        'entseqno' => 'int64',
        'whse' => null,
        'ordstatcd' => null,
        'reqshpdt' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cono' => 'cono',
        'custno' => 'custno',
        'orderno' => 'orderno',
        'ordersuf' => 'ordersuf',
        'lineno' => 'lineno',
        'seqno' => 'seqno',
        'prod' => 'prod',
        'proddesc1' => 'proddesc1',
        'proddesc2' => 'proddesc2',
        'qtyord' => 'qtyord',
        'qtyship' => 'qtyship',
        'qtybo' => 'qtybo',
        'uom' => 'UOM',
        'cust_uom' => 'custUOM',
        'price_uom' => 'priceUOM',
        'custprice_uom' => 'custpriceUOM',
        'listprice' => 'listprice',
        'saleprice' => 'saleprice',
        'totlineamt' => 'totlineamt',
        'custpo' => 'custpo',
        'duedt' => 'duedt',
        'orgprod' => 'orgprod',
        'entseqno' => 'entseqno',
        'whse' => 'whse',
        'ordstatcd' => 'ordstatcd',
        'reqshpdt' => 'reqshpdt'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cono' => 'setCono',
        'custno' => 'setCustno',
        'orderno' => 'setOrderno',
        'ordersuf' => 'setOrdersuf',
        'lineno' => 'setLineno',
        'seqno' => 'setSeqno',
        'prod' => 'setProd',
        'proddesc1' => 'setProddesc1',
        'proddesc2' => 'setProddesc2',
        'qtyord' => 'setQtyord',
        'qtyship' => 'setQtyship',
        'qtybo' => 'setQtybo',
        'uom' => 'setUom',
        'cust_uom' => 'setCustUom',
        'price_uom' => 'setPriceUom',
        'custprice_uom' => 'setCustpriceUom',
        'listprice' => 'setListprice',
        'saleprice' => 'setSaleprice',
        'totlineamt' => 'setTotlineamt',
        'custpo' => 'setCustpo',
        'duedt' => 'setDuedt',
        'orgprod' => 'setOrgprod',
        'entseqno' => 'setEntseqno',
        'whse' => 'setWhse',
        'ordstatcd' => 'setOrdstatcd',
        'reqshpdt' => 'setReqshpdt'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cono' => 'getCono',
        'custno' => 'getCustno',
        'orderno' => 'getOrderno',
        'ordersuf' => 'getOrdersuf',
        'lineno' => 'getLineno',
        'seqno' => 'getSeqno',
        'prod' => 'getProd',
        'proddesc1' => 'getProddesc1',
        'proddesc2' => 'getProddesc2',
        'qtyord' => 'getQtyord',
        'qtyship' => 'getQtyship',
        'qtybo' => 'getQtybo',
        'uom' => 'getUom',
        'cust_uom' => 'getCustUom',
        'price_uom' => 'getPriceUom',
        'custprice_uom' => 'getCustpriceUom',
        'listprice' => 'getListprice',
        'saleprice' => 'getSaleprice',
        'totlineamt' => 'getTotlineamt',
        'custpo' => 'getCustpo',
        'duedt' => 'getDuedt',
        'orgprod' => 'getOrgprod',
        'entseqno' => 'getEntseqno',
        'whse' => 'getWhse',
        'ordstatcd' => 'getOrdstatcd',
        'reqshpdt' => 'getReqshpdt'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['custno'] = isset($data['custno']) ? $data['custno'] : null;
        $this->container['orderno'] = isset($data['orderno']) ? $data['orderno'] : null;
        $this->container['ordersuf'] = isset($data['ordersuf']) ? $data['ordersuf'] : null;
        $this->container['lineno'] = isset($data['lineno']) ? $data['lineno'] : null;
        $this->container['seqno'] = isset($data['seqno']) ? $data['seqno'] : null;
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['proddesc1'] = isset($data['proddesc1']) ? $data['proddesc1'] : null;
        $this->container['proddesc2'] = isset($data['proddesc2']) ? $data['proddesc2'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['qtyship'] = isset($data['qtyship']) ? $data['qtyship'] : null;
        $this->container['qtybo'] = isset($data['qtybo']) ? $data['qtybo'] : null;
        $this->container['uom'] = isset($data['uom']) ? $data['uom'] : null;
        $this->container['cust_uom'] = isset($data['cust_uom']) ? $data['cust_uom'] : null;
        $this->container['price_uom'] = isset($data['price_uom']) ? $data['price_uom'] : null;
        $this->container['custprice_uom'] = isset($data['custprice_uom']) ? $data['custprice_uom'] : null;
        $this->container['listprice'] = isset($data['listprice']) ? $data['listprice'] : null;
        $this->container['saleprice'] = isset($data['saleprice']) ? $data['saleprice'] : null;
        $this->container['totlineamt'] = isset($data['totlineamt']) ? $data['totlineamt'] : null;
        $this->container['custpo'] = isset($data['custpo']) ? $data['custpo'] : null;
        $this->container['duedt'] = isset($data['duedt']) ? $data['duedt'] : null;
        $this->container['orgprod'] = isset($data['orgprod']) ? $data['orgprod'] : null;
        $this->container['entseqno'] = isset($data['entseqno']) ? $data['entseqno'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['ordstatcd'] = isset($data['ordstatcd']) ? $data['ordstatcd'] : null;
        $this->container['reqshpdt'] = isset($data['reqshpdt']) ? $data['reqshpdt'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets custno
     *
     * @return double
     */
    public function getCustno()
    {
        return $this->container['custno'];
    }

    /**
     * Sets custno
     *
     * @param double $custno custno
     *
     * @return $this
     */
    public function setCustno($custno)
    {
        $this->container['custno'] = $custno;

        return $this;
    }

    /**
     * Gets orderno
     *
     * @return string
     */
    public function getOrderno()
    {
        return $this->container['orderno'];
    }

    /**
     * Sets orderno
     *
     * @param string $orderno orderno
     *
     * @return $this
     */
    public function setOrderno($orderno)
    {
        $this->container['orderno'] = $orderno;

        return $this;
    }

    /**
     * Gets ordersuf
     *
     * @return string
     */
    public function getOrdersuf()
    {
        return $this->container['ordersuf'];
    }

    /**
     * Sets ordersuf
     *
     * @param string $ordersuf ordersuf
     *
     * @return $this
     */
    public function setOrdersuf($ordersuf)
    {
        $this->container['ordersuf'] = $ordersuf;

        return $this;
    }

    /**
     * Gets lineno
     *
     * @return int
     */
    public function getLineno()
    {
        return $this->container['lineno'];
    }

    /**
     * Sets lineno
     *
     * @param int $lineno lineno
     *
     * @return $this
     */
    public function setLineno($lineno)
    {
        $this->container['lineno'] = $lineno;

        return $this;
    }

    /**
     * Gets seqno
     *
     * @return int
     */
    public function getSeqno()
    {
        return $this->container['seqno'];
    }

    /**
     * Sets seqno
     *
     * @param int $seqno seqno
     *
     * @return $this
     */
    public function setSeqno($seqno)
    {
        $this->container['seqno'] = $seqno;

        return $this;
    }

    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets proddesc1
     *
     * @return string
     */
    public function getProddesc1()
    {
        return $this->container['proddesc1'];
    }

    /**
     * Sets proddesc1
     *
     * @param string $proddesc1 proddesc1
     *
     * @return $this
     */
    public function setProddesc1($proddesc1)
    {
        $this->container['proddesc1'] = $proddesc1;

        return $this;
    }

    /**
     * Gets proddesc2
     *
     * @return string
     */
    public function getProddesc2()
    {
        return $this->container['proddesc2'];
    }

    /**
     * Sets proddesc2
     *
     * @param string $proddesc2 proddesc2
     *
     * @return $this
     */
    public function setProddesc2($proddesc2)
    {
        $this->container['proddesc2'] = $proddesc2;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets qtyship
     *
     * @return double
     */
    public function getQtyship()
    {
        return $this->container['qtyship'];
    }

    /**
     * Sets qtyship
     *
     * @param double $qtyship qtyship
     *
     * @return $this
     */
    public function setQtyship($qtyship)
    {
        $this->container['qtyship'] = $qtyship;

        return $this;
    }

    /**
     * Gets qtybo
     *
     * @return double
     */
    public function getQtybo()
    {
        return $this->container['qtybo'];
    }

    /**
     * Sets qtybo
     *
     * @param double $qtybo qtybo
     *
     * @return $this
     */
    public function setQtybo($qtybo)
    {
        $this->container['qtybo'] = $qtybo;

        return $this;
    }

    /**
     * Gets uom
     *
     * @return string
     */
    public function getUom()
    {
        return $this->container['uom'];
    }

    /**
     * Sets uom
     *
     * @param string $uom uom
     *
     * @return $this
     */
    public function setUom($uom)
    {
        $this->container['uom'] = $uom;

        return $this;
    }

    /**
     * Gets cust_uom
     *
     * @return string
     */
    public function getCustUom()
    {
        return $this->container['cust_uom'];
    }

    /**
     * Sets cust_uom
     *
     * @param string $cust_uom cust_uom
     *
     * @return $this
     */
    public function setCustUom($cust_uom)
    {
        $this->container['cust_uom'] = $cust_uom;

        return $this;
    }

    /**
     * Gets price_uom
     *
     * @return string
     */
    public function getPriceUom()
    {
        return $this->container['price_uom'];
    }

    /**
     * Sets price_uom
     *
     * @param string $price_uom price_uom
     *
     * @return $this
     */
    public function setPriceUom($price_uom)
    {
        $this->container['price_uom'] = $price_uom;

        return $this;
    }

    /**
     * Gets custprice_uom
     *
     * @return string
     */
    public function getCustpriceUom()
    {
        return $this->container['custprice_uom'];
    }

    /**
     * Sets custprice_uom
     *
     * @param string $custprice_uom custprice_uom
     *
     * @return $this
     */
    public function setCustpriceUom($custprice_uom)
    {
        $this->container['custprice_uom'] = $custprice_uom;

        return $this;
    }

    /**
     * Gets listprice
     *
     * @return double
     */
    public function getListprice()
    {
        return $this->container['listprice'];
    }

    /**
     * Sets listprice
     *
     * @param double $listprice listprice
     *
     * @return $this
     */
    public function setListprice($listprice)
    {
        $this->container['listprice'] = $listprice;

        return $this;
    }

    /**
     * Gets saleprice
     *
     * @return double
     */
    public function getSaleprice()
    {
        return $this->container['saleprice'];
    }

    /**
     * Sets saleprice
     *
     * @param double $saleprice saleprice
     *
     * @return $this
     */
    public function setSaleprice($saleprice)
    {
        $this->container['saleprice'] = $saleprice;

        return $this;
    }

    /**
     * Gets totlineamt
     *
     * @return double
     */
    public function getTotlineamt()
    {
        return $this->container['totlineamt'];
    }

    /**
     * Sets totlineamt
     *
     * @param double $totlineamt totlineamt
     *
     * @return $this
     */
    public function setTotlineamt($totlineamt)
    {
        $this->container['totlineamt'] = $totlineamt;

        return $this;
    }

    /**
     * Gets custpo
     *
     * @return string
     */
    public function getCustpo()
    {
        return $this->container['custpo'];
    }

    /**
     * Sets custpo
     *
     * @param string $custpo custpo
     *
     * @return $this
     */
    public function setCustpo($custpo)
    {
        $this->container['custpo'] = $custpo;

        return $this;
    }

    /**
     * Gets duedt
     *
     * @return \DateTime
     */
    public function getDuedt()
    {
        return $this->container['duedt'];
    }

    /**
     * Sets duedt
     *
     * @param \DateTime $duedt duedt
     *
     * @return $this
     */
    public function setDuedt($duedt)
    {
        $this->container['duedt'] = $duedt;

        return $this;
    }

    /**
     * Gets orgprod
     *
     * @return string
     */
    public function getOrgprod()
    {
        return $this->container['orgprod'];
    }

    /**
     * Sets orgprod
     *
     * @param string $orgprod orgprod
     *
     * @return $this
     */
    public function setOrgprod($orgprod)
    {
        $this->container['orgprod'] = $orgprod;

        return $this;
    }

    /**
     * Gets entseqno
     *
     * @return int
     */
    public function getEntseqno()
    {
        return $this->container['entseqno'];
    }

    /**
     * Sets entseqno
     *
     * @param int $entseqno entseqno
     *
     * @return $this
     */
    public function setEntseqno($entseqno)
    {
        $this->container['entseqno'] = $entseqno;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets ordstatcd
     *
     * @return string
     */
    public function getOrdstatcd()
    {
        return $this->container['ordstatcd'];
    }

    /**
     * Sets ordstatcd
     *
     * @param string $ordstatcd ordstatcd
     *
     * @return $this
     */
    public function setOrdstatcd($ordstatcd)
    {
        $this->container['ordstatcd'] = $ordstatcd;

        return $this;
    }

    /**
     * Gets reqshpdt
     *
     * @return \DateTime
     */
    public function getReqshpdt()
    {
        return $this->container['reqshpdt'];
    }

    /**
     * Sets reqshpdt
     *
     * @param \DateTime $reqshpdt reqshpdt
     *
     * @return $this
     */
    public function setReqshpdt($reqshpdt)
    {
        $this->container['reqshpdt'] = $reqshpdt;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


