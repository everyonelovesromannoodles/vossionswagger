<?php
/**
 * SxapipopurchaseordermntResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapipopurchaseordermntResponse Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapipopurchaseordermntResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapipopurchaseordermnt_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'c_error_message' => 'string',
        'created_purchase_order_number' => 'int',
        'created_purchase_order_suffix' => 'int',
        't_outpomntheader' => '\Swagger\Client\Model\TOutpomntheaderResp',
        't_outpomntline' => '\Swagger\Client\Model\TOutpomntlineResp',
        't_messages' => '\Swagger\Client\Model\TMessagesResp'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'c_error_message' => null,
        'created_purchase_order_number' => 'int64',
        'created_purchase_order_suffix' => 'int64',
        't_outpomntheader' => null,
        't_outpomntline' => null,
        't_messages' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'c_error_message' => 'cErrorMessage',
        'created_purchase_order_number' => 'createdPurchaseOrderNumber',
        'created_purchase_order_suffix' => 'createdPurchaseOrderSuffix',
        't_outpomntheader' => 'tOutpomntheader',
        't_outpomntline' => 'tOutpomntline',
        't_messages' => 'tMessages'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'c_error_message' => 'setCErrorMessage',
        'created_purchase_order_number' => 'setCreatedPurchaseOrderNumber',
        'created_purchase_order_suffix' => 'setCreatedPurchaseOrderSuffix',
        't_outpomntheader' => 'setTOutpomntheader',
        't_outpomntline' => 'setTOutpomntline',
        't_messages' => 'setTMessages'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'c_error_message' => 'getCErrorMessage',
        'created_purchase_order_number' => 'getCreatedPurchaseOrderNumber',
        'created_purchase_order_suffix' => 'getCreatedPurchaseOrderSuffix',
        't_outpomntheader' => 'getTOutpomntheader',
        't_outpomntline' => 'getTOutpomntline',
        't_messages' => 'getTMessages'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['c_error_message'] = isset($data['c_error_message']) ? $data['c_error_message'] : null;
        $this->container['created_purchase_order_number'] = isset($data['created_purchase_order_number']) ? $data['created_purchase_order_number'] : null;
        $this->container['created_purchase_order_suffix'] = isset($data['created_purchase_order_suffix']) ? $data['created_purchase_order_suffix'] : null;
        $this->container['t_outpomntheader'] = isset($data['t_outpomntheader']) ? $data['t_outpomntheader'] : null;
        $this->container['t_outpomntline'] = isset($data['t_outpomntline']) ? $data['t_outpomntline'] : null;
        $this->container['t_messages'] = isset($data['t_messages']) ? $data['t_messages'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets c_error_message
     *
     * @return string
     */
    public function getCErrorMessage()
    {
        return $this->container['c_error_message'];
    }

    /**
     * Sets c_error_message
     *
     * @param string $c_error_message c_error_message
     *
     * @return $this
     */
    public function setCErrorMessage($c_error_message)
    {
        $this->container['c_error_message'] = $c_error_message;

        return $this;
    }

    /**
     * Gets created_purchase_order_number
     *
     * @return int
     */
    public function getCreatedPurchaseOrderNumber()
    {
        return $this->container['created_purchase_order_number'];
    }

    /**
     * Sets created_purchase_order_number
     *
     * @param int $created_purchase_order_number created_purchase_order_number
     *
     * @return $this
     */
    public function setCreatedPurchaseOrderNumber($created_purchase_order_number)
    {
        $this->container['created_purchase_order_number'] = $created_purchase_order_number;

        return $this;
    }

    /**
     * Gets created_purchase_order_suffix
     *
     * @return int
     */
    public function getCreatedPurchaseOrderSuffix()
    {
        return $this->container['created_purchase_order_suffix'];
    }

    /**
     * Sets created_purchase_order_suffix
     *
     * @param int $created_purchase_order_suffix created_purchase_order_suffix
     *
     * @return $this
     */
    public function setCreatedPurchaseOrderSuffix($created_purchase_order_suffix)
    {
        $this->container['created_purchase_order_suffix'] = $created_purchase_order_suffix;

        return $this;
    }

    /**
     * Gets t_outpomntheader
     *
     * @return \Swagger\Client\Model\TOutpomntheaderResp
     */
    public function getTOutpomntheader()
    {
        return $this->container['t_outpomntheader'];
    }

    /**
     * Sets t_outpomntheader
     *
     * @param \Swagger\Client\Model\TOutpomntheaderResp $t_outpomntheader t_outpomntheader
     *
     * @return $this
     */
    public function setTOutpomntheader($t_outpomntheader)
    {
        $this->container['t_outpomntheader'] = $t_outpomntheader;

        return $this;
    }

    /**
     * Gets t_outpomntline
     *
     * @return \Swagger\Client\Model\TOutpomntlineResp
     */
    public function getTOutpomntline()
    {
        return $this->container['t_outpomntline'];
    }

    /**
     * Sets t_outpomntline
     *
     * @param \Swagger\Client\Model\TOutpomntlineResp $t_outpomntline t_outpomntline
     *
     * @return $this
     */
    public function setTOutpomntline($t_outpomntline)
    {
        $this->container['t_outpomntline'] = $t_outpomntline;

        return $this;
    }

    /**
     * Gets t_messages
     *
     * @return \Swagger\Client\Model\TMessagesResp
     */
    public function getTMessages()
    {
        return $this->container['t_messages'];
    }

    /**
     * Sets t_messages
     *
     * @param \Swagger\Client\Model\TMessagesResp $t_messages t_messages
     *
     * @return $this
     */
    public function setTMessages($t_messages)
    {
        $this->container['t_messages'] = $t_messages;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


