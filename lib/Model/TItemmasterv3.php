<?php
/**
 * TItemmasterv3
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TItemmasterv3 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TItemmasterv3 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-itemmasterv3';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'prod' => 'string',
        'vendprod' => 'string',
        'cono' => 'int',
        'vendno' => 'double',
        'unitstock' => 'string',
        'preventfl' => 'string',
        'suspendfl' => 'string',
        'unit1' => 'string',
        'unit2' => 'string',
        'unit3' => 'string',
        'unitconv2' => 'double',
        'unitconv3' => 'double',
        'unitprice' => 'string',
        'unitconv' => 'double',
        'listprice1' => 'double',
        'listprice2' => 'double',
        'listprice3' => 'double',
        'listprice4' => 'double',
        'listprice5' => 'double',
        'prodrestrictcd' => 'string',
        'descrip1' => 'string',
        'descrip2' => 'string',
        'classcd' => 'string',
        'subclasscd' => 'string',
        'pricetype' => 'string',
        'prodcat' => 'string',
        'misc1' => 'string',
        'misc2' => 'string',
        'misc3' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'string',
        'commentgrp' => 'string',
        'catalogfl' => 'bool',
        'marginprice' => 'double',
        'margincost' => 'double',
        'marginamount' => 'double',
        'marginpct' => 'double',
        'kittype' => 'string',
        'cfgkitfl' => 'bool',
        'cfgruleset' => 'string',
        'cfgapplicationid' => 'string',
        'cfgnamespace' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'prod' => null,
        'vendprod' => null,
        'cono' => 'int64',
        'vendno' => 'double',
        'unitstock' => null,
        'preventfl' => null,
        'suspendfl' => null,
        'unit1' => null,
        'unit2' => null,
        'unit3' => null,
        'unitconv2' => 'double',
        'unitconv3' => 'double',
        'unitprice' => null,
        'unitconv' => 'double',
        'listprice1' => 'double',
        'listprice2' => 'double',
        'listprice3' => 'double',
        'listprice4' => 'double',
        'listprice5' => 'double',
        'prodrestrictcd' => null,
        'descrip1' => null,
        'descrip2' => null,
        'classcd' => null,
        'subclasscd' => null,
        'pricetype' => null,
        'prodcat' => null,
        'misc1' => null,
        'misc2' => null,
        'misc3' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => null,
        'commentgrp' => null,
        'catalogfl' => null,
        'marginprice' => 'double',
        'margincost' => 'double',
        'marginamount' => 'double',
        'marginpct' => 'double',
        'kittype' => null,
        'cfgkitfl' => null,
        'cfgruleset' => null,
        'cfgapplicationid' => null,
        'cfgnamespace' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'prod' => 'prod',
        'vendprod' => 'vendprod',
        'cono' => 'cono',
        'vendno' => 'vendno',
        'unitstock' => 'unitstock',
        'preventfl' => 'preventfl',
        'suspendfl' => 'suspendfl',
        'unit1' => 'unit1',
        'unit2' => 'unit2',
        'unit3' => 'unit3',
        'unitconv2' => 'unitconv2',
        'unitconv3' => 'unitconv3',
        'unitprice' => 'unitprice',
        'unitconv' => 'unitconv',
        'listprice1' => 'listprice1',
        'listprice2' => 'listprice2',
        'listprice3' => 'listprice3',
        'listprice4' => 'listprice4',
        'listprice5' => 'listprice5',
        'prodrestrictcd' => 'prodrestrictcd',
        'descrip1' => 'descrip1',
        'descrip2' => 'descrip2',
        'classcd' => 'classcd',
        'subclasscd' => 'subclasscd',
        'pricetype' => 'pricetype',
        'prodcat' => 'prodcat',
        'misc1' => 'misc1',
        'misc2' => 'misc2',
        'misc3' => 'misc3',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'commentgrp' => 'commentgrp',
        'catalogfl' => 'catalogfl',
        'marginprice' => 'marginprice',
        'margincost' => 'margincost',
        'marginamount' => 'marginamount',
        'marginpct' => 'marginpct',
        'kittype' => 'kittype',
        'cfgkitfl' => 'cfgkitfl',
        'cfgruleset' => 'cfgruleset',
        'cfgapplicationid' => 'cfgapplicationid',
        'cfgnamespace' => 'cfgnamespace'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'prod' => 'setProd',
        'vendprod' => 'setVendprod',
        'cono' => 'setCono',
        'vendno' => 'setVendno',
        'unitstock' => 'setUnitstock',
        'preventfl' => 'setPreventfl',
        'suspendfl' => 'setSuspendfl',
        'unit1' => 'setUnit1',
        'unit2' => 'setUnit2',
        'unit3' => 'setUnit3',
        'unitconv2' => 'setUnitconv2',
        'unitconv3' => 'setUnitconv3',
        'unitprice' => 'setUnitprice',
        'unitconv' => 'setUnitconv',
        'listprice1' => 'setListprice1',
        'listprice2' => 'setListprice2',
        'listprice3' => 'setListprice3',
        'listprice4' => 'setListprice4',
        'listprice5' => 'setListprice5',
        'prodrestrictcd' => 'setProdrestrictcd',
        'descrip1' => 'setDescrip1',
        'descrip2' => 'setDescrip2',
        'classcd' => 'setClasscd',
        'subclasscd' => 'setSubclasscd',
        'pricetype' => 'setPricetype',
        'prodcat' => 'setProdcat',
        'misc1' => 'setMisc1',
        'misc2' => 'setMisc2',
        'misc3' => 'setMisc3',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'commentgrp' => 'setCommentgrp',
        'catalogfl' => 'setCatalogfl',
        'marginprice' => 'setMarginprice',
        'margincost' => 'setMargincost',
        'marginamount' => 'setMarginamount',
        'marginpct' => 'setMarginpct',
        'kittype' => 'setKittype',
        'cfgkitfl' => 'setCfgkitfl',
        'cfgruleset' => 'setCfgruleset',
        'cfgapplicationid' => 'setCfgapplicationid',
        'cfgnamespace' => 'setCfgnamespace'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'prod' => 'getProd',
        'vendprod' => 'getVendprod',
        'cono' => 'getCono',
        'vendno' => 'getVendno',
        'unitstock' => 'getUnitstock',
        'preventfl' => 'getPreventfl',
        'suspendfl' => 'getSuspendfl',
        'unit1' => 'getUnit1',
        'unit2' => 'getUnit2',
        'unit3' => 'getUnit3',
        'unitconv2' => 'getUnitconv2',
        'unitconv3' => 'getUnitconv3',
        'unitprice' => 'getUnitprice',
        'unitconv' => 'getUnitconv',
        'listprice1' => 'getListprice1',
        'listprice2' => 'getListprice2',
        'listprice3' => 'getListprice3',
        'listprice4' => 'getListprice4',
        'listprice5' => 'getListprice5',
        'prodrestrictcd' => 'getProdrestrictcd',
        'descrip1' => 'getDescrip1',
        'descrip2' => 'getDescrip2',
        'classcd' => 'getClasscd',
        'subclasscd' => 'getSubclasscd',
        'pricetype' => 'getPricetype',
        'prodcat' => 'getProdcat',
        'misc1' => 'getMisc1',
        'misc2' => 'getMisc2',
        'misc3' => 'getMisc3',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'commentgrp' => 'getCommentgrp',
        'catalogfl' => 'getCatalogfl',
        'marginprice' => 'getMarginprice',
        'margincost' => 'getMargincost',
        'marginamount' => 'getMarginamount',
        'marginpct' => 'getMarginpct',
        'kittype' => 'getKittype',
        'cfgkitfl' => 'getCfgkitfl',
        'cfgruleset' => 'getCfgruleset',
        'cfgapplicationid' => 'getCfgapplicationid',
        'cfgnamespace' => 'getCfgnamespace'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['vendprod'] = isset($data['vendprod']) ? $data['vendprod'] : null;
        $this->container['cono'] = isset($data['cono']) ? $data['cono'] : null;
        $this->container['vendno'] = isset($data['vendno']) ? $data['vendno'] : null;
        $this->container['unitstock'] = isset($data['unitstock']) ? $data['unitstock'] : null;
        $this->container['preventfl'] = isset($data['preventfl']) ? $data['preventfl'] : null;
        $this->container['suspendfl'] = isset($data['suspendfl']) ? $data['suspendfl'] : null;
        $this->container['unit1'] = isset($data['unit1']) ? $data['unit1'] : null;
        $this->container['unit2'] = isset($data['unit2']) ? $data['unit2'] : null;
        $this->container['unit3'] = isset($data['unit3']) ? $data['unit3'] : null;
        $this->container['unitconv2'] = isset($data['unitconv2']) ? $data['unitconv2'] : null;
        $this->container['unitconv3'] = isset($data['unitconv3']) ? $data['unitconv3'] : null;
        $this->container['unitprice'] = isset($data['unitprice']) ? $data['unitprice'] : null;
        $this->container['unitconv'] = isset($data['unitconv']) ? $data['unitconv'] : null;
        $this->container['listprice1'] = isset($data['listprice1']) ? $data['listprice1'] : null;
        $this->container['listprice2'] = isset($data['listprice2']) ? $data['listprice2'] : null;
        $this->container['listprice3'] = isset($data['listprice3']) ? $data['listprice3'] : null;
        $this->container['listprice4'] = isset($data['listprice4']) ? $data['listprice4'] : null;
        $this->container['listprice5'] = isset($data['listprice5']) ? $data['listprice5'] : null;
        $this->container['prodrestrictcd'] = isset($data['prodrestrictcd']) ? $data['prodrestrictcd'] : null;
        $this->container['descrip1'] = isset($data['descrip1']) ? $data['descrip1'] : null;
        $this->container['descrip2'] = isset($data['descrip2']) ? $data['descrip2'] : null;
        $this->container['classcd'] = isset($data['classcd']) ? $data['classcd'] : null;
        $this->container['subclasscd'] = isset($data['subclasscd']) ? $data['subclasscd'] : null;
        $this->container['pricetype'] = isset($data['pricetype']) ? $data['pricetype'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['misc1'] = isset($data['misc1']) ? $data['misc1'] : null;
        $this->container['misc2'] = isset($data['misc2']) ? $data['misc2'] : null;
        $this->container['misc3'] = isset($data['misc3']) ? $data['misc3'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['commentgrp'] = isset($data['commentgrp']) ? $data['commentgrp'] : null;
        $this->container['catalogfl'] = isset($data['catalogfl']) ? $data['catalogfl'] : null;
        $this->container['marginprice'] = isset($data['marginprice']) ? $data['marginprice'] : null;
        $this->container['margincost'] = isset($data['margincost']) ? $data['margincost'] : null;
        $this->container['marginamount'] = isset($data['marginamount']) ? $data['marginamount'] : null;
        $this->container['marginpct'] = isset($data['marginpct']) ? $data['marginpct'] : null;
        $this->container['kittype'] = isset($data['kittype']) ? $data['kittype'] : null;
        $this->container['cfgkitfl'] = isset($data['cfgkitfl']) ? $data['cfgkitfl'] : null;
        $this->container['cfgruleset'] = isset($data['cfgruleset']) ? $data['cfgruleset'] : null;
        $this->container['cfgapplicationid'] = isset($data['cfgapplicationid']) ? $data['cfgapplicationid'] : null;
        $this->container['cfgnamespace'] = isset($data['cfgnamespace']) ? $data['cfgnamespace'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets vendprod
     *
     * @return string
     */
    public function getVendprod()
    {
        return $this->container['vendprod'];
    }

    /**
     * Sets vendprod
     *
     * @param string $vendprod vendprod
     *
     * @return $this
     */
    public function setVendprod($vendprod)
    {
        $this->container['vendprod'] = $vendprod;

        return $this;
    }

    /**
     * Gets cono
     *
     * @return int
     */
    public function getCono()
    {
        return $this->container['cono'];
    }

    /**
     * Sets cono
     *
     * @param int $cono cono
     *
     * @return $this
     */
    public function setCono($cono)
    {
        $this->container['cono'] = $cono;

        return $this;
    }

    /**
     * Gets vendno
     *
     * @return double
     */
    public function getVendno()
    {
        return $this->container['vendno'];
    }

    /**
     * Sets vendno
     *
     * @param double $vendno vendno
     *
     * @return $this
     */
    public function setVendno($vendno)
    {
        $this->container['vendno'] = $vendno;

        return $this;
    }

    /**
     * Gets unitstock
     *
     * @return string
     */
    public function getUnitstock()
    {
        return $this->container['unitstock'];
    }

    /**
     * Sets unitstock
     *
     * @param string $unitstock unitstock
     *
     * @return $this
     */
    public function setUnitstock($unitstock)
    {
        $this->container['unitstock'] = $unitstock;

        return $this;
    }

    /**
     * Gets preventfl
     *
     * @return string
     */
    public function getPreventfl()
    {
        return $this->container['preventfl'];
    }

    /**
     * Sets preventfl
     *
     * @param string $preventfl preventfl
     *
     * @return $this
     */
    public function setPreventfl($preventfl)
    {
        $this->container['preventfl'] = $preventfl;

        return $this;
    }

    /**
     * Gets suspendfl
     *
     * @return string
     */
    public function getSuspendfl()
    {
        return $this->container['suspendfl'];
    }

    /**
     * Sets suspendfl
     *
     * @param string $suspendfl suspendfl
     *
     * @return $this
     */
    public function setSuspendfl($suspendfl)
    {
        $this->container['suspendfl'] = $suspendfl;

        return $this;
    }

    /**
     * Gets unit1
     *
     * @return string
     */
    public function getUnit1()
    {
        return $this->container['unit1'];
    }

    /**
     * Sets unit1
     *
     * @param string $unit1 unit1
     *
     * @return $this
     */
    public function setUnit1($unit1)
    {
        $this->container['unit1'] = $unit1;

        return $this;
    }

    /**
     * Gets unit2
     *
     * @return string
     */
    public function getUnit2()
    {
        return $this->container['unit2'];
    }

    /**
     * Sets unit2
     *
     * @param string $unit2 unit2
     *
     * @return $this
     */
    public function setUnit2($unit2)
    {
        $this->container['unit2'] = $unit2;

        return $this;
    }

    /**
     * Gets unit3
     *
     * @return string
     */
    public function getUnit3()
    {
        return $this->container['unit3'];
    }

    /**
     * Sets unit3
     *
     * @param string $unit3 unit3
     *
     * @return $this
     */
    public function setUnit3($unit3)
    {
        $this->container['unit3'] = $unit3;

        return $this;
    }

    /**
     * Gets unitconv2
     *
     * @return double
     */
    public function getUnitconv2()
    {
        return $this->container['unitconv2'];
    }

    /**
     * Sets unitconv2
     *
     * @param double $unitconv2 unitconv2
     *
     * @return $this
     */
    public function setUnitconv2($unitconv2)
    {
        $this->container['unitconv2'] = $unitconv2;

        return $this;
    }

    /**
     * Gets unitconv3
     *
     * @return double
     */
    public function getUnitconv3()
    {
        return $this->container['unitconv3'];
    }

    /**
     * Sets unitconv3
     *
     * @param double $unitconv3 unitconv3
     *
     * @return $this
     */
    public function setUnitconv3($unitconv3)
    {
        $this->container['unitconv3'] = $unitconv3;

        return $this;
    }

    /**
     * Gets unitprice
     *
     * @return string
     */
    public function getUnitprice()
    {
        return $this->container['unitprice'];
    }

    /**
     * Sets unitprice
     *
     * @param string $unitprice unitprice
     *
     * @return $this
     */
    public function setUnitprice($unitprice)
    {
        $this->container['unitprice'] = $unitprice;

        return $this;
    }

    /**
     * Gets unitconv
     *
     * @return double
     */
    public function getUnitconv()
    {
        return $this->container['unitconv'];
    }

    /**
     * Sets unitconv
     *
     * @param double $unitconv unitconv
     *
     * @return $this
     */
    public function setUnitconv($unitconv)
    {
        $this->container['unitconv'] = $unitconv;

        return $this;
    }

    /**
     * Gets listprice1
     *
     * @return double
     */
    public function getListprice1()
    {
        return $this->container['listprice1'];
    }

    /**
     * Sets listprice1
     *
     * @param double $listprice1 listprice1
     *
     * @return $this
     */
    public function setListprice1($listprice1)
    {
        $this->container['listprice1'] = $listprice1;

        return $this;
    }

    /**
     * Gets listprice2
     *
     * @return double
     */
    public function getListprice2()
    {
        return $this->container['listprice2'];
    }

    /**
     * Sets listprice2
     *
     * @param double $listprice2 listprice2
     *
     * @return $this
     */
    public function setListprice2($listprice2)
    {
        $this->container['listprice2'] = $listprice2;

        return $this;
    }

    /**
     * Gets listprice3
     *
     * @return double
     */
    public function getListprice3()
    {
        return $this->container['listprice3'];
    }

    /**
     * Sets listprice3
     *
     * @param double $listprice3 listprice3
     *
     * @return $this
     */
    public function setListprice3($listprice3)
    {
        $this->container['listprice3'] = $listprice3;

        return $this;
    }

    /**
     * Gets listprice4
     *
     * @return double
     */
    public function getListprice4()
    {
        return $this->container['listprice4'];
    }

    /**
     * Sets listprice4
     *
     * @param double $listprice4 listprice4
     *
     * @return $this
     */
    public function setListprice4($listprice4)
    {
        $this->container['listprice4'] = $listprice4;

        return $this;
    }

    /**
     * Gets listprice5
     *
     * @return double
     */
    public function getListprice5()
    {
        return $this->container['listprice5'];
    }

    /**
     * Sets listprice5
     *
     * @param double $listprice5 listprice5
     *
     * @return $this
     */
    public function setListprice5($listprice5)
    {
        $this->container['listprice5'] = $listprice5;

        return $this;
    }

    /**
     * Gets prodrestrictcd
     *
     * @return string
     */
    public function getProdrestrictcd()
    {
        return $this->container['prodrestrictcd'];
    }

    /**
     * Sets prodrestrictcd
     *
     * @param string $prodrestrictcd prodrestrictcd
     *
     * @return $this
     */
    public function setProdrestrictcd($prodrestrictcd)
    {
        $this->container['prodrestrictcd'] = $prodrestrictcd;

        return $this;
    }

    /**
     * Gets descrip1
     *
     * @return string
     */
    public function getDescrip1()
    {
        return $this->container['descrip1'];
    }

    /**
     * Sets descrip1
     *
     * @param string $descrip1 descrip1
     *
     * @return $this
     */
    public function setDescrip1($descrip1)
    {
        $this->container['descrip1'] = $descrip1;

        return $this;
    }

    /**
     * Gets descrip2
     *
     * @return string
     */
    public function getDescrip2()
    {
        return $this->container['descrip2'];
    }

    /**
     * Sets descrip2
     *
     * @param string $descrip2 descrip2
     *
     * @return $this
     */
    public function setDescrip2($descrip2)
    {
        $this->container['descrip2'] = $descrip2;

        return $this;
    }

    /**
     * Gets classcd
     *
     * @return string
     */
    public function getClasscd()
    {
        return $this->container['classcd'];
    }

    /**
     * Sets classcd
     *
     * @param string $classcd classcd
     *
     * @return $this
     */
    public function setClasscd($classcd)
    {
        $this->container['classcd'] = $classcd;

        return $this;
    }

    /**
     * Gets subclasscd
     *
     * @return string
     */
    public function getSubclasscd()
    {
        return $this->container['subclasscd'];
    }

    /**
     * Sets subclasscd
     *
     * @param string $subclasscd subclasscd
     *
     * @return $this
     */
    public function setSubclasscd($subclasscd)
    {
        $this->container['subclasscd'] = $subclasscd;

        return $this;
    }

    /**
     * Gets pricetype
     *
     * @return string
     */
    public function getPricetype()
    {
        return $this->container['pricetype'];
    }

    /**
     * Sets pricetype
     *
     * @param string $pricetype pricetype
     *
     * @return $this
     */
    public function setPricetype($pricetype)
    {
        $this->container['pricetype'] = $pricetype;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets misc1
     *
     * @return string
     */
    public function getMisc1()
    {
        return $this->container['misc1'];
    }

    /**
     * Sets misc1
     *
     * @param string $misc1 misc1
     *
     * @return $this
     */
    public function setMisc1($misc1)
    {
        $this->container['misc1'] = $misc1;

        return $this;
    }

    /**
     * Gets misc2
     *
     * @return string
     */
    public function getMisc2()
    {
        return $this->container['misc2'];
    }

    /**
     * Sets misc2
     *
     * @param string $misc2 misc2
     *
     * @return $this
     */
    public function setMisc2($misc2)
    {
        $this->container['misc2'] = $misc2;

        return $this;
    }

    /**
     * Gets misc3
     *
     * @return string
     */
    public function getMisc3()
    {
        return $this->container['misc3'];
    }

    /**
     * Sets misc3
     *
     * @param string $misc3 misc3
     *
     * @return $this
     */
    public function setMisc3($misc3)
    {
        $this->container['misc3'] = $misc3;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return string
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param string $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets commentgrp
     *
     * @return string
     */
    public function getCommentgrp()
    {
        return $this->container['commentgrp'];
    }

    /**
     * Sets commentgrp
     *
     * @param string $commentgrp commentgrp
     *
     * @return $this
     */
    public function setCommentgrp($commentgrp)
    {
        $this->container['commentgrp'] = $commentgrp;

        return $this;
    }

    /**
     * Gets catalogfl
     *
     * @return bool
     */
    public function getCatalogfl()
    {
        return $this->container['catalogfl'];
    }

    /**
     * Sets catalogfl
     *
     * @param bool $catalogfl catalogfl
     *
     * @return $this
     */
    public function setCatalogfl($catalogfl)
    {
        $this->container['catalogfl'] = $catalogfl;

        return $this;
    }

    /**
     * Gets marginprice
     *
     * @return double
     */
    public function getMarginprice()
    {
        return $this->container['marginprice'];
    }

    /**
     * Sets marginprice
     *
     * @param double $marginprice marginprice
     *
     * @return $this
     */
    public function setMarginprice($marginprice)
    {
        $this->container['marginprice'] = $marginprice;

        return $this;
    }

    /**
     * Gets margincost
     *
     * @return double
     */
    public function getMargincost()
    {
        return $this->container['margincost'];
    }

    /**
     * Sets margincost
     *
     * @param double $margincost margincost
     *
     * @return $this
     */
    public function setMargincost($margincost)
    {
        $this->container['margincost'] = $margincost;

        return $this;
    }

    /**
     * Gets marginamount
     *
     * @return double
     */
    public function getMarginamount()
    {
        return $this->container['marginamount'];
    }

    /**
     * Sets marginamount
     *
     * @param double $marginamount marginamount
     *
     * @return $this
     */
    public function setMarginamount($marginamount)
    {
        $this->container['marginamount'] = $marginamount;

        return $this;
    }

    /**
     * Gets marginpct
     *
     * @return double
     */
    public function getMarginpct()
    {
        return $this->container['marginpct'];
    }

    /**
     * Sets marginpct
     *
     * @param double $marginpct marginpct
     *
     * @return $this
     */
    public function setMarginpct($marginpct)
    {
        $this->container['marginpct'] = $marginpct;

        return $this;
    }

    /**
     * Gets kittype
     *
     * @return string
     */
    public function getKittype()
    {
        return $this->container['kittype'];
    }

    /**
     * Sets kittype
     *
     * @param string $kittype kittype
     *
     * @return $this
     */
    public function setKittype($kittype)
    {
        $this->container['kittype'] = $kittype;

        return $this;
    }

    /**
     * Gets cfgkitfl
     *
     * @return bool
     */
    public function getCfgkitfl()
    {
        return $this->container['cfgkitfl'];
    }

    /**
     * Sets cfgkitfl
     *
     * @param bool $cfgkitfl cfgkitfl
     *
     * @return $this
     */
    public function setCfgkitfl($cfgkitfl)
    {
        $this->container['cfgkitfl'] = $cfgkitfl;

        return $this;
    }

    /**
     * Gets cfgruleset
     *
     * @return string
     */
    public function getCfgruleset()
    {
        return $this->container['cfgruleset'];
    }

    /**
     * Sets cfgruleset
     *
     * @param string $cfgruleset cfgruleset
     *
     * @return $this
     */
    public function setCfgruleset($cfgruleset)
    {
        $this->container['cfgruleset'] = $cfgruleset;

        return $this;
    }

    /**
     * Gets cfgapplicationid
     *
     * @return string
     */
    public function getCfgapplicationid()
    {
        return $this->container['cfgapplicationid'];
    }

    /**
     * Sets cfgapplicationid
     *
     * @param string $cfgapplicationid cfgapplicationid
     *
     * @return $this
     */
    public function setCfgapplicationid($cfgapplicationid)
    {
        $this->container['cfgapplicationid'] = $cfgapplicationid;

        return $this;
    }

    /**
     * Gets cfgnamespace
     *
     * @return string
     */
    public function getCfgnamespace()
    {
        return $this->container['cfgnamespace'];
    }

    /**
     * Sets cfgnamespace
     *
     * @param string $cfgnamespace cfgnamespace
     *
     * @return $this
     */
    public function setCfgnamespace($cfgnamespace)
    {
        $this->container['cfgnamespace'] = $cfgnamespace;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


