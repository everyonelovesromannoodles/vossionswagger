<?php
/**
 * TOutwtmntheader
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TOutwtmntheader Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TOutwtmntheader implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-outwtmntheader';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'addonamt1' => 'double',
        'addonamt2' => 'double',
        'addonamt3' => 'double',
        'addonamt4' => 'double',
        'addoncty' => 'string',
        'addonety' => 'string',
        'addoncapfl1' => 'bool',
        'addoncapfl2' => 'bool',
        'addoncapfl3' => 'bool',
        'addoncapfl4' => 'bool',
        'addonno1' => 'int',
        'addonno2' => 'int',
        'addonno3' => 'int',
        'addonno4' => 'int',
        'addontype1' => 'bool',
        'addontype2' => 'bool',
        'addontype3' => 'bool',
        'addontype4' => 'bool',
        'boty' => 'string',
        'confirmty' => 'string',
        'countrycd' => 'string',
        'createdby' => 'string',
        'divno' => 'int',
        'duedt' => '\DateTime',
        'enterdt' => '\DateTime',
        'fobty' => 'string',
        'ignoreltty' => 'string',
        'manaddr1' => 'string',
        'manaddr2' => 'string',
        'mancity' => 'string',
        'manname' => 'string',
        'manstate' => 'string',
        'manzipcd' => 'int',
        'notesdata' => 'string',
        'orderaltno' => 'int',
        'orderaltsuf' => 'int',
        'orderdisp' => 'string',
        'orderdt' => '\DateTime',
        'refer' => 'string',
        'transdt' => '\DateTime',
        'reqshipdt' => '\DateTime',
        'resalety' => 'string',
        'rushty' => 'string',
        'shipinstr' => 'string',
        'shiptoaddr1' => 'string',
        'shiptoaddr2' => 'string',
        'shiptocity' => 'string',
        'shiptonm' => 'string',
        'shiptost' => 'string',
        'shiptozip' => 'string',
        'shipviaty' => 'string',
        'subty' => 'string',
        'transtype' => 'string',
        'whse' => 'string',
        'towhse' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'addonamt1' => 'double',
        'addonamt2' => 'double',
        'addonamt3' => 'double',
        'addonamt4' => 'double',
        'addoncty' => null,
        'addonety' => null,
        'addoncapfl1' => null,
        'addoncapfl2' => null,
        'addoncapfl3' => null,
        'addoncapfl4' => null,
        'addonno1' => 'int64',
        'addonno2' => 'int64',
        'addonno3' => 'int64',
        'addonno4' => 'int64',
        'addontype1' => null,
        'addontype2' => null,
        'addontype3' => null,
        'addontype4' => null,
        'boty' => null,
        'confirmty' => null,
        'countrycd' => null,
        'createdby' => null,
        'divno' => 'int64',
        'duedt' => 'date',
        'enterdt' => 'date',
        'fobty' => null,
        'ignoreltty' => null,
        'manaddr1' => null,
        'manaddr2' => null,
        'mancity' => null,
        'manname' => null,
        'manstate' => null,
        'manzipcd' => 'int64',
        'notesdata' => null,
        'orderaltno' => 'int64',
        'orderaltsuf' => 'int64',
        'orderdisp' => null,
        'orderdt' => 'date',
        'refer' => null,
        'transdt' => 'date',
        'reqshipdt' => 'date',
        'resalety' => null,
        'rushty' => null,
        'shipinstr' => null,
        'shiptoaddr1' => null,
        'shiptoaddr2' => null,
        'shiptocity' => null,
        'shiptonm' => null,
        'shiptost' => null,
        'shiptozip' => null,
        'shipviaty' => null,
        'subty' => null,
        'transtype' => null,
        'whse' => null,
        'towhse' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'addonamt1' => 'addonamt1',
        'addonamt2' => 'addonamt2',
        'addonamt3' => 'addonamt3',
        'addonamt4' => 'addonamt4',
        'addoncty' => 'addoncty',
        'addonety' => 'addonety',
        'addoncapfl1' => 'addoncapfl1',
        'addoncapfl2' => 'addoncapfl2',
        'addoncapfl3' => 'addoncapfl3',
        'addoncapfl4' => 'addoncapfl4',
        'addonno1' => 'addonno1',
        'addonno2' => 'addonno2',
        'addonno3' => 'addonno3',
        'addonno4' => 'addonno4',
        'addontype1' => 'addontype1',
        'addontype2' => 'addontype2',
        'addontype3' => 'addontype3',
        'addontype4' => 'addontype4',
        'boty' => 'boty',
        'confirmty' => 'confirmty',
        'countrycd' => 'countrycd',
        'createdby' => 'createdby',
        'divno' => 'divno',
        'duedt' => 'duedt',
        'enterdt' => 'enterdt',
        'fobty' => 'fobty',
        'ignoreltty' => 'ignoreltty',
        'manaddr1' => 'manaddr1',
        'manaddr2' => 'manaddr2',
        'mancity' => 'mancity',
        'manname' => 'manname',
        'manstate' => 'manstate',
        'manzipcd' => 'manzipcd',
        'notesdata' => 'notesdata',
        'orderaltno' => 'orderaltno',
        'orderaltsuf' => 'orderaltsuf',
        'orderdisp' => 'orderdisp',
        'orderdt' => 'orderdt',
        'refer' => 'refer',
        'transdt' => 'transdt',
        'reqshipdt' => 'reqshipdt',
        'resalety' => 'resalety',
        'rushty' => 'rushty',
        'shipinstr' => 'shipinstr',
        'shiptoaddr1' => 'shiptoaddr1',
        'shiptoaddr2' => 'shiptoaddr2',
        'shiptocity' => 'shiptocity',
        'shiptonm' => 'shiptonm',
        'shiptost' => 'shiptost',
        'shiptozip' => 'shiptozip',
        'shipviaty' => 'shipviaty',
        'subty' => 'subty',
        'transtype' => 'transtype',
        'whse' => 'whse',
        'towhse' => 'towhse',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'addonamt1' => 'setAddonamt1',
        'addonamt2' => 'setAddonamt2',
        'addonamt3' => 'setAddonamt3',
        'addonamt4' => 'setAddonamt4',
        'addoncty' => 'setAddoncty',
        'addonety' => 'setAddonety',
        'addoncapfl1' => 'setAddoncapfl1',
        'addoncapfl2' => 'setAddoncapfl2',
        'addoncapfl3' => 'setAddoncapfl3',
        'addoncapfl4' => 'setAddoncapfl4',
        'addonno1' => 'setAddonno1',
        'addonno2' => 'setAddonno2',
        'addonno3' => 'setAddonno3',
        'addonno4' => 'setAddonno4',
        'addontype1' => 'setAddontype1',
        'addontype2' => 'setAddontype2',
        'addontype3' => 'setAddontype3',
        'addontype4' => 'setAddontype4',
        'boty' => 'setBoty',
        'confirmty' => 'setConfirmty',
        'countrycd' => 'setCountrycd',
        'createdby' => 'setCreatedby',
        'divno' => 'setDivno',
        'duedt' => 'setDuedt',
        'enterdt' => 'setEnterdt',
        'fobty' => 'setFobty',
        'ignoreltty' => 'setIgnoreltty',
        'manaddr1' => 'setManaddr1',
        'manaddr2' => 'setManaddr2',
        'mancity' => 'setMancity',
        'manname' => 'setManname',
        'manstate' => 'setManstate',
        'manzipcd' => 'setManzipcd',
        'notesdata' => 'setNotesdata',
        'orderaltno' => 'setOrderaltno',
        'orderaltsuf' => 'setOrderaltsuf',
        'orderdisp' => 'setOrderdisp',
        'orderdt' => 'setOrderdt',
        'refer' => 'setRefer',
        'transdt' => 'setTransdt',
        'reqshipdt' => 'setReqshipdt',
        'resalety' => 'setResalety',
        'rushty' => 'setRushty',
        'shipinstr' => 'setShipinstr',
        'shiptoaddr1' => 'setShiptoaddr1',
        'shiptoaddr2' => 'setShiptoaddr2',
        'shiptocity' => 'setShiptocity',
        'shiptonm' => 'setShiptonm',
        'shiptost' => 'setShiptost',
        'shiptozip' => 'setShiptozip',
        'shipviaty' => 'setShipviaty',
        'subty' => 'setSubty',
        'transtype' => 'setTranstype',
        'whse' => 'setWhse',
        'towhse' => 'setTowhse',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'addonamt1' => 'getAddonamt1',
        'addonamt2' => 'getAddonamt2',
        'addonamt3' => 'getAddonamt3',
        'addonamt4' => 'getAddonamt4',
        'addoncty' => 'getAddoncty',
        'addonety' => 'getAddonety',
        'addoncapfl1' => 'getAddoncapfl1',
        'addoncapfl2' => 'getAddoncapfl2',
        'addoncapfl3' => 'getAddoncapfl3',
        'addoncapfl4' => 'getAddoncapfl4',
        'addonno1' => 'getAddonno1',
        'addonno2' => 'getAddonno2',
        'addonno3' => 'getAddonno3',
        'addonno4' => 'getAddonno4',
        'addontype1' => 'getAddontype1',
        'addontype2' => 'getAddontype2',
        'addontype3' => 'getAddontype3',
        'addontype4' => 'getAddontype4',
        'boty' => 'getBoty',
        'confirmty' => 'getConfirmty',
        'countrycd' => 'getCountrycd',
        'createdby' => 'getCreatedby',
        'divno' => 'getDivno',
        'duedt' => 'getDuedt',
        'enterdt' => 'getEnterdt',
        'fobty' => 'getFobty',
        'ignoreltty' => 'getIgnoreltty',
        'manaddr1' => 'getManaddr1',
        'manaddr2' => 'getManaddr2',
        'mancity' => 'getMancity',
        'manname' => 'getManname',
        'manstate' => 'getManstate',
        'manzipcd' => 'getManzipcd',
        'notesdata' => 'getNotesdata',
        'orderaltno' => 'getOrderaltno',
        'orderaltsuf' => 'getOrderaltsuf',
        'orderdisp' => 'getOrderdisp',
        'orderdt' => 'getOrderdt',
        'refer' => 'getRefer',
        'transdt' => 'getTransdt',
        'reqshipdt' => 'getReqshipdt',
        'resalety' => 'getResalety',
        'rushty' => 'getRushty',
        'shipinstr' => 'getShipinstr',
        'shiptoaddr1' => 'getShiptoaddr1',
        'shiptoaddr2' => 'getShiptoaddr2',
        'shiptocity' => 'getShiptocity',
        'shiptonm' => 'getShiptonm',
        'shiptost' => 'getShiptost',
        'shiptozip' => 'getShiptozip',
        'shipviaty' => 'getShipviaty',
        'subty' => 'getSubty',
        'transtype' => 'getTranstype',
        'whse' => 'getWhse',
        'towhse' => 'getTowhse',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['addonamt1'] = isset($data['addonamt1']) ? $data['addonamt1'] : null;
        $this->container['addonamt2'] = isset($data['addonamt2']) ? $data['addonamt2'] : null;
        $this->container['addonamt3'] = isset($data['addonamt3']) ? $data['addonamt3'] : null;
        $this->container['addonamt4'] = isset($data['addonamt4']) ? $data['addonamt4'] : null;
        $this->container['addoncty'] = isset($data['addoncty']) ? $data['addoncty'] : null;
        $this->container['addonety'] = isset($data['addonety']) ? $data['addonety'] : null;
        $this->container['addoncapfl1'] = isset($data['addoncapfl1']) ? $data['addoncapfl1'] : null;
        $this->container['addoncapfl2'] = isset($data['addoncapfl2']) ? $data['addoncapfl2'] : null;
        $this->container['addoncapfl3'] = isset($data['addoncapfl3']) ? $data['addoncapfl3'] : null;
        $this->container['addoncapfl4'] = isset($data['addoncapfl4']) ? $data['addoncapfl4'] : null;
        $this->container['addonno1'] = isset($data['addonno1']) ? $data['addonno1'] : null;
        $this->container['addonno2'] = isset($data['addonno2']) ? $data['addonno2'] : null;
        $this->container['addonno3'] = isset($data['addonno3']) ? $data['addonno3'] : null;
        $this->container['addonno4'] = isset($data['addonno4']) ? $data['addonno4'] : null;
        $this->container['addontype1'] = isset($data['addontype1']) ? $data['addontype1'] : null;
        $this->container['addontype2'] = isset($data['addontype2']) ? $data['addontype2'] : null;
        $this->container['addontype3'] = isset($data['addontype3']) ? $data['addontype3'] : null;
        $this->container['addontype4'] = isset($data['addontype4']) ? $data['addontype4'] : null;
        $this->container['boty'] = isset($data['boty']) ? $data['boty'] : null;
        $this->container['confirmty'] = isset($data['confirmty']) ? $data['confirmty'] : null;
        $this->container['countrycd'] = isset($data['countrycd']) ? $data['countrycd'] : null;
        $this->container['createdby'] = isset($data['createdby']) ? $data['createdby'] : null;
        $this->container['divno'] = isset($data['divno']) ? $data['divno'] : null;
        $this->container['duedt'] = isset($data['duedt']) ? $data['duedt'] : null;
        $this->container['enterdt'] = isset($data['enterdt']) ? $data['enterdt'] : null;
        $this->container['fobty'] = isset($data['fobty']) ? $data['fobty'] : null;
        $this->container['ignoreltty'] = isset($data['ignoreltty']) ? $data['ignoreltty'] : null;
        $this->container['manaddr1'] = isset($data['manaddr1']) ? $data['manaddr1'] : null;
        $this->container['manaddr2'] = isset($data['manaddr2']) ? $data['manaddr2'] : null;
        $this->container['mancity'] = isset($data['mancity']) ? $data['mancity'] : null;
        $this->container['manname'] = isset($data['manname']) ? $data['manname'] : null;
        $this->container['manstate'] = isset($data['manstate']) ? $data['manstate'] : null;
        $this->container['manzipcd'] = isset($data['manzipcd']) ? $data['manzipcd'] : null;
        $this->container['notesdata'] = isset($data['notesdata']) ? $data['notesdata'] : null;
        $this->container['orderaltno'] = isset($data['orderaltno']) ? $data['orderaltno'] : null;
        $this->container['orderaltsuf'] = isset($data['orderaltsuf']) ? $data['orderaltsuf'] : null;
        $this->container['orderdisp'] = isset($data['orderdisp']) ? $data['orderdisp'] : null;
        $this->container['orderdt'] = isset($data['orderdt']) ? $data['orderdt'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['transdt'] = isset($data['transdt']) ? $data['transdt'] : null;
        $this->container['reqshipdt'] = isset($data['reqshipdt']) ? $data['reqshipdt'] : null;
        $this->container['resalety'] = isset($data['resalety']) ? $data['resalety'] : null;
        $this->container['rushty'] = isset($data['rushty']) ? $data['rushty'] : null;
        $this->container['shipinstr'] = isset($data['shipinstr']) ? $data['shipinstr'] : null;
        $this->container['shiptoaddr1'] = isset($data['shiptoaddr1']) ? $data['shiptoaddr1'] : null;
        $this->container['shiptoaddr2'] = isset($data['shiptoaddr2']) ? $data['shiptoaddr2'] : null;
        $this->container['shiptocity'] = isset($data['shiptocity']) ? $data['shiptocity'] : null;
        $this->container['shiptonm'] = isset($data['shiptonm']) ? $data['shiptonm'] : null;
        $this->container['shiptost'] = isset($data['shiptost']) ? $data['shiptost'] : null;
        $this->container['shiptozip'] = isset($data['shiptozip']) ? $data['shiptozip'] : null;
        $this->container['shipviaty'] = isset($data['shipviaty']) ? $data['shipviaty'] : null;
        $this->container['subty'] = isset($data['subty']) ? $data['subty'] : null;
        $this->container['transtype'] = isset($data['transtype']) ? $data['transtype'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['towhse'] = isset($data['towhse']) ? $data['towhse'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets addonamt1
     *
     * @return double
     */
    public function getAddonamt1()
    {
        return $this->container['addonamt1'];
    }

    /**
     * Sets addonamt1
     *
     * @param double $addonamt1 addonamt1
     *
     * @return $this
     */
    public function setAddonamt1($addonamt1)
    {
        $this->container['addonamt1'] = $addonamt1;

        return $this;
    }

    /**
     * Gets addonamt2
     *
     * @return double
     */
    public function getAddonamt2()
    {
        return $this->container['addonamt2'];
    }

    /**
     * Sets addonamt2
     *
     * @param double $addonamt2 addonamt2
     *
     * @return $this
     */
    public function setAddonamt2($addonamt2)
    {
        $this->container['addonamt2'] = $addonamt2;

        return $this;
    }

    /**
     * Gets addonamt3
     *
     * @return double
     */
    public function getAddonamt3()
    {
        return $this->container['addonamt3'];
    }

    /**
     * Sets addonamt3
     *
     * @param double $addonamt3 addonamt3
     *
     * @return $this
     */
    public function setAddonamt3($addonamt3)
    {
        $this->container['addonamt3'] = $addonamt3;

        return $this;
    }

    /**
     * Gets addonamt4
     *
     * @return double
     */
    public function getAddonamt4()
    {
        return $this->container['addonamt4'];
    }

    /**
     * Sets addonamt4
     *
     * @param double $addonamt4 addonamt4
     *
     * @return $this
     */
    public function setAddonamt4($addonamt4)
    {
        $this->container['addonamt4'] = $addonamt4;

        return $this;
    }

    /**
     * Gets addoncty
     *
     * @return string
     */
    public function getAddoncty()
    {
        return $this->container['addoncty'];
    }

    /**
     * Sets addoncty
     *
     * @param string $addoncty addoncty
     *
     * @return $this
     */
    public function setAddoncty($addoncty)
    {
        $this->container['addoncty'] = $addoncty;

        return $this;
    }

    /**
     * Gets addonety
     *
     * @return string
     */
    public function getAddonety()
    {
        return $this->container['addonety'];
    }

    /**
     * Sets addonety
     *
     * @param string $addonety addonety
     *
     * @return $this
     */
    public function setAddonety($addonety)
    {
        $this->container['addonety'] = $addonety;

        return $this;
    }

    /**
     * Gets addoncapfl1
     *
     * @return bool
     */
    public function getAddoncapfl1()
    {
        return $this->container['addoncapfl1'];
    }

    /**
     * Sets addoncapfl1
     *
     * @param bool $addoncapfl1 addoncapfl1
     *
     * @return $this
     */
    public function setAddoncapfl1($addoncapfl1)
    {
        $this->container['addoncapfl1'] = $addoncapfl1;

        return $this;
    }

    /**
     * Gets addoncapfl2
     *
     * @return bool
     */
    public function getAddoncapfl2()
    {
        return $this->container['addoncapfl2'];
    }

    /**
     * Sets addoncapfl2
     *
     * @param bool $addoncapfl2 addoncapfl2
     *
     * @return $this
     */
    public function setAddoncapfl2($addoncapfl2)
    {
        $this->container['addoncapfl2'] = $addoncapfl2;

        return $this;
    }

    /**
     * Gets addoncapfl3
     *
     * @return bool
     */
    public function getAddoncapfl3()
    {
        return $this->container['addoncapfl3'];
    }

    /**
     * Sets addoncapfl3
     *
     * @param bool $addoncapfl3 addoncapfl3
     *
     * @return $this
     */
    public function setAddoncapfl3($addoncapfl3)
    {
        $this->container['addoncapfl3'] = $addoncapfl3;

        return $this;
    }

    /**
     * Gets addoncapfl4
     *
     * @return bool
     */
    public function getAddoncapfl4()
    {
        return $this->container['addoncapfl4'];
    }

    /**
     * Sets addoncapfl4
     *
     * @param bool $addoncapfl4 addoncapfl4
     *
     * @return $this
     */
    public function setAddoncapfl4($addoncapfl4)
    {
        $this->container['addoncapfl4'] = $addoncapfl4;

        return $this;
    }

    /**
     * Gets addonno1
     *
     * @return int
     */
    public function getAddonno1()
    {
        return $this->container['addonno1'];
    }

    /**
     * Sets addonno1
     *
     * @param int $addonno1 addonno1
     *
     * @return $this
     */
    public function setAddonno1($addonno1)
    {
        $this->container['addonno1'] = $addonno1;

        return $this;
    }

    /**
     * Gets addonno2
     *
     * @return int
     */
    public function getAddonno2()
    {
        return $this->container['addonno2'];
    }

    /**
     * Sets addonno2
     *
     * @param int $addonno2 addonno2
     *
     * @return $this
     */
    public function setAddonno2($addonno2)
    {
        $this->container['addonno2'] = $addonno2;

        return $this;
    }

    /**
     * Gets addonno3
     *
     * @return int
     */
    public function getAddonno3()
    {
        return $this->container['addonno3'];
    }

    /**
     * Sets addonno3
     *
     * @param int $addonno3 addonno3
     *
     * @return $this
     */
    public function setAddonno3($addonno3)
    {
        $this->container['addonno3'] = $addonno3;

        return $this;
    }

    /**
     * Gets addonno4
     *
     * @return int
     */
    public function getAddonno4()
    {
        return $this->container['addonno4'];
    }

    /**
     * Sets addonno4
     *
     * @param int $addonno4 addonno4
     *
     * @return $this
     */
    public function setAddonno4($addonno4)
    {
        $this->container['addonno4'] = $addonno4;

        return $this;
    }

    /**
     * Gets addontype1
     *
     * @return bool
     */
    public function getAddontype1()
    {
        return $this->container['addontype1'];
    }

    /**
     * Sets addontype1
     *
     * @param bool $addontype1 addontype1
     *
     * @return $this
     */
    public function setAddontype1($addontype1)
    {
        $this->container['addontype1'] = $addontype1;

        return $this;
    }

    /**
     * Gets addontype2
     *
     * @return bool
     */
    public function getAddontype2()
    {
        return $this->container['addontype2'];
    }

    /**
     * Sets addontype2
     *
     * @param bool $addontype2 addontype2
     *
     * @return $this
     */
    public function setAddontype2($addontype2)
    {
        $this->container['addontype2'] = $addontype2;

        return $this;
    }

    /**
     * Gets addontype3
     *
     * @return bool
     */
    public function getAddontype3()
    {
        return $this->container['addontype3'];
    }

    /**
     * Sets addontype3
     *
     * @param bool $addontype3 addontype3
     *
     * @return $this
     */
    public function setAddontype3($addontype3)
    {
        $this->container['addontype3'] = $addontype3;

        return $this;
    }

    /**
     * Gets addontype4
     *
     * @return bool
     */
    public function getAddontype4()
    {
        return $this->container['addontype4'];
    }

    /**
     * Sets addontype4
     *
     * @param bool $addontype4 addontype4
     *
     * @return $this
     */
    public function setAddontype4($addontype4)
    {
        $this->container['addontype4'] = $addontype4;

        return $this;
    }

    /**
     * Gets boty
     *
     * @return string
     */
    public function getBoty()
    {
        return $this->container['boty'];
    }

    /**
     * Sets boty
     *
     * @param string $boty boty
     *
     * @return $this
     */
    public function setBoty($boty)
    {
        $this->container['boty'] = $boty;

        return $this;
    }

    /**
     * Gets confirmty
     *
     * @return string
     */
    public function getConfirmty()
    {
        return $this->container['confirmty'];
    }

    /**
     * Sets confirmty
     *
     * @param string $confirmty confirmty
     *
     * @return $this
     */
    public function setConfirmty($confirmty)
    {
        $this->container['confirmty'] = $confirmty;

        return $this;
    }

    /**
     * Gets countrycd
     *
     * @return string
     */
    public function getCountrycd()
    {
        return $this->container['countrycd'];
    }

    /**
     * Sets countrycd
     *
     * @param string $countrycd countrycd
     *
     * @return $this
     */
    public function setCountrycd($countrycd)
    {
        $this->container['countrycd'] = $countrycd;

        return $this;
    }

    /**
     * Gets createdby
     *
     * @return string
     */
    public function getCreatedby()
    {
        return $this->container['createdby'];
    }

    /**
     * Sets createdby
     *
     * @param string $createdby createdby
     *
     * @return $this
     */
    public function setCreatedby($createdby)
    {
        $this->container['createdby'] = $createdby;

        return $this;
    }

    /**
     * Gets divno
     *
     * @return int
     */
    public function getDivno()
    {
        return $this->container['divno'];
    }

    /**
     * Sets divno
     *
     * @param int $divno divno
     *
     * @return $this
     */
    public function setDivno($divno)
    {
        $this->container['divno'] = $divno;

        return $this;
    }

    /**
     * Gets duedt
     *
     * @return \DateTime
     */
    public function getDuedt()
    {
        return $this->container['duedt'];
    }

    /**
     * Sets duedt
     *
     * @param \DateTime $duedt duedt
     *
     * @return $this
     */
    public function setDuedt($duedt)
    {
        $this->container['duedt'] = $duedt;

        return $this;
    }

    /**
     * Gets enterdt
     *
     * @return \DateTime
     */
    public function getEnterdt()
    {
        return $this->container['enterdt'];
    }

    /**
     * Sets enterdt
     *
     * @param \DateTime $enterdt enterdt
     *
     * @return $this
     */
    public function setEnterdt($enterdt)
    {
        $this->container['enterdt'] = $enterdt;

        return $this;
    }

    /**
     * Gets fobty
     *
     * @return string
     */
    public function getFobty()
    {
        return $this->container['fobty'];
    }

    /**
     * Sets fobty
     *
     * @param string $fobty fobty
     *
     * @return $this
     */
    public function setFobty($fobty)
    {
        $this->container['fobty'] = $fobty;

        return $this;
    }

    /**
     * Gets ignoreltty
     *
     * @return string
     */
    public function getIgnoreltty()
    {
        return $this->container['ignoreltty'];
    }

    /**
     * Sets ignoreltty
     *
     * @param string $ignoreltty ignoreltty
     *
     * @return $this
     */
    public function setIgnoreltty($ignoreltty)
    {
        $this->container['ignoreltty'] = $ignoreltty;

        return $this;
    }

    /**
     * Gets manaddr1
     *
     * @return string
     */
    public function getManaddr1()
    {
        return $this->container['manaddr1'];
    }

    /**
     * Sets manaddr1
     *
     * @param string $manaddr1 manaddr1
     *
     * @return $this
     */
    public function setManaddr1($manaddr1)
    {
        $this->container['manaddr1'] = $manaddr1;

        return $this;
    }

    /**
     * Gets manaddr2
     *
     * @return string
     */
    public function getManaddr2()
    {
        return $this->container['manaddr2'];
    }

    /**
     * Sets manaddr2
     *
     * @param string $manaddr2 manaddr2
     *
     * @return $this
     */
    public function setManaddr2($manaddr2)
    {
        $this->container['manaddr2'] = $manaddr2;

        return $this;
    }

    /**
     * Gets mancity
     *
     * @return string
     */
    public function getMancity()
    {
        return $this->container['mancity'];
    }

    /**
     * Sets mancity
     *
     * @param string $mancity mancity
     *
     * @return $this
     */
    public function setMancity($mancity)
    {
        $this->container['mancity'] = $mancity;

        return $this;
    }

    /**
     * Gets manname
     *
     * @return string
     */
    public function getManname()
    {
        return $this->container['manname'];
    }

    /**
     * Sets manname
     *
     * @param string $manname manname
     *
     * @return $this
     */
    public function setManname($manname)
    {
        $this->container['manname'] = $manname;

        return $this;
    }

    /**
     * Gets manstate
     *
     * @return string
     */
    public function getManstate()
    {
        return $this->container['manstate'];
    }

    /**
     * Sets manstate
     *
     * @param string $manstate manstate
     *
     * @return $this
     */
    public function setManstate($manstate)
    {
        $this->container['manstate'] = $manstate;

        return $this;
    }

    /**
     * Gets manzipcd
     *
     * @return int
     */
    public function getManzipcd()
    {
        return $this->container['manzipcd'];
    }

    /**
     * Sets manzipcd
     *
     * @param int $manzipcd manzipcd
     *
     * @return $this
     */
    public function setManzipcd($manzipcd)
    {
        $this->container['manzipcd'] = $manzipcd;

        return $this;
    }

    /**
     * Gets notesdata
     *
     * @return string
     */
    public function getNotesdata()
    {
        return $this->container['notesdata'];
    }

    /**
     * Sets notesdata
     *
     * @param string $notesdata notesdata
     *
     * @return $this
     */
    public function setNotesdata($notesdata)
    {
        $this->container['notesdata'] = $notesdata;

        return $this;
    }

    /**
     * Gets orderaltno
     *
     * @return int
     */
    public function getOrderaltno()
    {
        return $this->container['orderaltno'];
    }

    /**
     * Sets orderaltno
     *
     * @param int $orderaltno orderaltno
     *
     * @return $this
     */
    public function setOrderaltno($orderaltno)
    {
        $this->container['orderaltno'] = $orderaltno;

        return $this;
    }

    /**
     * Gets orderaltsuf
     *
     * @return int
     */
    public function getOrderaltsuf()
    {
        return $this->container['orderaltsuf'];
    }

    /**
     * Sets orderaltsuf
     *
     * @param int $orderaltsuf orderaltsuf
     *
     * @return $this
     */
    public function setOrderaltsuf($orderaltsuf)
    {
        $this->container['orderaltsuf'] = $orderaltsuf;

        return $this;
    }

    /**
     * Gets orderdisp
     *
     * @return string
     */
    public function getOrderdisp()
    {
        return $this->container['orderdisp'];
    }

    /**
     * Sets orderdisp
     *
     * @param string $orderdisp orderdisp
     *
     * @return $this
     */
    public function setOrderdisp($orderdisp)
    {
        $this->container['orderdisp'] = $orderdisp;

        return $this;
    }

    /**
     * Gets orderdt
     *
     * @return \DateTime
     */
    public function getOrderdt()
    {
        return $this->container['orderdt'];
    }

    /**
     * Sets orderdt
     *
     * @param \DateTime $orderdt orderdt
     *
     * @return $this
     */
    public function setOrderdt($orderdt)
    {
        $this->container['orderdt'] = $orderdt;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets transdt
     *
     * @return \DateTime
     */
    public function getTransdt()
    {
        return $this->container['transdt'];
    }

    /**
     * Sets transdt
     *
     * @param \DateTime $transdt transdt
     *
     * @return $this
     */
    public function setTransdt($transdt)
    {
        $this->container['transdt'] = $transdt;

        return $this;
    }

    /**
     * Gets reqshipdt
     *
     * @return \DateTime
     */
    public function getReqshipdt()
    {
        return $this->container['reqshipdt'];
    }

    /**
     * Sets reqshipdt
     *
     * @param \DateTime $reqshipdt reqshipdt
     *
     * @return $this
     */
    public function setReqshipdt($reqshipdt)
    {
        $this->container['reqshipdt'] = $reqshipdt;

        return $this;
    }

    /**
     * Gets resalety
     *
     * @return string
     */
    public function getResalety()
    {
        return $this->container['resalety'];
    }

    /**
     * Sets resalety
     *
     * @param string $resalety resalety
     *
     * @return $this
     */
    public function setResalety($resalety)
    {
        $this->container['resalety'] = $resalety;

        return $this;
    }

    /**
     * Gets rushty
     *
     * @return string
     */
    public function getRushty()
    {
        return $this->container['rushty'];
    }

    /**
     * Sets rushty
     *
     * @param string $rushty rushty
     *
     * @return $this
     */
    public function setRushty($rushty)
    {
        $this->container['rushty'] = $rushty;

        return $this;
    }

    /**
     * Gets shipinstr
     *
     * @return string
     */
    public function getShipinstr()
    {
        return $this->container['shipinstr'];
    }

    /**
     * Sets shipinstr
     *
     * @param string $shipinstr shipinstr
     *
     * @return $this
     */
    public function setShipinstr($shipinstr)
    {
        $this->container['shipinstr'] = $shipinstr;

        return $this;
    }

    /**
     * Gets shiptoaddr1
     *
     * @return string
     */
    public function getShiptoaddr1()
    {
        return $this->container['shiptoaddr1'];
    }

    /**
     * Sets shiptoaddr1
     *
     * @param string $shiptoaddr1 shiptoaddr1
     *
     * @return $this
     */
    public function setShiptoaddr1($shiptoaddr1)
    {
        $this->container['shiptoaddr1'] = $shiptoaddr1;

        return $this;
    }

    /**
     * Gets shiptoaddr2
     *
     * @return string
     */
    public function getShiptoaddr2()
    {
        return $this->container['shiptoaddr2'];
    }

    /**
     * Sets shiptoaddr2
     *
     * @param string $shiptoaddr2 shiptoaddr2
     *
     * @return $this
     */
    public function setShiptoaddr2($shiptoaddr2)
    {
        $this->container['shiptoaddr2'] = $shiptoaddr2;

        return $this;
    }

    /**
     * Gets shiptocity
     *
     * @return string
     */
    public function getShiptocity()
    {
        return $this->container['shiptocity'];
    }

    /**
     * Sets shiptocity
     *
     * @param string $shiptocity shiptocity
     *
     * @return $this
     */
    public function setShiptocity($shiptocity)
    {
        $this->container['shiptocity'] = $shiptocity;

        return $this;
    }

    /**
     * Gets shiptonm
     *
     * @return string
     */
    public function getShiptonm()
    {
        return $this->container['shiptonm'];
    }

    /**
     * Sets shiptonm
     *
     * @param string $shiptonm shiptonm
     *
     * @return $this
     */
    public function setShiptonm($shiptonm)
    {
        $this->container['shiptonm'] = $shiptonm;

        return $this;
    }

    /**
     * Gets shiptost
     *
     * @return string
     */
    public function getShiptost()
    {
        return $this->container['shiptost'];
    }

    /**
     * Sets shiptost
     *
     * @param string $shiptost shiptost
     *
     * @return $this
     */
    public function setShiptost($shiptost)
    {
        $this->container['shiptost'] = $shiptost;

        return $this;
    }

    /**
     * Gets shiptozip
     *
     * @return string
     */
    public function getShiptozip()
    {
        return $this->container['shiptozip'];
    }

    /**
     * Sets shiptozip
     *
     * @param string $shiptozip shiptozip
     *
     * @return $this
     */
    public function setShiptozip($shiptozip)
    {
        $this->container['shiptozip'] = $shiptozip;

        return $this;
    }

    /**
     * Gets shipviaty
     *
     * @return string
     */
    public function getShipviaty()
    {
        return $this->container['shipviaty'];
    }

    /**
     * Sets shipviaty
     *
     * @param string $shipviaty shipviaty
     *
     * @return $this
     */
    public function setShipviaty($shipviaty)
    {
        $this->container['shipviaty'] = $shipviaty;

        return $this;
    }

    /**
     * Gets subty
     *
     * @return string
     */
    public function getSubty()
    {
        return $this->container['subty'];
    }

    /**
     * Sets subty
     *
     * @param string $subty subty
     *
     * @return $this
     */
    public function setSubty($subty)
    {
        $this->container['subty'] = $subty;

        return $this;
    }

    /**
     * Gets transtype
     *
     * @return string
     */
    public function getTranstype()
    {
        return $this->container['transtype'];
    }

    /**
     * Sets transtype
     *
     * @param string $transtype transtype
     *
     * @return $this
     */
    public function setTranstype($transtype)
    {
        $this->container['transtype'] = $transtype;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets towhse
     *
     * @return string
     */
    public function getTowhse()
    {
        return $this->container['towhse'];
    }

    /**
     * Sets towhse
     *
     * @param string $towhse towhse
     *
     * @return $this
     */
    public function setTowhse($towhse)
    {
        $this->container['towhse'] = $towhse;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


