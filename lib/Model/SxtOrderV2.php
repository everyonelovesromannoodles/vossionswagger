<?php
/**
 * SxtOrderV2
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxtOrderV2 Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxtOrderV2 implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxt_orderV2';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'action_type' => 'string',
        'attention' => 'string',
        'batch_nm' => 'string',
        'bo_fl' => 'string',
        'buyer' => 'string',
        'cancel_dt' => 'string',
        'confirm_fl' => 'string',
        'co_no' => 'string',
        'contract_nr' => 'string',
        'correlation_data' => 'string',
        'currency_cd' => 'string',
        'direction' => 'string',
        'exp_ship_dt' => 'string',
        'fob_desc' => 'string',
        'fob_fl' => 'string',
        'notes' => 'string',
        'oper_init' => 'string',
        'orderdisp' => 'string',
        'order_no' => 'string',
        'order_suf' => 'string',
        'partner_id' => 'string',
        'po_issue_dt' => 'string',
        'po_no' => 'string',
        'po_suf' => 'string',
        'promise_dt' => 'string',
        'refer' => 'string',
        'release_nr' => 'string',
        'req_ship_dt' => 'string',
        'rush_fl' => 'string',
        'ship_instr' => 'string',
        'ship_via' => 'string',
        'sub_fl' => 'string',
        'trans_type' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'whse' => 'string',
        'user5' => 'string',
        'user6' => 'string',
        'user7' => 'string',
        'user8' => 'string',
        'user9' => 'string',
        'taxfl' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'action_type' => null,
        'attention' => null,
        'batch_nm' => null,
        'bo_fl' => null,
        'buyer' => null,
        'cancel_dt' => null,
        'confirm_fl' => null,
        'co_no' => null,
        'contract_nr' => null,
        'correlation_data' => null,
        'currency_cd' => null,
        'direction' => null,
        'exp_ship_dt' => null,
        'fob_desc' => null,
        'fob_fl' => null,
        'notes' => null,
        'oper_init' => null,
        'orderdisp' => null,
        'order_no' => null,
        'order_suf' => null,
        'partner_id' => null,
        'po_issue_dt' => null,
        'po_no' => null,
        'po_suf' => null,
        'promise_dt' => null,
        'refer' => null,
        'release_nr' => null,
        'req_ship_dt' => null,
        'rush_fl' => null,
        'ship_instr' => null,
        'ship_via' => null,
        'sub_fl' => null,
        'trans_type' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'whse' => null,
        'user5' => null,
        'user6' => null,
        'user7' => null,
        'user8' => null,
        'user9' => null,
        'taxfl' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'action_type' => 'actionType',
        'attention' => 'attention',
        'batch_nm' => 'batchNm',
        'bo_fl' => 'boFl',
        'buyer' => 'buyer',
        'cancel_dt' => 'cancelDt',
        'confirm_fl' => 'confirmFl',
        'co_no' => 'coNo',
        'contract_nr' => 'contractNr',
        'correlation_data' => 'correlation_data',
        'currency_cd' => 'currencyCd',
        'direction' => 'direction',
        'exp_ship_dt' => 'expShipDt',
        'fob_desc' => 'fobDesc',
        'fob_fl' => 'fobFl',
        'notes' => 'notes',
        'oper_init' => 'operInit',
        'orderdisp' => 'orderdisp',
        'order_no' => 'orderNo',
        'order_suf' => 'orderSuf',
        'partner_id' => 'partnerId',
        'po_issue_dt' => 'poIssueDt',
        'po_no' => 'poNo',
        'po_suf' => 'poSuf',
        'promise_dt' => 'promiseDt',
        'refer' => 'refer',
        'release_nr' => 'releaseNr',
        'req_ship_dt' => 'reqShipDt',
        'rush_fl' => 'rushFl',
        'ship_instr' => 'shipInstr',
        'ship_via' => 'shipVia',
        'sub_fl' => 'subFl',
        'trans_type' => 'transType',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'whse' => 'whse',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9',
        'taxfl' => 'taxfl'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'action_type' => 'setActionType',
        'attention' => 'setAttention',
        'batch_nm' => 'setBatchNm',
        'bo_fl' => 'setBoFl',
        'buyer' => 'setBuyer',
        'cancel_dt' => 'setCancelDt',
        'confirm_fl' => 'setConfirmFl',
        'co_no' => 'setCoNo',
        'contract_nr' => 'setContractNr',
        'correlation_data' => 'setCorrelationData',
        'currency_cd' => 'setCurrencyCd',
        'direction' => 'setDirection',
        'exp_ship_dt' => 'setExpShipDt',
        'fob_desc' => 'setFobDesc',
        'fob_fl' => 'setFobFl',
        'notes' => 'setNotes',
        'oper_init' => 'setOperInit',
        'orderdisp' => 'setOrderdisp',
        'order_no' => 'setOrderNo',
        'order_suf' => 'setOrderSuf',
        'partner_id' => 'setPartnerId',
        'po_issue_dt' => 'setPoIssueDt',
        'po_no' => 'setPoNo',
        'po_suf' => 'setPoSuf',
        'promise_dt' => 'setPromiseDt',
        'refer' => 'setRefer',
        'release_nr' => 'setReleaseNr',
        'req_ship_dt' => 'setReqShipDt',
        'rush_fl' => 'setRushFl',
        'ship_instr' => 'setShipInstr',
        'ship_via' => 'setShipVia',
        'sub_fl' => 'setSubFl',
        'trans_type' => 'setTransType',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'whse' => 'setWhse',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9',
        'taxfl' => 'setTaxfl'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'action_type' => 'getActionType',
        'attention' => 'getAttention',
        'batch_nm' => 'getBatchNm',
        'bo_fl' => 'getBoFl',
        'buyer' => 'getBuyer',
        'cancel_dt' => 'getCancelDt',
        'confirm_fl' => 'getConfirmFl',
        'co_no' => 'getCoNo',
        'contract_nr' => 'getContractNr',
        'correlation_data' => 'getCorrelationData',
        'currency_cd' => 'getCurrencyCd',
        'direction' => 'getDirection',
        'exp_ship_dt' => 'getExpShipDt',
        'fob_desc' => 'getFobDesc',
        'fob_fl' => 'getFobFl',
        'notes' => 'getNotes',
        'oper_init' => 'getOperInit',
        'orderdisp' => 'getOrderdisp',
        'order_no' => 'getOrderNo',
        'order_suf' => 'getOrderSuf',
        'partner_id' => 'getPartnerId',
        'po_issue_dt' => 'getPoIssueDt',
        'po_no' => 'getPoNo',
        'po_suf' => 'getPoSuf',
        'promise_dt' => 'getPromiseDt',
        'refer' => 'getRefer',
        'release_nr' => 'getReleaseNr',
        'req_ship_dt' => 'getReqShipDt',
        'rush_fl' => 'getRushFl',
        'ship_instr' => 'getShipInstr',
        'ship_via' => 'getShipVia',
        'sub_fl' => 'getSubFl',
        'trans_type' => 'getTransType',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'whse' => 'getWhse',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9',
        'taxfl' => 'getTaxfl'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['action_type'] = isset($data['action_type']) ? $data['action_type'] : null;
        $this->container['attention'] = isset($data['attention']) ? $data['attention'] : null;
        $this->container['batch_nm'] = isset($data['batch_nm']) ? $data['batch_nm'] : null;
        $this->container['bo_fl'] = isset($data['bo_fl']) ? $data['bo_fl'] : null;
        $this->container['buyer'] = isset($data['buyer']) ? $data['buyer'] : null;
        $this->container['cancel_dt'] = isset($data['cancel_dt']) ? $data['cancel_dt'] : null;
        $this->container['confirm_fl'] = isset($data['confirm_fl']) ? $data['confirm_fl'] : null;
        $this->container['co_no'] = isset($data['co_no']) ? $data['co_no'] : null;
        $this->container['contract_nr'] = isset($data['contract_nr']) ? $data['contract_nr'] : null;
        $this->container['correlation_data'] = isset($data['correlation_data']) ? $data['correlation_data'] : null;
        $this->container['currency_cd'] = isset($data['currency_cd']) ? $data['currency_cd'] : null;
        $this->container['direction'] = isset($data['direction']) ? $data['direction'] : null;
        $this->container['exp_ship_dt'] = isset($data['exp_ship_dt']) ? $data['exp_ship_dt'] : null;
        $this->container['fob_desc'] = isset($data['fob_desc']) ? $data['fob_desc'] : null;
        $this->container['fob_fl'] = isset($data['fob_fl']) ? $data['fob_fl'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['oper_init'] = isset($data['oper_init']) ? $data['oper_init'] : null;
        $this->container['orderdisp'] = isset($data['orderdisp']) ? $data['orderdisp'] : null;
        $this->container['order_no'] = isset($data['order_no']) ? $data['order_no'] : null;
        $this->container['order_suf'] = isset($data['order_suf']) ? $data['order_suf'] : null;
        $this->container['partner_id'] = isset($data['partner_id']) ? $data['partner_id'] : null;
        $this->container['po_issue_dt'] = isset($data['po_issue_dt']) ? $data['po_issue_dt'] : null;
        $this->container['po_no'] = isset($data['po_no']) ? $data['po_no'] : null;
        $this->container['po_suf'] = isset($data['po_suf']) ? $data['po_suf'] : null;
        $this->container['promise_dt'] = isset($data['promise_dt']) ? $data['promise_dt'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['release_nr'] = isset($data['release_nr']) ? $data['release_nr'] : null;
        $this->container['req_ship_dt'] = isset($data['req_ship_dt']) ? $data['req_ship_dt'] : null;
        $this->container['rush_fl'] = isset($data['rush_fl']) ? $data['rush_fl'] : null;
        $this->container['ship_instr'] = isset($data['ship_instr']) ? $data['ship_instr'] : null;
        $this->container['ship_via'] = isset($data['ship_via']) ? $data['ship_via'] : null;
        $this->container['sub_fl'] = isset($data['sub_fl']) ? $data['sub_fl'] : null;
        $this->container['trans_type'] = isset($data['trans_type']) ? $data['trans_type'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
        $this->container['taxfl'] = isset($data['taxfl']) ? $data['taxfl'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets action_type
     *
     * @return string
     */
    public function getActionType()
    {
        return $this->container['action_type'];
    }

    /**
     * Sets action_type
     *
     * @param string $action_type action_type
     *
     * @return $this
     */
    public function setActionType($action_type)
    {
        $this->container['action_type'] = $action_type;

        return $this;
    }

    /**
     * Gets attention
     *
     * @return string
     */
    public function getAttention()
    {
        return $this->container['attention'];
    }

    /**
     * Sets attention
     *
     * @param string $attention attention
     *
     * @return $this
     */
    public function setAttention($attention)
    {
        $this->container['attention'] = $attention;

        return $this;
    }

    /**
     * Gets batch_nm
     *
     * @return string
     */
    public function getBatchNm()
    {
        return $this->container['batch_nm'];
    }

    /**
     * Sets batch_nm
     *
     * @param string $batch_nm batch_nm
     *
     * @return $this
     */
    public function setBatchNm($batch_nm)
    {
        $this->container['batch_nm'] = $batch_nm;

        return $this;
    }

    /**
     * Gets bo_fl
     *
     * @return string
     */
    public function getBoFl()
    {
        return $this->container['bo_fl'];
    }

    /**
     * Sets bo_fl
     *
     * @param string $bo_fl bo_fl
     *
     * @return $this
     */
    public function setBoFl($bo_fl)
    {
        $this->container['bo_fl'] = $bo_fl;

        return $this;
    }

    /**
     * Gets buyer
     *
     * @return string
     */
    public function getBuyer()
    {
        return $this->container['buyer'];
    }

    /**
     * Sets buyer
     *
     * @param string $buyer buyer
     *
     * @return $this
     */
    public function setBuyer($buyer)
    {
        $this->container['buyer'] = $buyer;

        return $this;
    }

    /**
     * Gets cancel_dt
     *
     * @return string
     */
    public function getCancelDt()
    {
        return $this->container['cancel_dt'];
    }

    /**
     * Sets cancel_dt
     *
     * @param string $cancel_dt cancel_dt
     *
     * @return $this
     */
    public function setCancelDt($cancel_dt)
    {
        $this->container['cancel_dt'] = $cancel_dt;

        return $this;
    }

    /**
     * Gets confirm_fl
     *
     * @return string
     */
    public function getConfirmFl()
    {
        return $this->container['confirm_fl'];
    }

    /**
     * Sets confirm_fl
     *
     * @param string $confirm_fl confirm_fl
     *
     * @return $this
     */
    public function setConfirmFl($confirm_fl)
    {
        $this->container['confirm_fl'] = $confirm_fl;

        return $this;
    }

    /**
     * Gets co_no
     *
     * @return string
     */
    public function getCoNo()
    {
        return $this->container['co_no'];
    }

    /**
     * Sets co_no
     *
     * @param string $co_no co_no
     *
     * @return $this
     */
    public function setCoNo($co_no)
    {
        $this->container['co_no'] = $co_no;

        return $this;
    }

    /**
     * Gets contract_nr
     *
     * @return string
     */
    public function getContractNr()
    {
        return $this->container['contract_nr'];
    }

    /**
     * Sets contract_nr
     *
     * @param string $contract_nr contract_nr
     *
     * @return $this
     */
    public function setContractNr($contract_nr)
    {
        $this->container['contract_nr'] = $contract_nr;

        return $this;
    }

    /**
     * Gets correlation_data
     *
     * @return string
     */
    public function getCorrelationData()
    {
        return $this->container['correlation_data'];
    }

    /**
     * Sets correlation_data
     *
     * @param string $correlation_data correlation_data
     *
     * @return $this
     */
    public function setCorrelationData($correlation_data)
    {
        $this->container['correlation_data'] = $correlation_data;

        return $this;
    }

    /**
     * Gets currency_cd
     *
     * @return string
     */
    public function getCurrencyCd()
    {
        return $this->container['currency_cd'];
    }

    /**
     * Sets currency_cd
     *
     * @param string $currency_cd currency_cd
     *
     * @return $this
     */
    public function setCurrencyCd($currency_cd)
    {
        $this->container['currency_cd'] = $currency_cd;

        return $this;
    }

    /**
     * Gets direction
     *
     * @return string
     */
    public function getDirection()
    {
        return $this->container['direction'];
    }

    /**
     * Sets direction
     *
     * @param string $direction direction
     *
     * @return $this
     */
    public function setDirection($direction)
    {
        $this->container['direction'] = $direction;

        return $this;
    }

    /**
     * Gets exp_ship_dt
     *
     * @return string
     */
    public function getExpShipDt()
    {
        return $this->container['exp_ship_dt'];
    }

    /**
     * Sets exp_ship_dt
     *
     * @param string $exp_ship_dt exp_ship_dt
     *
     * @return $this
     */
    public function setExpShipDt($exp_ship_dt)
    {
        $this->container['exp_ship_dt'] = $exp_ship_dt;

        return $this;
    }

    /**
     * Gets fob_desc
     *
     * @return string
     */
    public function getFobDesc()
    {
        return $this->container['fob_desc'];
    }

    /**
     * Sets fob_desc
     *
     * @param string $fob_desc fob_desc
     *
     * @return $this
     */
    public function setFobDesc($fob_desc)
    {
        $this->container['fob_desc'] = $fob_desc;

        return $this;
    }

    /**
     * Gets fob_fl
     *
     * @return string
     */
    public function getFobFl()
    {
        return $this->container['fob_fl'];
    }

    /**
     * Sets fob_fl
     *
     * @param string $fob_fl fob_fl
     *
     * @return $this
     */
    public function setFobFl($fob_fl)
    {
        $this->container['fob_fl'] = $fob_fl;

        return $this;
    }

    /**
     * Gets notes
     *
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     *
     * @param string $notes notes
     *
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets oper_init
     *
     * @return string
     */
    public function getOperInit()
    {
        return $this->container['oper_init'];
    }

    /**
     * Sets oper_init
     *
     * @param string $oper_init oper_init
     *
     * @return $this
     */
    public function setOperInit($oper_init)
    {
        $this->container['oper_init'] = $oper_init;

        return $this;
    }

    /**
     * Gets orderdisp
     *
     * @return string
     */
    public function getOrderdisp()
    {
        return $this->container['orderdisp'];
    }

    /**
     * Sets orderdisp
     *
     * @param string $orderdisp orderdisp
     *
     * @return $this
     */
    public function setOrderdisp($orderdisp)
    {
        $this->container['orderdisp'] = $orderdisp;

        return $this;
    }

    /**
     * Gets order_no
     *
     * @return string
     */
    public function getOrderNo()
    {
        return $this->container['order_no'];
    }

    /**
     * Sets order_no
     *
     * @param string $order_no order_no
     *
     * @return $this
     */
    public function setOrderNo($order_no)
    {
        $this->container['order_no'] = $order_no;

        return $this;
    }

    /**
     * Gets order_suf
     *
     * @return string
     */
    public function getOrderSuf()
    {
        return $this->container['order_suf'];
    }

    /**
     * Sets order_suf
     *
     * @param string $order_suf order_suf
     *
     * @return $this
     */
    public function setOrderSuf($order_suf)
    {
        $this->container['order_suf'] = $order_suf;

        return $this;
    }

    /**
     * Gets partner_id
     *
     * @return string
     */
    public function getPartnerId()
    {
        return $this->container['partner_id'];
    }

    /**
     * Sets partner_id
     *
     * @param string $partner_id partner_id
     *
     * @return $this
     */
    public function setPartnerId($partner_id)
    {
        $this->container['partner_id'] = $partner_id;

        return $this;
    }

    /**
     * Gets po_issue_dt
     *
     * @return string
     */
    public function getPoIssueDt()
    {
        return $this->container['po_issue_dt'];
    }

    /**
     * Sets po_issue_dt
     *
     * @param string $po_issue_dt po_issue_dt
     *
     * @return $this
     */
    public function setPoIssueDt($po_issue_dt)
    {
        $this->container['po_issue_dt'] = $po_issue_dt;

        return $this;
    }

    /**
     * Gets po_no
     *
     * @return string
     */
    public function getPoNo()
    {
        return $this->container['po_no'];
    }

    /**
     * Sets po_no
     *
     * @param string $po_no po_no
     *
     * @return $this
     */
    public function setPoNo($po_no)
    {
        $this->container['po_no'] = $po_no;

        return $this;
    }

    /**
     * Gets po_suf
     *
     * @return string
     */
    public function getPoSuf()
    {
        return $this->container['po_suf'];
    }

    /**
     * Sets po_suf
     *
     * @param string $po_suf po_suf
     *
     * @return $this
     */
    public function setPoSuf($po_suf)
    {
        $this->container['po_suf'] = $po_suf;

        return $this;
    }

    /**
     * Gets promise_dt
     *
     * @return string
     */
    public function getPromiseDt()
    {
        return $this->container['promise_dt'];
    }

    /**
     * Sets promise_dt
     *
     * @param string $promise_dt promise_dt
     *
     * @return $this
     */
    public function setPromiseDt($promise_dt)
    {
        $this->container['promise_dt'] = $promise_dt;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets release_nr
     *
     * @return string
     */
    public function getReleaseNr()
    {
        return $this->container['release_nr'];
    }

    /**
     * Sets release_nr
     *
     * @param string $release_nr release_nr
     *
     * @return $this
     */
    public function setReleaseNr($release_nr)
    {
        $this->container['release_nr'] = $release_nr;

        return $this;
    }

    /**
     * Gets req_ship_dt
     *
     * @return string
     */
    public function getReqShipDt()
    {
        return $this->container['req_ship_dt'];
    }

    /**
     * Sets req_ship_dt
     *
     * @param string $req_ship_dt req_ship_dt
     *
     * @return $this
     */
    public function setReqShipDt($req_ship_dt)
    {
        $this->container['req_ship_dt'] = $req_ship_dt;

        return $this;
    }

    /**
     * Gets rush_fl
     *
     * @return string
     */
    public function getRushFl()
    {
        return $this->container['rush_fl'];
    }

    /**
     * Sets rush_fl
     *
     * @param string $rush_fl rush_fl
     *
     * @return $this
     */
    public function setRushFl($rush_fl)
    {
        $this->container['rush_fl'] = $rush_fl;

        return $this;
    }

    /**
     * Gets ship_instr
     *
     * @return string
     */
    public function getShipInstr()
    {
        return $this->container['ship_instr'];
    }

    /**
     * Sets ship_instr
     *
     * @param string $ship_instr ship_instr
     *
     * @return $this
     */
    public function setShipInstr($ship_instr)
    {
        $this->container['ship_instr'] = $ship_instr;

        return $this;
    }

    /**
     * Gets ship_via
     *
     * @return string
     */
    public function getShipVia()
    {
        return $this->container['ship_via'];
    }

    /**
     * Sets ship_via
     *
     * @param string $ship_via ship_via
     *
     * @return $this
     */
    public function setShipVia($ship_via)
    {
        $this->container['ship_via'] = $ship_via;

        return $this;
    }

    /**
     * Gets sub_fl
     *
     * @return string
     */
    public function getSubFl()
    {
        return $this->container['sub_fl'];
    }

    /**
     * Sets sub_fl
     *
     * @param string $sub_fl sub_fl
     *
     * @return $this
     */
    public function setSubFl($sub_fl)
    {
        $this->container['sub_fl'] = $sub_fl;

        return $this;
    }

    /**
     * Gets trans_type
     *
     * @return string
     */
    public function getTransType()
    {
        return $this->container['trans_type'];
    }

    /**
     * Sets trans_type
     *
     * @param string $trans_type trans_type
     *
     * @return $this
     */
    public function setTransType($trans_type)
    {
        $this->container['trans_type'] = $trans_type;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return string
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param string $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return string
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param string $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return string
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param string $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return string
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param string $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }

    /**
     * Gets taxfl
     *
     * @return string
     */
    public function getTaxfl()
    {
        return $this->container['taxfl'];
    }

    /**
     * Sets taxfl
     *
     * @param string $taxfl taxfl
     *
     * @return $this
     */
    public function setTaxfl($taxfl)
    {
        $this->container['taxfl'] = $taxfl;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


