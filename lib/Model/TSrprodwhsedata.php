<?php
/**
 * TSrprodwhsedata
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TSrprodwhsedata Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TSrprodwhsedata implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-srprodwhsedata';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'prod' => 'string',
        'whse' => 'string',
        'descrip1' => 'string',
        'descrip2' => 'string',
        'statustype' => 'string',
        'prodcat' => 'string',
        'unitstock' => 'string',
        'prodline' => 'string',
        'binloc1' => 'string',
        'binloc2' => 'string',
        'unitstnd' => 'string',
        'unitbuy' => 'string',
        'arpvendno' => 'double',
        'orderpt' => 'double',
        'ordqtyin' => 'double',
        'netavail' => 'double',
        'qtyonord' => 'double',
        'qtyunavail' => 'double',
        'custfixedcost' => 'double',
        'custavgcost' => 'double',
        'avgcost' => 'double',
        'sellprice' => 'double',
        'extprice' => 'double',
        'taxablety' => 'string',
        'billonrcptfl' => 'bool',
        'criticalfl' => 'bool',
        'custlastcost' => 'double',
        'custonlyfl' => 'bool',
        'inclunavqty' => 'string',
        'laborprod' => 'string',
        'linkedprod' => 'string',
        'rcvunavailfl' => 'bool',
        'regrindfl' => 'bool',
        'shelflifefl' => 'bool',
        'srcommcode1' => 'string',
        'srcommcode2' => 'string',
        'srmachine' => 'string',
        'unitused' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'prod' => null,
        'whse' => null,
        'descrip1' => null,
        'descrip2' => null,
        'statustype' => null,
        'prodcat' => null,
        'unitstock' => null,
        'prodline' => null,
        'binloc1' => null,
        'binloc2' => null,
        'unitstnd' => null,
        'unitbuy' => null,
        'arpvendno' => 'double',
        'orderpt' => 'double',
        'ordqtyin' => 'double',
        'netavail' => 'double',
        'qtyonord' => 'double',
        'qtyunavail' => 'double',
        'custfixedcost' => 'double',
        'custavgcost' => 'double',
        'avgcost' => 'double',
        'sellprice' => 'double',
        'extprice' => 'double',
        'taxablety' => null,
        'billonrcptfl' => null,
        'criticalfl' => null,
        'custlastcost' => 'double',
        'custonlyfl' => null,
        'inclunavqty' => null,
        'laborprod' => null,
        'linkedprod' => null,
        'rcvunavailfl' => null,
        'regrindfl' => null,
        'shelflifefl' => null,
        'srcommcode1' => null,
        'srcommcode2' => null,
        'srmachine' => null,
        'unitused' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'prod' => 'prod',
        'whse' => 'whse',
        'descrip1' => 'descrip1',
        'descrip2' => 'descrip2',
        'statustype' => 'statustype',
        'prodcat' => 'prodcat',
        'unitstock' => 'unitstock',
        'prodline' => 'prodline',
        'binloc1' => 'binloc1',
        'binloc2' => 'binloc2',
        'unitstnd' => 'unitstnd',
        'unitbuy' => 'unitbuy',
        'arpvendno' => 'arpvendno',
        'orderpt' => 'orderpt',
        'ordqtyin' => 'ordqtyin',
        'netavail' => 'netavail',
        'qtyonord' => 'qtyonord',
        'qtyunavail' => 'qtyunavail',
        'custfixedcost' => 'custfixedcost',
        'custavgcost' => 'custavgcost',
        'avgcost' => 'avgcost',
        'sellprice' => 'sellprice',
        'extprice' => 'extprice',
        'taxablety' => 'taxablety',
        'billonrcptfl' => 'billonrcptfl',
        'criticalfl' => 'criticalfl',
        'custlastcost' => 'custlastcost',
        'custonlyfl' => 'custonlyfl',
        'inclunavqty' => 'inclunavqty',
        'laborprod' => 'laborprod',
        'linkedprod' => 'linkedprod',
        'rcvunavailfl' => 'rcvunavailfl',
        'regrindfl' => 'regrindfl',
        'shelflifefl' => 'shelflifefl',
        'srcommcode1' => 'srcommcode1',
        'srcommcode2' => 'srcommcode2',
        'srmachine' => 'srmachine',
        'unitused' => 'unitused',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'prod' => 'setProd',
        'whse' => 'setWhse',
        'descrip1' => 'setDescrip1',
        'descrip2' => 'setDescrip2',
        'statustype' => 'setStatustype',
        'prodcat' => 'setProdcat',
        'unitstock' => 'setUnitstock',
        'prodline' => 'setProdline',
        'binloc1' => 'setBinloc1',
        'binloc2' => 'setBinloc2',
        'unitstnd' => 'setUnitstnd',
        'unitbuy' => 'setUnitbuy',
        'arpvendno' => 'setArpvendno',
        'orderpt' => 'setOrderpt',
        'ordqtyin' => 'setOrdqtyin',
        'netavail' => 'setNetavail',
        'qtyonord' => 'setQtyonord',
        'qtyunavail' => 'setQtyunavail',
        'custfixedcost' => 'setCustfixedcost',
        'custavgcost' => 'setCustavgcost',
        'avgcost' => 'setAvgcost',
        'sellprice' => 'setSellprice',
        'extprice' => 'setExtprice',
        'taxablety' => 'setTaxablety',
        'billonrcptfl' => 'setBillonrcptfl',
        'criticalfl' => 'setCriticalfl',
        'custlastcost' => 'setCustlastcost',
        'custonlyfl' => 'setCustonlyfl',
        'inclunavqty' => 'setInclunavqty',
        'laborprod' => 'setLaborprod',
        'linkedprod' => 'setLinkedprod',
        'rcvunavailfl' => 'setRcvunavailfl',
        'regrindfl' => 'setRegrindfl',
        'shelflifefl' => 'setShelflifefl',
        'srcommcode1' => 'setSrcommcode1',
        'srcommcode2' => 'setSrcommcode2',
        'srmachine' => 'setSrmachine',
        'unitused' => 'setUnitused',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'prod' => 'getProd',
        'whse' => 'getWhse',
        'descrip1' => 'getDescrip1',
        'descrip2' => 'getDescrip2',
        'statustype' => 'getStatustype',
        'prodcat' => 'getProdcat',
        'unitstock' => 'getUnitstock',
        'prodline' => 'getProdline',
        'binloc1' => 'getBinloc1',
        'binloc2' => 'getBinloc2',
        'unitstnd' => 'getUnitstnd',
        'unitbuy' => 'getUnitbuy',
        'arpvendno' => 'getArpvendno',
        'orderpt' => 'getOrderpt',
        'ordqtyin' => 'getOrdqtyin',
        'netavail' => 'getNetavail',
        'qtyonord' => 'getQtyonord',
        'qtyunavail' => 'getQtyunavail',
        'custfixedcost' => 'getCustfixedcost',
        'custavgcost' => 'getCustavgcost',
        'avgcost' => 'getAvgcost',
        'sellprice' => 'getSellprice',
        'extprice' => 'getExtprice',
        'taxablety' => 'getTaxablety',
        'billonrcptfl' => 'getBillonrcptfl',
        'criticalfl' => 'getCriticalfl',
        'custlastcost' => 'getCustlastcost',
        'custonlyfl' => 'getCustonlyfl',
        'inclunavqty' => 'getInclunavqty',
        'laborprod' => 'getLaborprod',
        'linkedprod' => 'getLinkedprod',
        'rcvunavailfl' => 'getRcvunavailfl',
        'regrindfl' => 'getRegrindfl',
        'shelflifefl' => 'getShelflifefl',
        'srcommcode1' => 'getSrcommcode1',
        'srcommcode2' => 'getSrcommcode2',
        'srmachine' => 'getSrmachine',
        'unitused' => 'getUnitused',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['descrip1'] = isset($data['descrip1']) ? $data['descrip1'] : null;
        $this->container['descrip2'] = isset($data['descrip2']) ? $data['descrip2'] : null;
        $this->container['statustype'] = isset($data['statustype']) ? $data['statustype'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['unitstock'] = isset($data['unitstock']) ? $data['unitstock'] : null;
        $this->container['prodline'] = isset($data['prodline']) ? $data['prodline'] : null;
        $this->container['binloc1'] = isset($data['binloc1']) ? $data['binloc1'] : null;
        $this->container['binloc2'] = isset($data['binloc2']) ? $data['binloc2'] : null;
        $this->container['unitstnd'] = isset($data['unitstnd']) ? $data['unitstnd'] : null;
        $this->container['unitbuy'] = isset($data['unitbuy']) ? $data['unitbuy'] : null;
        $this->container['arpvendno'] = isset($data['arpvendno']) ? $data['arpvendno'] : null;
        $this->container['orderpt'] = isset($data['orderpt']) ? $data['orderpt'] : null;
        $this->container['ordqtyin'] = isset($data['ordqtyin']) ? $data['ordqtyin'] : null;
        $this->container['netavail'] = isset($data['netavail']) ? $data['netavail'] : null;
        $this->container['qtyonord'] = isset($data['qtyonord']) ? $data['qtyonord'] : null;
        $this->container['qtyunavail'] = isset($data['qtyunavail']) ? $data['qtyunavail'] : null;
        $this->container['custfixedcost'] = isset($data['custfixedcost']) ? $data['custfixedcost'] : null;
        $this->container['custavgcost'] = isset($data['custavgcost']) ? $data['custavgcost'] : null;
        $this->container['avgcost'] = isset($data['avgcost']) ? $data['avgcost'] : null;
        $this->container['sellprice'] = isset($data['sellprice']) ? $data['sellprice'] : null;
        $this->container['extprice'] = isset($data['extprice']) ? $data['extprice'] : null;
        $this->container['taxablety'] = isset($data['taxablety']) ? $data['taxablety'] : null;
        $this->container['billonrcptfl'] = isset($data['billonrcptfl']) ? $data['billonrcptfl'] : null;
        $this->container['criticalfl'] = isset($data['criticalfl']) ? $data['criticalfl'] : null;
        $this->container['custlastcost'] = isset($data['custlastcost']) ? $data['custlastcost'] : null;
        $this->container['custonlyfl'] = isset($data['custonlyfl']) ? $data['custonlyfl'] : null;
        $this->container['inclunavqty'] = isset($data['inclunavqty']) ? $data['inclunavqty'] : null;
        $this->container['laborprod'] = isset($data['laborprod']) ? $data['laborprod'] : null;
        $this->container['linkedprod'] = isset($data['linkedprod']) ? $data['linkedprod'] : null;
        $this->container['rcvunavailfl'] = isset($data['rcvunavailfl']) ? $data['rcvunavailfl'] : null;
        $this->container['regrindfl'] = isset($data['regrindfl']) ? $data['regrindfl'] : null;
        $this->container['shelflifefl'] = isset($data['shelflifefl']) ? $data['shelflifefl'] : null;
        $this->container['srcommcode1'] = isset($data['srcommcode1']) ? $data['srcommcode1'] : null;
        $this->container['srcommcode2'] = isset($data['srcommcode2']) ? $data['srcommcode2'] : null;
        $this->container['srmachine'] = isset($data['srmachine']) ? $data['srmachine'] : null;
        $this->container['unitused'] = isset($data['unitused']) ? $data['unitused'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets descrip1
     *
     * @return string
     */
    public function getDescrip1()
    {
        return $this->container['descrip1'];
    }

    /**
     * Sets descrip1
     *
     * @param string $descrip1 descrip1
     *
     * @return $this
     */
    public function setDescrip1($descrip1)
    {
        $this->container['descrip1'] = $descrip1;

        return $this;
    }

    /**
     * Gets descrip2
     *
     * @return string
     */
    public function getDescrip2()
    {
        return $this->container['descrip2'];
    }

    /**
     * Sets descrip2
     *
     * @param string $descrip2 descrip2
     *
     * @return $this
     */
    public function setDescrip2($descrip2)
    {
        $this->container['descrip2'] = $descrip2;

        return $this;
    }

    /**
     * Gets statustype
     *
     * @return string
     */
    public function getStatustype()
    {
        return $this->container['statustype'];
    }

    /**
     * Sets statustype
     *
     * @param string $statustype statustype
     *
     * @return $this
     */
    public function setStatustype($statustype)
    {
        $this->container['statustype'] = $statustype;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets unitstock
     *
     * @return string
     */
    public function getUnitstock()
    {
        return $this->container['unitstock'];
    }

    /**
     * Sets unitstock
     *
     * @param string $unitstock unitstock
     *
     * @return $this
     */
    public function setUnitstock($unitstock)
    {
        $this->container['unitstock'] = $unitstock;

        return $this;
    }

    /**
     * Gets prodline
     *
     * @return string
     */
    public function getProdline()
    {
        return $this->container['prodline'];
    }

    /**
     * Sets prodline
     *
     * @param string $prodline prodline
     *
     * @return $this
     */
    public function setProdline($prodline)
    {
        $this->container['prodline'] = $prodline;

        return $this;
    }

    /**
     * Gets binloc1
     *
     * @return string
     */
    public function getBinloc1()
    {
        return $this->container['binloc1'];
    }

    /**
     * Sets binloc1
     *
     * @param string $binloc1 binloc1
     *
     * @return $this
     */
    public function setBinloc1($binloc1)
    {
        $this->container['binloc1'] = $binloc1;

        return $this;
    }

    /**
     * Gets binloc2
     *
     * @return string
     */
    public function getBinloc2()
    {
        return $this->container['binloc2'];
    }

    /**
     * Sets binloc2
     *
     * @param string $binloc2 binloc2
     *
     * @return $this
     */
    public function setBinloc2($binloc2)
    {
        $this->container['binloc2'] = $binloc2;

        return $this;
    }

    /**
     * Gets unitstnd
     *
     * @return string
     */
    public function getUnitstnd()
    {
        return $this->container['unitstnd'];
    }

    /**
     * Sets unitstnd
     *
     * @param string $unitstnd unitstnd
     *
     * @return $this
     */
    public function setUnitstnd($unitstnd)
    {
        $this->container['unitstnd'] = $unitstnd;

        return $this;
    }

    /**
     * Gets unitbuy
     *
     * @return string
     */
    public function getUnitbuy()
    {
        return $this->container['unitbuy'];
    }

    /**
     * Sets unitbuy
     *
     * @param string $unitbuy unitbuy
     *
     * @return $this
     */
    public function setUnitbuy($unitbuy)
    {
        $this->container['unitbuy'] = $unitbuy;

        return $this;
    }

    /**
     * Gets arpvendno
     *
     * @return double
     */
    public function getArpvendno()
    {
        return $this->container['arpvendno'];
    }

    /**
     * Sets arpvendno
     *
     * @param double $arpvendno arpvendno
     *
     * @return $this
     */
    public function setArpvendno($arpvendno)
    {
        $this->container['arpvendno'] = $arpvendno;

        return $this;
    }

    /**
     * Gets orderpt
     *
     * @return double
     */
    public function getOrderpt()
    {
        return $this->container['orderpt'];
    }

    /**
     * Sets orderpt
     *
     * @param double $orderpt orderpt
     *
     * @return $this
     */
    public function setOrderpt($orderpt)
    {
        $this->container['orderpt'] = $orderpt;

        return $this;
    }

    /**
     * Gets ordqtyin
     *
     * @return double
     */
    public function getOrdqtyin()
    {
        return $this->container['ordqtyin'];
    }

    /**
     * Sets ordqtyin
     *
     * @param double $ordqtyin ordqtyin
     *
     * @return $this
     */
    public function setOrdqtyin($ordqtyin)
    {
        $this->container['ordqtyin'] = $ordqtyin;

        return $this;
    }

    /**
     * Gets netavail
     *
     * @return double
     */
    public function getNetavail()
    {
        return $this->container['netavail'];
    }

    /**
     * Sets netavail
     *
     * @param double $netavail netavail
     *
     * @return $this
     */
    public function setNetavail($netavail)
    {
        $this->container['netavail'] = $netavail;

        return $this;
    }

    /**
     * Gets qtyonord
     *
     * @return double
     */
    public function getQtyonord()
    {
        return $this->container['qtyonord'];
    }

    /**
     * Sets qtyonord
     *
     * @param double $qtyonord qtyonord
     *
     * @return $this
     */
    public function setQtyonord($qtyonord)
    {
        $this->container['qtyonord'] = $qtyonord;

        return $this;
    }

    /**
     * Gets qtyunavail
     *
     * @return double
     */
    public function getQtyunavail()
    {
        return $this->container['qtyunavail'];
    }

    /**
     * Sets qtyunavail
     *
     * @param double $qtyunavail qtyunavail
     *
     * @return $this
     */
    public function setQtyunavail($qtyunavail)
    {
        $this->container['qtyunavail'] = $qtyunavail;

        return $this;
    }

    /**
     * Gets custfixedcost
     *
     * @return double
     */
    public function getCustfixedcost()
    {
        return $this->container['custfixedcost'];
    }

    /**
     * Sets custfixedcost
     *
     * @param double $custfixedcost custfixedcost
     *
     * @return $this
     */
    public function setCustfixedcost($custfixedcost)
    {
        $this->container['custfixedcost'] = $custfixedcost;

        return $this;
    }

    /**
     * Gets custavgcost
     *
     * @return double
     */
    public function getCustavgcost()
    {
        return $this->container['custavgcost'];
    }

    /**
     * Sets custavgcost
     *
     * @param double $custavgcost custavgcost
     *
     * @return $this
     */
    public function setCustavgcost($custavgcost)
    {
        $this->container['custavgcost'] = $custavgcost;

        return $this;
    }

    /**
     * Gets avgcost
     *
     * @return double
     */
    public function getAvgcost()
    {
        return $this->container['avgcost'];
    }

    /**
     * Sets avgcost
     *
     * @param double $avgcost avgcost
     *
     * @return $this
     */
    public function setAvgcost($avgcost)
    {
        $this->container['avgcost'] = $avgcost;

        return $this;
    }

    /**
     * Gets sellprice
     *
     * @return double
     */
    public function getSellprice()
    {
        return $this->container['sellprice'];
    }

    /**
     * Sets sellprice
     *
     * @param double $sellprice sellprice
     *
     * @return $this
     */
    public function setSellprice($sellprice)
    {
        $this->container['sellprice'] = $sellprice;

        return $this;
    }

    /**
     * Gets extprice
     *
     * @return double
     */
    public function getExtprice()
    {
        return $this->container['extprice'];
    }

    /**
     * Sets extprice
     *
     * @param double $extprice extprice
     *
     * @return $this
     */
    public function setExtprice($extprice)
    {
        $this->container['extprice'] = $extprice;

        return $this;
    }

    /**
     * Gets taxablety
     *
     * @return string
     */
    public function getTaxablety()
    {
        return $this->container['taxablety'];
    }

    /**
     * Sets taxablety
     *
     * @param string $taxablety taxablety
     *
     * @return $this
     */
    public function setTaxablety($taxablety)
    {
        $this->container['taxablety'] = $taxablety;

        return $this;
    }

    /**
     * Gets billonrcptfl
     *
     * @return bool
     */
    public function getBillonrcptfl()
    {
        return $this->container['billonrcptfl'];
    }

    /**
     * Sets billonrcptfl
     *
     * @param bool $billonrcptfl billonrcptfl
     *
     * @return $this
     */
    public function setBillonrcptfl($billonrcptfl)
    {
        $this->container['billonrcptfl'] = $billonrcptfl;

        return $this;
    }

    /**
     * Gets criticalfl
     *
     * @return bool
     */
    public function getCriticalfl()
    {
        return $this->container['criticalfl'];
    }

    /**
     * Sets criticalfl
     *
     * @param bool $criticalfl criticalfl
     *
     * @return $this
     */
    public function setCriticalfl($criticalfl)
    {
        $this->container['criticalfl'] = $criticalfl;

        return $this;
    }

    /**
     * Gets custlastcost
     *
     * @return double
     */
    public function getCustlastcost()
    {
        return $this->container['custlastcost'];
    }

    /**
     * Sets custlastcost
     *
     * @param double $custlastcost custlastcost
     *
     * @return $this
     */
    public function setCustlastcost($custlastcost)
    {
        $this->container['custlastcost'] = $custlastcost;

        return $this;
    }

    /**
     * Gets custonlyfl
     *
     * @return bool
     */
    public function getCustonlyfl()
    {
        return $this->container['custonlyfl'];
    }

    /**
     * Sets custonlyfl
     *
     * @param bool $custonlyfl custonlyfl
     *
     * @return $this
     */
    public function setCustonlyfl($custonlyfl)
    {
        $this->container['custonlyfl'] = $custonlyfl;

        return $this;
    }

    /**
     * Gets inclunavqty
     *
     * @return string
     */
    public function getInclunavqty()
    {
        return $this->container['inclunavqty'];
    }

    /**
     * Sets inclunavqty
     *
     * @param string $inclunavqty inclunavqty
     *
     * @return $this
     */
    public function setInclunavqty($inclunavqty)
    {
        $this->container['inclunavqty'] = $inclunavqty;

        return $this;
    }

    /**
     * Gets laborprod
     *
     * @return string
     */
    public function getLaborprod()
    {
        return $this->container['laborprod'];
    }

    /**
     * Sets laborprod
     *
     * @param string $laborprod laborprod
     *
     * @return $this
     */
    public function setLaborprod($laborprod)
    {
        $this->container['laborprod'] = $laborprod;

        return $this;
    }

    /**
     * Gets linkedprod
     *
     * @return string
     */
    public function getLinkedprod()
    {
        return $this->container['linkedprod'];
    }

    /**
     * Sets linkedprod
     *
     * @param string $linkedprod linkedprod
     *
     * @return $this
     */
    public function setLinkedprod($linkedprod)
    {
        $this->container['linkedprod'] = $linkedprod;

        return $this;
    }

    /**
     * Gets rcvunavailfl
     *
     * @return bool
     */
    public function getRcvunavailfl()
    {
        return $this->container['rcvunavailfl'];
    }

    /**
     * Sets rcvunavailfl
     *
     * @param bool $rcvunavailfl rcvunavailfl
     *
     * @return $this
     */
    public function setRcvunavailfl($rcvunavailfl)
    {
        $this->container['rcvunavailfl'] = $rcvunavailfl;

        return $this;
    }

    /**
     * Gets regrindfl
     *
     * @return bool
     */
    public function getRegrindfl()
    {
        return $this->container['regrindfl'];
    }

    /**
     * Sets regrindfl
     *
     * @param bool $regrindfl regrindfl
     *
     * @return $this
     */
    public function setRegrindfl($regrindfl)
    {
        $this->container['regrindfl'] = $regrindfl;

        return $this;
    }

    /**
     * Gets shelflifefl
     *
     * @return bool
     */
    public function getShelflifefl()
    {
        return $this->container['shelflifefl'];
    }

    /**
     * Sets shelflifefl
     *
     * @param bool $shelflifefl shelflifefl
     *
     * @return $this
     */
    public function setShelflifefl($shelflifefl)
    {
        $this->container['shelflifefl'] = $shelflifefl;

        return $this;
    }

    /**
     * Gets srcommcode1
     *
     * @return string
     */
    public function getSrcommcode1()
    {
        return $this->container['srcommcode1'];
    }

    /**
     * Sets srcommcode1
     *
     * @param string $srcommcode1 srcommcode1
     *
     * @return $this
     */
    public function setSrcommcode1($srcommcode1)
    {
        $this->container['srcommcode1'] = $srcommcode1;

        return $this;
    }

    /**
     * Gets srcommcode2
     *
     * @return string
     */
    public function getSrcommcode2()
    {
        return $this->container['srcommcode2'];
    }

    /**
     * Sets srcommcode2
     *
     * @param string $srcommcode2 srcommcode2
     *
     * @return $this
     */
    public function setSrcommcode2($srcommcode2)
    {
        $this->container['srcommcode2'] = $srcommcode2;

        return $this;
    }

    /**
     * Gets srmachine
     *
     * @return string
     */
    public function getSrmachine()
    {
        return $this->container['srmachine'];
    }

    /**
     * Sets srmachine
     *
     * @param string $srmachine srmachine
     *
     * @return $this
     */
    public function setSrmachine($srmachine)
    {
        $this->container['srmachine'] = $srmachine;

        return $this;
    }

    /**
     * Gets unitused
     *
     * @return string
     */
    public function getUnitused()
    {
        return $this->container['unitused'];
    }

    /**
     * Sets unitused
     *
     * @param string $unitused unitused
     *
     * @return $this
     */
    public function setUnitused($unitused)
    {
        $this->container['unitused'] = $unitused;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


