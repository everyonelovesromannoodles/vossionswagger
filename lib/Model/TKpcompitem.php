<?php
/**
 * TKpcompitem
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TKpcompitem Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TKpcompitem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-kpcompitem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'altwhse' => 'string',
        'arpprodline' => 'string',
        'arpvendno' => 'double',
        'arpwhse' => 'string',
        'commcost' => 'double',
        'compboty' => 'string',
        'comptype' => 'string',
        'custno' => 'double',
        'glcost' => 'double',
        'groupoptname' => 'string',
        'instructions' => 'string',
        'lineno' => 'int',
        'linealtno' => 'int',
        'orderno' => 'int',
        'ordersuf' => 'int',
        'ordertype' => 'string',
        'orderaltno' => 'int',
        'orderalttype' => 'string',
        'price' => 'double',
        'pricetype' => 'string',
        'processtatfl' => 'bool',
        'prodcat' => 'string',
        'prodcost' => 'double',
        'proddesc' => 'string',
        'proddesc2' => 'string',
        'qtyfmrcvs' => 'double',
        'qtyneeded' => 'double',
        'qtyord' => 'double',
        'qtyreservd' => 'double',
        'qtyship' => 'double',
        'refer' => 'string',
        'reqfl' => 'bool',
        'reqprod' => 'string',
        'seqno' => 'int',
        'serlottype' => 'string',
        'shipprod' => 'string',
        'shipto' => 'string',
        'sortfield' => 'string',
        'specnstype' => 'string',
        'statustype' => 'string',
        'stkqtyord' => 'double',
        'stkqtyship' => 'double',
        'subfl' => 'bool',
        'unit' => 'string',
        'variablefl' => 'bool',
        'whse' => 'string',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime',
        'userfield' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'altwhse' => null,
        'arpprodline' => null,
        'arpvendno' => 'double',
        'arpwhse' => null,
        'commcost' => 'double',
        'compboty' => null,
        'comptype' => null,
        'custno' => 'double',
        'glcost' => 'double',
        'groupoptname' => null,
        'instructions' => null,
        'lineno' => 'int64',
        'linealtno' => 'int64',
        'orderno' => 'int64',
        'ordersuf' => 'int64',
        'ordertype' => null,
        'orderaltno' => 'int64',
        'orderalttype' => null,
        'price' => 'double',
        'pricetype' => null,
        'processtatfl' => null,
        'prodcat' => null,
        'prodcost' => 'double',
        'proddesc' => null,
        'proddesc2' => null,
        'qtyfmrcvs' => 'double',
        'qtyneeded' => 'double',
        'qtyord' => 'double',
        'qtyreservd' => 'double',
        'qtyship' => 'double',
        'refer' => null,
        'reqfl' => null,
        'reqprod' => null,
        'seqno' => 'int64',
        'serlottype' => null,
        'shipprod' => null,
        'shipto' => null,
        'sortfield' => null,
        'specnstype' => null,
        'statustype' => null,
        'stkqtyord' => 'double',
        'stkqtyship' => 'double',
        'subfl' => null,
        'unit' => null,
        'variablefl' => null,
        'whse' => null,
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date',
        'userfield' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'altwhse' => 'altwhse',
        'arpprodline' => 'arpprodline',
        'arpvendno' => 'arpvendno',
        'arpwhse' => 'arpwhse',
        'commcost' => 'commcost',
        'compboty' => 'compboty',
        'comptype' => 'comptype',
        'custno' => 'custno',
        'glcost' => 'glcost',
        'groupoptname' => 'groupoptname',
        'instructions' => 'instructions',
        'lineno' => 'lineno',
        'linealtno' => 'linealtno',
        'orderno' => 'orderno',
        'ordersuf' => 'ordersuf',
        'ordertype' => 'ordertype',
        'orderaltno' => 'orderaltno',
        'orderalttype' => 'orderalttype',
        'price' => 'price',
        'pricetype' => 'pricetype',
        'processtatfl' => 'processtatfl',
        'prodcat' => 'prodcat',
        'prodcost' => 'prodcost',
        'proddesc' => 'proddesc',
        'proddesc2' => 'proddesc2',
        'qtyfmrcvs' => 'qtyfmrcvs',
        'qtyneeded' => 'qtyneeded',
        'qtyord' => 'qtyord',
        'qtyreservd' => 'qtyreservd',
        'qtyship' => 'qtyship',
        'refer' => 'refer',
        'reqfl' => 'reqfl',
        'reqprod' => 'reqprod',
        'seqno' => 'seqno',
        'serlottype' => 'serlottype',
        'shipprod' => 'shipprod',
        'shipto' => 'shipto',
        'sortfield' => 'sortfield',
        'specnstype' => 'specnstype',
        'statustype' => 'statustype',
        'stkqtyord' => 'stkqtyord',
        'stkqtyship' => 'stkqtyship',
        'subfl' => 'subfl',
        'unit' => 'unit',
        'variablefl' => 'variablefl',
        'whse' => 'whse',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9',
        'userfield' => 'userfield'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'altwhse' => 'setAltwhse',
        'arpprodline' => 'setArpprodline',
        'arpvendno' => 'setArpvendno',
        'arpwhse' => 'setArpwhse',
        'commcost' => 'setCommcost',
        'compboty' => 'setCompboty',
        'comptype' => 'setComptype',
        'custno' => 'setCustno',
        'glcost' => 'setGlcost',
        'groupoptname' => 'setGroupoptname',
        'instructions' => 'setInstructions',
        'lineno' => 'setLineno',
        'linealtno' => 'setLinealtno',
        'orderno' => 'setOrderno',
        'ordersuf' => 'setOrdersuf',
        'ordertype' => 'setOrdertype',
        'orderaltno' => 'setOrderaltno',
        'orderalttype' => 'setOrderalttype',
        'price' => 'setPrice',
        'pricetype' => 'setPricetype',
        'processtatfl' => 'setProcesstatfl',
        'prodcat' => 'setProdcat',
        'prodcost' => 'setProdcost',
        'proddesc' => 'setProddesc',
        'proddesc2' => 'setProddesc2',
        'qtyfmrcvs' => 'setQtyfmrcvs',
        'qtyneeded' => 'setQtyneeded',
        'qtyord' => 'setQtyord',
        'qtyreservd' => 'setQtyreservd',
        'qtyship' => 'setQtyship',
        'refer' => 'setRefer',
        'reqfl' => 'setReqfl',
        'reqprod' => 'setReqprod',
        'seqno' => 'setSeqno',
        'serlottype' => 'setSerlottype',
        'shipprod' => 'setShipprod',
        'shipto' => 'setShipto',
        'sortfield' => 'setSortfield',
        'specnstype' => 'setSpecnstype',
        'statustype' => 'setStatustype',
        'stkqtyord' => 'setStkqtyord',
        'stkqtyship' => 'setStkqtyship',
        'subfl' => 'setSubfl',
        'unit' => 'setUnit',
        'variablefl' => 'setVariablefl',
        'whse' => 'setWhse',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9',
        'userfield' => 'setUserfield'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'altwhse' => 'getAltwhse',
        'arpprodline' => 'getArpprodline',
        'arpvendno' => 'getArpvendno',
        'arpwhse' => 'getArpwhse',
        'commcost' => 'getCommcost',
        'compboty' => 'getCompboty',
        'comptype' => 'getComptype',
        'custno' => 'getCustno',
        'glcost' => 'getGlcost',
        'groupoptname' => 'getGroupoptname',
        'instructions' => 'getInstructions',
        'lineno' => 'getLineno',
        'linealtno' => 'getLinealtno',
        'orderno' => 'getOrderno',
        'ordersuf' => 'getOrdersuf',
        'ordertype' => 'getOrdertype',
        'orderaltno' => 'getOrderaltno',
        'orderalttype' => 'getOrderalttype',
        'price' => 'getPrice',
        'pricetype' => 'getPricetype',
        'processtatfl' => 'getProcesstatfl',
        'prodcat' => 'getProdcat',
        'prodcost' => 'getProdcost',
        'proddesc' => 'getProddesc',
        'proddesc2' => 'getProddesc2',
        'qtyfmrcvs' => 'getQtyfmrcvs',
        'qtyneeded' => 'getQtyneeded',
        'qtyord' => 'getQtyord',
        'qtyreservd' => 'getQtyreservd',
        'qtyship' => 'getQtyship',
        'refer' => 'getRefer',
        'reqfl' => 'getReqfl',
        'reqprod' => 'getReqprod',
        'seqno' => 'getSeqno',
        'serlottype' => 'getSerlottype',
        'shipprod' => 'getShipprod',
        'shipto' => 'getShipto',
        'sortfield' => 'getSortfield',
        'specnstype' => 'getSpecnstype',
        'statustype' => 'getStatustype',
        'stkqtyord' => 'getStkqtyord',
        'stkqtyship' => 'getStkqtyship',
        'subfl' => 'getSubfl',
        'unit' => 'getUnit',
        'variablefl' => 'getVariablefl',
        'whse' => 'getWhse',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9',
        'userfield' => 'getUserfield'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['altwhse'] = isset($data['altwhse']) ? $data['altwhse'] : null;
        $this->container['arpprodline'] = isset($data['arpprodline']) ? $data['arpprodline'] : null;
        $this->container['arpvendno'] = isset($data['arpvendno']) ? $data['arpvendno'] : null;
        $this->container['arpwhse'] = isset($data['arpwhse']) ? $data['arpwhse'] : null;
        $this->container['commcost'] = isset($data['commcost']) ? $data['commcost'] : null;
        $this->container['compboty'] = isset($data['compboty']) ? $data['compboty'] : null;
        $this->container['comptype'] = isset($data['comptype']) ? $data['comptype'] : null;
        $this->container['custno'] = isset($data['custno']) ? $data['custno'] : null;
        $this->container['glcost'] = isset($data['glcost']) ? $data['glcost'] : null;
        $this->container['groupoptname'] = isset($data['groupoptname']) ? $data['groupoptname'] : null;
        $this->container['instructions'] = isset($data['instructions']) ? $data['instructions'] : null;
        $this->container['lineno'] = isset($data['lineno']) ? $data['lineno'] : null;
        $this->container['linealtno'] = isset($data['linealtno']) ? $data['linealtno'] : null;
        $this->container['orderno'] = isset($data['orderno']) ? $data['orderno'] : null;
        $this->container['ordersuf'] = isset($data['ordersuf']) ? $data['ordersuf'] : null;
        $this->container['ordertype'] = isset($data['ordertype']) ? $data['ordertype'] : null;
        $this->container['orderaltno'] = isset($data['orderaltno']) ? $data['orderaltno'] : null;
        $this->container['orderalttype'] = isset($data['orderalttype']) ? $data['orderalttype'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['pricetype'] = isset($data['pricetype']) ? $data['pricetype'] : null;
        $this->container['processtatfl'] = isset($data['processtatfl']) ? $data['processtatfl'] : null;
        $this->container['prodcat'] = isset($data['prodcat']) ? $data['prodcat'] : null;
        $this->container['prodcost'] = isset($data['prodcost']) ? $data['prodcost'] : null;
        $this->container['proddesc'] = isset($data['proddesc']) ? $data['proddesc'] : null;
        $this->container['proddesc2'] = isset($data['proddesc2']) ? $data['proddesc2'] : null;
        $this->container['qtyfmrcvs'] = isset($data['qtyfmrcvs']) ? $data['qtyfmrcvs'] : null;
        $this->container['qtyneeded'] = isset($data['qtyneeded']) ? $data['qtyneeded'] : null;
        $this->container['qtyord'] = isset($data['qtyord']) ? $data['qtyord'] : null;
        $this->container['qtyreservd'] = isset($data['qtyreservd']) ? $data['qtyreservd'] : null;
        $this->container['qtyship'] = isset($data['qtyship']) ? $data['qtyship'] : null;
        $this->container['refer'] = isset($data['refer']) ? $data['refer'] : null;
        $this->container['reqfl'] = isset($data['reqfl']) ? $data['reqfl'] : null;
        $this->container['reqprod'] = isset($data['reqprod']) ? $data['reqprod'] : null;
        $this->container['seqno'] = isset($data['seqno']) ? $data['seqno'] : null;
        $this->container['serlottype'] = isset($data['serlottype']) ? $data['serlottype'] : null;
        $this->container['shipprod'] = isset($data['shipprod']) ? $data['shipprod'] : null;
        $this->container['shipto'] = isset($data['shipto']) ? $data['shipto'] : null;
        $this->container['sortfield'] = isset($data['sortfield']) ? $data['sortfield'] : null;
        $this->container['specnstype'] = isset($data['specnstype']) ? $data['specnstype'] : null;
        $this->container['statustype'] = isset($data['statustype']) ? $data['statustype'] : null;
        $this->container['stkqtyord'] = isset($data['stkqtyord']) ? $data['stkqtyord'] : null;
        $this->container['stkqtyship'] = isset($data['stkqtyship']) ? $data['stkqtyship'] : null;
        $this->container['subfl'] = isset($data['subfl']) ? $data['subfl'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['variablefl'] = isset($data['variablefl']) ? $data['variablefl'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
        $this->container['userfield'] = isset($data['userfield']) ? $data['userfield'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets altwhse
     *
     * @return string
     */
    public function getAltwhse()
    {
        return $this->container['altwhse'];
    }

    /**
     * Sets altwhse
     *
     * @param string $altwhse altwhse
     *
     * @return $this
     */
    public function setAltwhse($altwhse)
    {
        $this->container['altwhse'] = $altwhse;

        return $this;
    }

    /**
     * Gets arpprodline
     *
     * @return string
     */
    public function getArpprodline()
    {
        return $this->container['arpprodline'];
    }

    /**
     * Sets arpprodline
     *
     * @param string $arpprodline arpprodline
     *
     * @return $this
     */
    public function setArpprodline($arpprodline)
    {
        $this->container['arpprodline'] = $arpprodline;

        return $this;
    }

    /**
     * Gets arpvendno
     *
     * @return double
     */
    public function getArpvendno()
    {
        return $this->container['arpvendno'];
    }

    /**
     * Sets arpvendno
     *
     * @param double $arpvendno arpvendno
     *
     * @return $this
     */
    public function setArpvendno($arpvendno)
    {
        $this->container['arpvendno'] = $arpvendno;

        return $this;
    }

    /**
     * Gets arpwhse
     *
     * @return string
     */
    public function getArpwhse()
    {
        return $this->container['arpwhse'];
    }

    /**
     * Sets arpwhse
     *
     * @param string $arpwhse arpwhse
     *
     * @return $this
     */
    public function setArpwhse($arpwhse)
    {
        $this->container['arpwhse'] = $arpwhse;

        return $this;
    }

    /**
     * Gets commcost
     *
     * @return double
     */
    public function getCommcost()
    {
        return $this->container['commcost'];
    }

    /**
     * Sets commcost
     *
     * @param double $commcost commcost
     *
     * @return $this
     */
    public function setCommcost($commcost)
    {
        $this->container['commcost'] = $commcost;

        return $this;
    }

    /**
     * Gets compboty
     *
     * @return string
     */
    public function getCompboty()
    {
        return $this->container['compboty'];
    }

    /**
     * Sets compboty
     *
     * @param string $compboty compboty
     *
     * @return $this
     */
    public function setCompboty($compboty)
    {
        $this->container['compboty'] = $compboty;

        return $this;
    }

    /**
     * Gets comptype
     *
     * @return string
     */
    public function getComptype()
    {
        return $this->container['comptype'];
    }

    /**
     * Sets comptype
     *
     * @param string $comptype comptype
     *
     * @return $this
     */
    public function setComptype($comptype)
    {
        $this->container['comptype'] = $comptype;

        return $this;
    }

    /**
     * Gets custno
     *
     * @return double
     */
    public function getCustno()
    {
        return $this->container['custno'];
    }

    /**
     * Sets custno
     *
     * @param double $custno custno
     *
     * @return $this
     */
    public function setCustno($custno)
    {
        $this->container['custno'] = $custno;

        return $this;
    }

    /**
     * Gets glcost
     *
     * @return double
     */
    public function getGlcost()
    {
        return $this->container['glcost'];
    }

    /**
     * Sets glcost
     *
     * @param double $glcost glcost
     *
     * @return $this
     */
    public function setGlcost($glcost)
    {
        $this->container['glcost'] = $glcost;

        return $this;
    }

    /**
     * Gets groupoptname
     *
     * @return string
     */
    public function getGroupoptname()
    {
        return $this->container['groupoptname'];
    }

    /**
     * Sets groupoptname
     *
     * @param string $groupoptname groupoptname
     *
     * @return $this
     */
    public function setGroupoptname($groupoptname)
    {
        $this->container['groupoptname'] = $groupoptname;

        return $this;
    }

    /**
     * Gets instructions
     *
     * @return string
     */
    public function getInstructions()
    {
        return $this->container['instructions'];
    }

    /**
     * Sets instructions
     *
     * @param string $instructions instructions
     *
     * @return $this
     */
    public function setInstructions($instructions)
    {
        $this->container['instructions'] = $instructions;

        return $this;
    }

    /**
     * Gets lineno
     *
     * @return int
     */
    public function getLineno()
    {
        return $this->container['lineno'];
    }

    /**
     * Sets lineno
     *
     * @param int $lineno lineno
     *
     * @return $this
     */
    public function setLineno($lineno)
    {
        $this->container['lineno'] = $lineno;

        return $this;
    }

    /**
     * Gets linealtno
     *
     * @return int
     */
    public function getLinealtno()
    {
        return $this->container['linealtno'];
    }

    /**
     * Sets linealtno
     *
     * @param int $linealtno linealtno
     *
     * @return $this
     */
    public function setLinealtno($linealtno)
    {
        $this->container['linealtno'] = $linealtno;

        return $this;
    }

    /**
     * Gets orderno
     *
     * @return int
     */
    public function getOrderno()
    {
        return $this->container['orderno'];
    }

    /**
     * Sets orderno
     *
     * @param int $orderno orderno
     *
     * @return $this
     */
    public function setOrderno($orderno)
    {
        $this->container['orderno'] = $orderno;

        return $this;
    }

    /**
     * Gets ordersuf
     *
     * @return int
     */
    public function getOrdersuf()
    {
        return $this->container['ordersuf'];
    }

    /**
     * Sets ordersuf
     *
     * @param int $ordersuf ordersuf
     *
     * @return $this
     */
    public function setOrdersuf($ordersuf)
    {
        $this->container['ordersuf'] = $ordersuf;

        return $this;
    }

    /**
     * Gets ordertype
     *
     * @return string
     */
    public function getOrdertype()
    {
        return $this->container['ordertype'];
    }

    /**
     * Sets ordertype
     *
     * @param string $ordertype ordertype
     *
     * @return $this
     */
    public function setOrdertype($ordertype)
    {
        $this->container['ordertype'] = $ordertype;

        return $this;
    }

    /**
     * Gets orderaltno
     *
     * @return int
     */
    public function getOrderaltno()
    {
        return $this->container['orderaltno'];
    }

    /**
     * Sets orderaltno
     *
     * @param int $orderaltno orderaltno
     *
     * @return $this
     */
    public function setOrderaltno($orderaltno)
    {
        $this->container['orderaltno'] = $orderaltno;

        return $this;
    }

    /**
     * Gets orderalttype
     *
     * @return string
     */
    public function getOrderalttype()
    {
        return $this->container['orderalttype'];
    }

    /**
     * Sets orderalttype
     *
     * @param string $orderalttype orderalttype
     *
     * @return $this
     */
    public function setOrderalttype($orderalttype)
    {
        $this->container['orderalttype'] = $orderalttype;

        return $this;
    }

    /**
     * Gets price
     *
     * @return double
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param double $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets pricetype
     *
     * @return string
     */
    public function getPricetype()
    {
        return $this->container['pricetype'];
    }

    /**
     * Sets pricetype
     *
     * @param string $pricetype pricetype
     *
     * @return $this
     */
    public function setPricetype($pricetype)
    {
        $this->container['pricetype'] = $pricetype;

        return $this;
    }

    /**
     * Gets processtatfl
     *
     * @return bool
     */
    public function getProcesstatfl()
    {
        return $this->container['processtatfl'];
    }

    /**
     * Sets processtatfl
     *
     * @param bool $processtatfl processtatfl
     *
     * @return $this
     */
    public function setProcesstatfl($processtatfl)
    {
        $this->container['processtatfl'] = $processtatfl;

        return $this;
    }

    /**
     * Gets prodcat
     *
     * @return string
     */
    public function getProdcat()
    {
        return $this->container['prodcat'];
    }

    /**
     * Sets prodcat
     *
     * @param string $prodcat prodcat
     *
     * @return $this
     */
    public function setProdcat($prodcat)
    {
        $this->container['prodcat'] = $prodcat;

        return $this;
    }

    /**
     * Gets prodcost
     *
     * @return double
     */
    public function getProdcost()
    {
        return $this->container['prodcost'];
    }

    /**
     * Sets prodcost
     *
     * @param double $prodcost prodcost
     *
     * @return $this
     */
    public function setProdcost($prodcost)
    {
        $this->container['prodcost'] = $prodcost;

        return $this;
    }

    /**
     * Gets proddesc
     *
     * @return string
     */
    public function getProddesc()
    {
        return $this->container['proddesc'];
    }

    /**
     * Sets proddesc
     *
     * @param string $proddesc proddesc
     *
     * @return $this
     */
    public function setProddesc($proddesc)
    {
        $this->container['proddesc'] = $proddesc;

        return $this;
    }

    /**
     * Gets proddesc2
     *
     * @return string
     */
    public function getProddesc2()
    {
        return $this->container['proddesc2'];
    }

    /**
     * Sets proddesc2
     *
     * @param string $proddesc2 proddesc2
     *
     * @return $this
     */
    public function setProddesc2($proddesc2)
    {
        $this->container['proddesc2'] = $proddesc2;

        return $this;
    }

    /**
     * Gets qtyfmrcvs
     *
     * @return double
     */
    public function getQtyfmrcvs()
    {
        return $this->container['qtyfmrcvs'];
    }

    /**
     * Sets qtyfmrcvs
     *
     * @param double $qtyfmrcvs qtyfmrcvs
     *
     * @return $this
     */
    public function setQtyfmrcvs($qtyfmrcvs)
    {
        $this->container['qtyfmrcvs'] = $qtyfmrcvs;

        return $this;
    }

    /**
     * Gets qtyneeded
     *
     * @return double
     */
    public function getQtyneeded()
    {
        return $this->container['qtyneeded'];
    }

    /**
     * Sets qtyneeded
     *
     * @param double $qtyneeded qtyneeded
     *
     * @return $this
     */
    public function setQtyneeded($qtyneeded)
    {
        $this->container['qtyneeded'] = $qtyneeded;

        return $this;
    }

    /**
     * Gets qtyord
     *
     * @return double
     */
    public function getQtyord()
    {
        return $this->container['qtyord'];
    }

    /**
     * Sets qtyord
     *
     * @param double $qtyord qtyord
     *
     * @return $this
     */
    public function setQtyord($qtyord)
    {
        $this->container['qtyord'] = $qtyord;

        return $this;
    }

    /**
     * Gets qtyreservd
     *
     * @return double
     */
    public function getQtyreservd()
    {
        return $this->container['qtyreservd'];
    }

    /**
     * Sets qtyreservd
     *
     * @param double $qtyreservd qtyreservd
     *
     * @return $this
     */
    public function setQtyreservd($qtyreservd)
    {
        $this->container['qtyreservd'] = $qtyreservd;

        return $this;
    }

    /**
     * Gets qtyship
     *
     * @return double
     */
    public function getQtyship()
    {
        return $this->container['qtyship'];
    }

    /**
     * Sets qtyship
     *
     * @param double $qtyship qtyship
     *
     * @return $this
     */
    public function setQtyship($qtyship)
    {
        $this->container['qtyship'] = $qtyship;

        return $this;
    }

    /**
     * Gets refer
     *
     * @return string
     */
    public function getRefer()
    {
        return $this->container['refer'];
    }

    /**
     * Sets refer
     *
     * @param string $refer refer
     *
     * @return $this
     */
    public function setRefer($refer)
    {
        $this->container['refer'] = $refer;

        return $this;
    }

    /**
     * Gets reqfl
     *
     * @return bool
     */
    public function getReqfl()
    {
        return $this->container['reqfl'];
    }

    /**
     * Sets reqfl
     *
     * @param bool $reqfl reqfl
     *
     * @return $this
     */
    public function setReqfl($reqfl)
    {
        $this->container['reqfl'] = $reqfl;

        return $this;
    }

    /**
     * Gets reqprod
     *
     * @return string
     */
    public function getReqprod()
    {
        return $this->container['reqprod'];
    }

    /**
     * Sets reqprod
     *
     * @param string $reqprod reqprod
     *
     * @return $this
     */
    public function setReqprod($reqprod)
    {
        $this->container['reqprod'] = $reqprod;

        return $this;
    }

    /**
     * Gets seqno
     *
     * @return int
     */
    public function getSeqno()
    {
        return $this->container['seqno'];
    }

    /**
     * Sets seqno
     *
     * @param int $seqno seqno
     *
     * @return $this
     */
    public function setSeqno($seqno)
    {
        $this->container['seqno'] = $seqno;

        return $this;
    }

    /**
     * Gets serlottype
     *
     * @return string
     */
    public function getSerlottype()
    {
        return $this->container['serlottype'];
    }

    /**
     * Sets serlottype
     *
     * @param string $serlottype serlottype
     *
     * @return $this
     */
    public function setSerlottype($serlottype)
    {
        $this->container['serlottype'] = $serlottype;

        return $this;
    }

    /**
     * Gets shipprod
     *
     * @return string
     */
    public function getShipprod()
    {
        return $this->container['shipprod'];
    }

    /**
     * Sets shipprod
     *
     * @param string $shipprod shipprod
     *
     * @return $this
     */
    public function setShipprod($shipprod)
    {
        $this->container['shipprod'] = $shipprod;

        return $this;
    }

    /**
     * Gets shipto
     *
     * @return string
     */
    public function getShipto()
    {
        return $this->container['shipto'];
    }

    /**
     * Sets shipto
     *
     * @param string $shipto shipto
     *
     * @return $this
     */
    public function setShipto($shipto)
    {
        $this->container['shipto'] = $shipto;

        return $this;
    }

    /**
     * Gets sortfield
     *
     * @return string
     */
    public function getSortfield()
    {
        return $this->container['sortfield'];
    }

    /**
     * Sets sortfield
     *
     * @param string $sortfield sortfield
     *
     * @return $this
     */
    public function setSortfield($sortfield)
    {
        $this->container['sortfield'] = $sortfield;

        return $this;
    }

    /**
     * Gets specnstype
     *
     * @return string
     */
    public function getSpecnstype()
    {
        return $this->container['specnstype'];
    }

    /**
     * Sets specnstype
     *
     * @param string $specnstype specnstype
     *
     * @return $this
     */
    public function setSpecnstype($specnstype)
    {
        $this->container['specnstype'] = $specnstype;

        return $this;
    }

    /**
     * Gets statustype
     *
     * @return string
     */
    public function getStatustype()
    {
        return $this->container['statustype'];
    }

    /**
     * Sets statustype
     *
     * @param string $statustype statustype
     *
     * @return $this
     */
    public function setStatustype($statustype)
    {
        $this->container['statustype'] = $statustype;

        return $this;
    }

    /**
     * Gets stkqtyord
     *
     * @return double
     */
    public function getStkqtyord()
    {
        return $this->container['stkqtyord'];
    }

    /**
     * Sets stkqtyord
     *
     * @param double $stkqtyord stkqtyord
     *
     * @return $this
     */
    public function setStkqtyord($stkqtyord)
    {
        $this->container['stkqtyord'] = $stkqtyord;

        return $this;
    }

    /**
     * Gets stkqtyship
     *
     * @return double
     */
    public function getStkqtyship()
    {
        return $this->container['stkqtyship'];
    }

    /**
     * Sets stkqtyship
     *
     * @param double $stkqtyship stkqtyship
     *
     * @return $this
     */
    public function setStkqtyship($stkqtyship)
    {
        $this->container['stkqtyship'] = $stkqtyship;

        return $this;
    }

    /**
     * Gets subfl
     *
     * @return bool
     */
    public function getSubfl()
    {
        return $this->container['subfl'];
    }

    /**
     * Sets subfl
     *
     * @param bool $subfl subfl
     *
     * @return $this
     */
    public function setSubfl($subfl)
    {
        $this->container['subfl'] = $subfl;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets variablefl
     *
     * @return bool
     */
    public function getVariablefl()
    {
        return $this->container['variablefl'];
    }

    /**
     * Sets variablefl
     *
     * @param bool $variablefl variablefl
     *
     * @return $this
     */
    public function setVariablefl($variablefl)
    {
        $this->container['variablefl'] = $variablefl;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }

    /**
     * Gets userfield
     *
     * @return string
     */
    public function getUserfield()
    {
        return $this->container['userfield'];
    }

    /**
     * Sets userfield
     *
     * @param string $userfield userfield
     *
     * @return $this
     */
    public function setUserfield($userfield)
    {
        $this->container['userfield'] = $userfield;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


