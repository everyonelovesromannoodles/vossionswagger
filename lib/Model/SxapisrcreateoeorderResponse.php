<?php
/**
 * SxapisrcreateoeorderResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * SxapisrcreateoeorderResponse Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SxapisrcreateoeorderResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'sxapisrcreateoeorder_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        't_errormsg' => '\Swagger\Client\Model\TErrormsgResp',
        't_srordloadhdrdata' => '\Swagger\Client\Model\TSrordloadhdrdataResp',
        't_srordloadlinedata' => '\Swagger\Client\Model\TSrordloadlinedataResp',
        't_outfieldvalue' => '\Swagger\Client\Model\TOutfieldvalueResp'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        't_errormsg' => null,
        't_srordloadhdrdata' => null,
        't_srordloadlinedata' => null,
        't_outfieldvalue' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        't_errormsg' => 'tErrormsg',
        't_srordloadhdrdata' => 'tSrordloadhdrdata',
        't_srordloadlinedata' => 'tSrordloadlinedata',
        't_outfieldvalue' => 'tOutfieldvalue'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        't_errormsg' => 'setTErrormsg',
        't_srordloadhdrdata' => 'setTSrordloadhdrdata',
        't_srordloadlinedata' => 'setTSrordloadlinedata',
        't_outfieldvalue' => 'setTOutfieldvalue'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        't_errormsg' => 'getTErrormsg',
        't_srordloadhdrdata' => 'getTSrordloadhdrdata',
        't_srordloadlinedata' => 'getTSrordloadlinedata',
        't_outfieldvalue' => 'getTOutfieldvalue'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['t_errormsg'] = isset($data['t_errormsg']) ? $data['t_errormsg'] : null;
        $this->container['t_srordloadhdrdata'] = isset($data['t_srordloadhdrdata']) ? $data['t_srordloadhdrdata'] : null;
        $this->container['t_srordloadlinedata'] = isset($data['t_srordloadlinedata']) ? $data['t_srordloadlinedata'] : null;
        $this->container['t_outfieldvalue'] = isset($data['t_outfieldvalue']) ? $data['t_outfieldvalue'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets t_errormsg
     *
     * @return \Swagger\Client\Model\TErrormsgResp
     */
    public function getTErrormsg()
    {
        return $this->container['t_errormsg'];
    }

    /**
     * Sets t_errormsg
     *
     * @param \Swagger\Client\Model\TErrormsgResp $t_errormsg t_errormsg
     *
     * @return $this
     */
    public function setTErrormsg($t_errormsg)
    {
        $this->container['t_errormsg'] = $t_errormsg;

        return $this;
    }

    /**
     * Gets t_srordloadhdrdata
     *
     * @return \Swagger\Client\Model\TSrordloadhdrdataResp
     */
    public function getTSrordloadhdrdata()
    {
        return $this->container['t_srordloadhdrdata'];
    }

    /**
     * Sets t_srordloadhdrdata
     *
     * @param \Swagger\Client\Model\TSrordloadhdrdataResp $t_srordloadhdrdata t_srordloadhdrdata
     *
     * @return $this
     */
    public function setTSrordloadhdrdata($t_srordloadhdrdata)
    {
        $this->container['t_srordloadhdrdata'] = $t_srordloadhdrdata;

        return $this;
    }

    /**
     * Gets t_srordloadlinedata
     *
     * @return \Swagger\Client\Model\TSrordloadlinedataResp
     */
    public function getTSrordloadlinedata()
    {
        return $this->container['t_srordloadlinedata'];
    }

    /**
     * Sets t_srordloadlinedata
     *
     * @param \Swagger\Client\Model\TSrordloadlinedataResp $t_srordloadlinedata t_srordloadlinedata
     *
     * @return $this
     */
    public function setTSrordloadlinedata($t_srordloadlinedata)
    {
        $this->container['t_srordloadlinedata'] = $t_srordloadlinedata;

        return $this;
    }

    /**
     * Gets t_outfieldvalue
     *
     * @return \Swagger\Client\Model\TOutfieldvalueResp
     */
    public function getTOutfieldvalue()
    {
        return $this->container['t_outfieldvalue'];
    }

    /**
     * Sets t_outfieldvalue
     *
     * @param \Swagger\Client\Model\TOutfieldvalueResp $t_outfieldvalue t_outfieldvalue
     *
     * @return $this
     */
    public function setTOutfieldvalue($t_outfieldvalue)
    {
        $this->container['t_outfieldvalue'] = $t_outfieldvalue;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


