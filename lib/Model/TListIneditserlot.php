<?php
/**
 * TListIneditserlot
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * SX.e API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.32
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * TListIneditserlot Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TListIneditserlot implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 't-list-ineditserlot';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'recseqno' => 'int',
        'serlotty' => 'string',
        'prod' => 'string',
        'whse' => 'string',
        'serlotno' => 'string',
        'type' => 'string',
        'returnfl' => 'string',
        'ictype' => 'string',
        'camefrom' => 'string',
        'orderno' => 'string',
        'ordersuf' => 'string',
        'lineno' => 'int',
        'seqno' => 'int',
        'retorderno' => 'string',
        'retordersuf' => 'string',
        'retlineno' => 'int',
        'retseqno' => 'int',
        'currstatus' => 'string',
        'reasunavty' => 'string',
        'cono2' => 'string',
        'ourproc' => 'string',
        'shiptowhse' => 'string',
        'lotqty' => 'double',
        'qtyunavail' => 'double',
        'qtyavail' => 'double',
        'user1' => 'string',
        'user2' => 'string',
        'user3' => 'string',
        'user4' => 'string',
        'user5' => 'string',
        'user6' => 'double',
        'user7' => 'double',
        'user8' => '\DateTime',
        'user9' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'recseqno' => 'int64',
        'serlotty' => null,
        'prod' => null,
        'whse' => null,
        'serlotno' => null,
        'type' => null,
        'returnfl' => null,
        'ictype' => null,
        'camefrom' => null,
        'orderno' => null,
        'ordersuf' => null,
        'lineno' => 'int64',
        'seqno' => 'int64',
        'retorderno' => null,
        'retordersuf' => null,
        'retlineno' => 'int64',
        'retseqno' => 'int64',
        'currstatus' => null,
        'reasunavty' => null,
        'cono2' => null,
        'ourproc' => null,
        'shiptowhse' => null,
        'lotqty' => 'double',
        'qtyunavail' => 'double',
        'qtyavail' => 'double',
        'user1' => null,
        'user2' => null,
        'user3' => null,
        'user4' => null,
        'user5' => null,
        'user6' => 'double',
        'user7' => 'double',
        'user8' => 'date',
        'user9' => 'date'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'recseqno' => 'recseqno',
        'serlotty' => 'serlotty',
        'prod' => 'prod',
        'whse' => 'whse',
        'serlotno' => 'serlotno',
        'type' => 'type',
        'returnfl' => 'returnfl',
        'ictype' => 'ictype',
        'camefrom' => 'camefrom',
        'orderno' => 'orderno',
        'ordersuf' => 'ordersuf',
        'lineno' => 'lineno',
        'seqno' => 'seqno',
        'retorderno' => 'retorderno',
        'retordersuf' => 'retordersuf',
        'retlineno' => 'retlineno',
        'retseqno' => 'retseqno',
        'currstatus' => 'currstatus',
        'reasunavty' => 'reasunavty',
        'cono2' => 'cono2',
        'ourproc' => 'ourproc',
        'shiptowhse' => 'shiptowhse',
        'lotqty' => 'lotqty',
        'qtyunavail' => 'qtyunavail',
        'qtyavail' => 'qtyavail',
        'user1' => 'user1',
        'user2' => 'user2',
        'user3' => 'user3',
        'user4' => 'user4',
        'user5' => 'user5',
        'user6' => 'user6',
        'user7' => 'user7',
        'user8' => 'user8',
        'user9' => 'user9'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'recseqno' => 'setRecseqno',
        'serlotty' => 'setSerlotty',
        'prod' => 'setProd',
        'whse' => 'setWhse',
        'serlotno' => 'setSerlotno',
        'type' => 'setType',
        'returnfl' => 'setReturnfl',
        'ictype' => 'setIctype',
        'camefrom' => 'setCamefrom',
        'orderno' => 'setOrderno',
        'ordersuf' => 'setOrdersuf',
        'lineno' => 'setLineno',
        'seqno' => 'setSeqno',
        'retorderno' => 'setRetorderno',
        'retordersuf' => 'setRetordersuf',
        'retlineno' => 'setRetlineno',
        'retseqno' => 'setRetseqno',
        'currstatus' => 'setCurrstatus',
        'reasunavty' => 'setReasunavty',
        'cono2' => 'setCono2',
        'ourproc' => 'setOurproc',
        'shiptowhse' => 'setShiptowhse',
        'lotqty' => 'setLotqty',
        'qtyunavail' => 'setQtyunavail',
        'qtyavail' => 'setQtyavail',
        'user1' => 'setUser1',
        'user2' => 'setUser2',
        'user3' => 'setUser3',
        'user4' => 'setUser4',
        'user5' => 'setUser5',
        'user6' => 'setUser6',
        'user7' => 'setUser7',
        'user8' => 'setUser8',
        'user9' => 'setUser9'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'recseqno' => 'getRecseqno',
        'serlotty' => 'getSerlotty',
        'prod' => 'getProd',
        'whse' => 'getWhse',
        'serlotno' => 'getSerlotno',
        'type' => 'getType',
        'returnfl' => 'getReturnfl',
        'ictype' => 'getIctype',
        'camefrom' => 'getCamefrom',
        'orderno' => 'getOrderno',
        'ordersuf' => 'getOrdersuf',
        'lineno' => 'getLineno',
        'seqno' => 'getSeqno',
        'retorderno' => 'getRetorderno',
        'retordersuf' => 'getRetordersuf',
        'retlineno' => 'getRetlineno',
        'retseqno' => 'getRetseqno',
        'currstatus' => 'getCurrstatus',
        'reasunavty' => 'getReasunavty',
        'cono2' => 'getCono2',
        'ourproc' => 'getOurproc',
        'shiptowhse' => 'getShiptowhse',
        'lotqty' => 'getLotqty',
        'qtyunavail' => 'getQtyunavail',
        'qtyavail' => 'getQtyavail',
        'user1' => 'getUser1',
        'user2' => 'getUser2',
        'user3' => 'getUser3',
        'user4' => 'getUser4',
        'user5' => 'getUser5',
        'user6' => 'getUser6',
        'user7' => 'getUser7',
        'user8' => 'getUser8',
        'user9' => 'getUser9'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['recseqno'] = isset($data['recseqno']) ? $data['recseqno'] : null;
        $this->container['serlotty'] = isset($data['serlotty']) ? $data['serlotty'] : null;
        $this->container['prod'] = isset($data['prod']) ? $data['prod'] : null;
        $this->container['whse'] = isset($data['whse']) ? $data['whse'] : null;
        $this->container['serlotno'] = isset($data['serlotno']) ? $data['serlotno'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['returnfl'] = isset($data['returnfl']) ? $data['returnfl'] : null;
        $this->container['ictype'] = isset($data['ictype']) ? $data['ictype'] : null;
        $this->container['camefrom'] = isset($data['camefrom']) ? $data['camefrom'] : null;
        $this->container['orderno'] = isset($data['orderno']) ? $data['orderno'] : null;
        $this->container['ordersuf'] = isset($data['ordersuf']) ? $data['ordersuf'] : null;
        $this->container['lineno'] = isset($data['lineno']) ? $data['lineno'] : null;
        $this->container['seqno'] = isset($data['seqno']) ? $data['seqno'] : null;
        $this->container['retorderno'] = isset($data['retorderno']) ? $data['retorderno'] : null;
        $this->container['retordersuf'] = isset($data['retordersuf']) ? $data['retordersuf'] : null;
        $this->container['retlineno'] = isset($data['retlineno']) ? $data['retlineno'] : null;
        $this->container['retseqno'] = isset($data['retseqno']) ? $data['retseqno'] : null;
        $this->container['currstatus'] = isset($data['currstatus']) ? $data['currstatus'] : null;
        $this->container['reasunavty'] = isset($data['reasunavty']) ? $data['reasunavty'] : null;
        $this->container['cono2'] = isset($data['cono2']) ? $data['cono2'] : null;
        $this->container['ourproc'] = isset($data['ourproc']) ? $data['ourproc'] : null;
        $this->container['shiptowhse'] = isset($data['shiptowhse']) ? $data['shiptowhse'] : null;
        $this->container['lotqty'] = isset($data['lotqty']) ? $data['lotqty'] : null;
        $this->container['qtyunavail'] = isset($data['qtyunavail']) ? $data['qtyunavail'] : null;
        $this->container['qtyavail'] = isset($data['qtyavail']) ? $data['qtyavail'] : null;
        $this->container['user1'] = isset($data['user1']) ? $data['user1'] : null;
        $this->container['user2'] = isset($data['user2']) ? $data['user2'] : null;
        $this->container['user3'] = isset($data['user3']) ? $data['user3'] : null;
        $this->container['user4'] = isset($data['user4']) ? $data['user4'] : null;
        $this->container['user5'] = isset($data['user5']) ? $data['user5'] : null;
        $this->container['user6'] = isset($data['user6']) ? $data['user6'] : null;
        $this->container['user7'] = isset($data['user7']) ? $data['user7'] : null;
        $this->container['user8'] = isset($data['user8']) ? $data['user8'] : null;
        $this->container['user9'] = isset($data['user9']) ? $data['user9'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets recseqno
     *
     * @return int
     */
    public function getRecseqno()
    {
        return $this->container['recseqno'];
    }

    /**
     * Sets recseqno
     *
     * @param int $recseqno recseqno
     *
     * @return $this
     */
    public function setRecseqno($recseqno)
    {
        $this->container['recseqno'] = $recseqno;

        return $this;
    }

    /**
     * Gets serlotty
     *
     * @return string
     */
    public function getSerlotty()
    {
        return $this->container['serlotty'];
    }

    /**
     * Sets serlotty
     *
     * @param string $serlotty serlotty
     *
     * @return $this
     */
    public function setSerlotty($serlotty)
    {
        $this->container['serlotty'] = $serlotty;

        return $this;
    }

    /**
     * Gets prod
     *
     * @return string
     */
    public function getProd()
    {
        return $this->container['prod'];
    }

    /**
     * Sets prod
     *
     * @param string $prod prod
     *
     * @return $this
     */
    public function setProd($prod)
    {
        $this->container['prod'] = $prod;

        return $this;
    }

    /**
     * Gets whse
     *
     * @return string
     */
    public function getWhse()
    {
        return $this->container['whse'];
    }

    /**
     * Sets whse
     *
     * @param string $whse whse
     *
     * @return $this
     */
    public function setWhse($whse)
    {
        $this->container['whse'] = $whse;

        return $this;
    }

    /**
     * Gets serlotno
     *
     * @return string
     */
    public function getSerlotno()
    {
        return $this->container['serlotno'];
    }

    /**
     * Sets serlotno
     *
     * @param string $serlotno serlotno
     *
     * @return $this
     */
    public function setSerlotno($serlotno)
    {
        $this->container['serlotno'] = $serlotno;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets returnfl
     *
     * @return string
     */
    public function getReturnfl()
    {
        return $this->container['returnfl'];
    }

    /**
     * Sets returnfl
     *
     * @param string $returnfl returnfl
     *
     * @return $this
     */
    public function setReturnfl($returnfl)
    {
        $this->container['returnfl'] = $returnfl;

        return $this;
    }

    /**
     * Gets ictype
     *
     * @return string
     */
    public function getIctype()
    {
        return $this->container['ictype'];
    }

    /**
     * Sets ictype
     *
     * @param string $ictype ictype
     *
     * @return $this
     */
    public function setIctype($ictype)
    {
        $this->container['ictype'] = $ictype;

        return $this;
    }

    /**
     * Gets camefrom
     *
     * @return string
     */
    public function getCamefrom()
    {
        return $this->container['camefrom'];
    }

    /**
     * Sets camefrom
     *
     * @param string $camefrom camefrom
     *
     * @return $this
     */
    public function setCamefrom($camefrom)
    {
        $this->container['camefrom'] = $camefrom;

        return $this;
    }

    /**
     * Gets orderno
     *
     * @return string
     */
    public function getOrderno()
    {
        return $this->container['orderno'];
    }

    /**
     * Sets orderno
     *
     * @param string $orderno orderno
     *
     * @return $this
     */
    public function setOrderno($orderno)
    {
        $this->container['orderno'] = $orderno;

        return $this;
    }

    /**
     * Gets ordersuf
     *
     * @return string
     */
    public function getOrdersuf()
    {
        return $this->container['ordersuf'];
    }

    /**
     * Sets ordersuf
     *
     * @param string $ordersuf ordersuf
     *
     * @return $this
     */
    public function setOrdersuf($ordersuf)
    {
        $this->container['ordersuf'] = $ordersuf;

        return $this;
    }

    /**
     * Gets lineno
     *
     * @return int
     */
    public function getLineno()
    {
        return $this->container['lineno'];
    }

    /**
     * Sets lineno
     *
     * @param int $lineno lineno
     *
     * @return $this
     */
    public function setLineno($lineno)
    {
        $this->container['lineno'] = $lineno;

        return $this;
    }

    /**
     * Gets seqno
     *
     * @return int
     */
    public function getSeqno()
    {
        return $this->container['seqno'];
    }

    /**
     * Sets seqno
     *
     * @param int $seqno seqno
     *
     * @return $this
     */
    public function setSeqno($seqno)
    {
        $this->container['seqno'] = $seqno;

        return $this;
    }

    /**
     * Gets retorderno
     *
     * @return string
     */
    public function getRetorderno()
    {
        return $this->container['retorderno'];
    }

    /**
     * Sets retorderno
     *
     * @param string $retorderno retorderno
     *
     * @return $this
     */
    public function setRetorderno($retorderno)
    {
        $this->container['retorderno'] = $retorderno;

        return $this;
    }

    /**
     * Gets retordersuf
     *
     * @return string
     */
    public function getRetordersuf()
    {
        return $this->container['retordersuf'];
    }

    /**
     * Sets retordersuf
     *
     * @param string $retordersuf retordersuf
     *
     * @return $this
     */
    public function setRetordersuf($retordersuf)
    {
        $this->container['retordersuf'] = $retordersuf;

        return $this;
    }

    /**
     * Gets retlineno
     *
     * @return int
     */
    public function getRetlineno()
    {
        return $this->container['retlineno'];
    }

    /**
     * Sets retlineno
     *
     * @param int $retlineno retlineno
     *
     * @return $this
     */
    public function setRetlineno($retlineno)
    {
        $this->container['retlineno'] = $retlineno;

        return $this;
    }

    /**
     * Gets retseqno
     *
     * @return int
     */
    public function getRetseqno()
    {
        return $this->container['retseqno'];
    }

    /**
     * Sets retseqno
     *
     * @param int $retseqno retseqno
     *
     * @return $this
     */
    public function setRetseqno($retseqno)
    {
        $this->container['retseqno'] = $retseqno;

        return $this;
    }

    /**
     * Gets currstatus
     *
     * @return string
     */
    public function getCurrstatus()
    {
        return $this->container['currstatus'];
    }

    /**
     * Sets currstatus
     *
     * @param string $currstatus currstatus
     *
     * @return $this
     */
    public function setCurrstatus($currstatus)
    {
        $this->container['currstatus'] = $currstatus;

        return $this;
    }

    /**
     * Gets reasunavty
     *
     * @return string
     */
    public function getReasunavty()
    {
        return $this->container['reasunavty'];
    }

    /**
     * Sets reasunavty
     *
     * @param string $reasunavty reasunavty
     *
     * @return $this
     */
    public function setReasunavty($reasunavty)
    {
        $this->container['reasunavty'] = $reasunavty;

        return $this;
    }

    /**
     * Gets cono2
     *
     * @return string
     */
    public function getCono2()
    {
        return $this->container['cono2'];
    }

    /**
     * Sets cono2
     *
     * @param string $cono2 cono2
     *
     * @return $this
     */
    public function setCono2($cono2)
    {
        $this->container['cono2'] = $cono2;

        return $this;
    }

    /**
     * Gets ourproc
     *
     * @return string
     */
    public function getOurproc()
    {
        return $this->container['ourproc'];
    }

    /**
     * Sets ourproc
     *
     * @param string $ourproc ourproc
     *
     * @return $this
     */
    public function setOurproc($ourproc)
    {
        $this->container['ourproc'] = $ourproc;

        return $this;
    }

    /**
     * Gets shiptowhse
     *
     * @return string
     */
    public function getShiptowhse()
    {
        return $this->container['shiptowhse'];
    }

    /**
     * Sets shiptowhse
     *
     * @param string $shiptowhse shiptowhse
     *
     * @return $this
     */
    public function setShiptowhse($shiptowhse)
    {
        $this->container['shiptowhse'] = $shiptowhse;

        return $this;
    }

    /**
     * Gets lotqty
     *
     * @return double
     */
    public function getLotqty()
    {
        return $this->container['lotqty'];
    }

    /**
     * Sets lotqty
     *
     * @param double $lotqty lotqty
     *
     * @return $this
     */
    public function setLotqty($lotqty)
    {
        $this->container['lotqty'] = $lotqty;

        return $this;
    }

    /**
     * Gets qtyunavail
     *
     * @return double
     */
    public function getQtyunavail()
    {
        return $this->container['qtyunavail'];
    }

    /**
     * Sets qtyunavail
     *
     * @param double $qtyunavail qtyunavail
     *
     * @return $this
     */
    public function setQtyunavail($qtyunavail)
    {
        $this->container['qtyunavail'] = $qtyunavail;

        return $this;
    }

    /**
     * Gets qtyavail
     *
     * @return double
     */
    public function getQtyavail()
    {
        return $this->container['qtyavail'];
    }

    /**
     * Sets qtyavail
     *
     * @param double $qtyavail qtyavail
     *
     * @return $this
     */
    public function setQtyavail($qtyavail)
    {
        $this->container['qtyavail'] = $qtyavail;

        return $this;
    }

    /**
     * Gets user1
     *
     * @return string
     */
    public function getUser1()
    {
        return $this->container['user1'];
    }

    /**
     * Sets user1
     *
     * @param string $user1 user1
     *
     * @return $this
     */
    public function setUser1($user1)
    {
        $this->container['user1'] = $user1;

        return $this;
    }

    /**
     * Gets user2
     *
     * @return string
     */
    public function getUser2()
    {
        return $this->container['user2'];
    }

    /**
     * Sets user2
     *
     * @param string $user2 user2
     *
     * @return $this
     */
    public function setUser2($user2)
    {
        $this->container['user2'] = $user2;

        return $this;
    }

    /**
     * Gets user3
     *
     * @return string
     */
    public function getUser3()
    {
        return $this->container['user3'];
    }

    /**
     * Sets user3
     *
     * @param string $user3 user3
     *
     * @return $this
     */
    public function setUser3($user3)
    {
        $this->container['user3'] = $user3;

        return $this;
    }

    /**
     * Gets user4
     *
     * @return string
     */
    public function getUser4()
    {
        return $this->container['user4'];
    }

    /**
     * Sets user4
     *
     * @param string $user4 user4
     *
     * @return $this
     */
    public function setUser4($user4)
    {
        $this->container['user4'] = $user4;

        return $this;
    }

    /**
     * Gets user5
     *
     * @return string
     */
    public function getUser5()
    {
        return $this->container['user5'];
    }

    /**
     * Sets user5
     *
     * @param string $user5 user5
     *
     * @return $this
     */
    public function setUser5($user5)
    {
        $this->container['user5'] = $user5;

        return $this;
    }

    /**
     * Gets user6
     *
     * @return double
     */
    public function getUser6()
    {
        return $this->container['user6'];
    }

    /**
     * Sets user6
     *
     * @param double $user6 user6
     *
     * @return $this
     */
    public function setUser6($user6)
    {
        $this->container['user6'] = $user6;

        return $this;
    }

    /**
     * Gets user7
     *
     * @return double
     */
    public function getUser7()
    {
        return $this->container['user7'];
    }

    /**
     * Sets user7
     *
     * @param double $user7 user7
     *
     * @return $this
     */
    public function setUser7($user7)
    {
        $this->container['user7'] = $user7;

        return $this;
    }

    /**
     * Gets user8
     *
     * @return \DateTime
     */
    public function getUser8()
    {
        return $this->container['user8'];
    }

    /**
     * Sets user8
     *
     * @param \DateTime $user8 user8
     *
     * @return $this
     */
    public function setUser8($user8)
    {
        $this->container['user8'] = $user8;

        return $this;
    }

    /**
     * Gets user9
     *
     * @return \DateTime
     */
    public function getUser9()
    {
        return $this->container['user9'];
    }

    /**
     * Sets user9
     *
     * @param \DateTime $user9 user9
     *
     * @return $this
     */
    public function setUser9($user9)
    {
        $this->container['user9'] = $user9;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


